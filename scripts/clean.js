#!/usr/bin/env node

/**
 * –ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–∞–ø–æ–∫
 * –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Windows, macOS –∏ Linux
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');
const os = require('os');

function removeDirectory(dirPath) {
  if (!fs.existsSync(dirPath)) {
    console.log(`üìÅ –ü–∞–ø–∫–∞ ${dirPath} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
    return;
  }
  
  try {
    console.log(`üóëÔ∏è  –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É: ${dirPath}`);
    
    if (os.platform() === 'win32') {
      execSync(`rmdir /s /q "${dirPath}"`, { stdio: 'inherit' });
    } else {
      execSync(`rm -rf "${dirPath}"`, { stdio: 'inherit' });
    }
    
    console.log(`‚úÖ –ü–∞–ø–∫–∞ ${dirPath} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏ ${dirPath}:`, error.message);
    process.exit(1);
  }
}

function main() {
  const args = process.argv.slice(2);
  
  if (args.length === 0) {
    console.log('üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/clean.js <–ø—É—Ç—å1> [–ø—É—Ç—å2] ...');
    console.log('–ü—Ä–∏–º–µ—Ä—ã:');
    console.log('  node scripts/clean.js node_modules');
    console.log('  node scripts/clean.js dist .next');
    console.log('  node scripts/clean.js packages/*/node_modules');
    process.exit(1);
  }
  
  console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É...\n');
  
  args.forEach(arg => {
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º glob –ø–∞—Ç—Ç–µ—Ä–Ω—ã
    if (arg.includes('*')) {
      const glob = require('glob');
      const matches = glob.sync(arg);
      if (matches.length === 0) {
        console.log(`üìÅ –ü–∞—Ç—Ç–µ—Ä–Ω ${arg} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        return;
      }
      matches.forEach(match => {
        const fullPath = path.resolve(match);
        removeDirectory(fullPath);
      });
    } else {
      const fullPath = path.resolve(arg);
      removeDirectory(fullPath);
    }
  });
  
  console.log('\nüéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

main();
