'use client';

import { useEffect, useState } from 'react';
import { useParams } from 'next/navigation';
import {
  Button,
  Card,
  CardContent,
  CardHeader,
  CardTitle,
} from '@turbo-super/ui';
import { CheckCircle, ArrowLeft, Coins } from 'lucide-react';
import Link from 'next/link';

interface PaymentSuccessData {
  sessionId: string;
  amount: number;
  currency: string;
  creditAmount?: number;
  status: 'success' | 'processing' | 'error';
}

export default function PaymentSuccessPage() {
  const params = useParams();
  const sessionId = params.sessionId as string;
  const [paymentData, setPaymentData] = useState<PaymentSuccessData | null>(
    null,
  );
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    if (sessionId) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ webhook
      const checkPaymentStatus = async () => {
        try {
          console.log('üîç Checking payment status for session:', sessionId);

          // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞ —á–µ—Ä–µ–∑ Stripe API
          // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ

          setPaymentData({
            sessionId,
            amount: 100,
            currency: 'usd',
            creditAmount: 100,
            status: 'success',
          });
          setLoading(false);
        } catch (error) {
          console.error('‚ùå Error checking payment status:', error);
          setLoading(false);
        }
      };

      checkPaymentStatus();
    }
  }, [sessionId]);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto" />
          <p className="mt-4 text-muted-foreground">–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂...</p>
        </div>
      </div>
    );
  }

  if (!paymentData) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardContent className="text-center py-8">
            <p className="text-red-600">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–∞</p>
            <Link href="/">
              <Button className="mt-4">–í–µ—Ä–Ω—É—Ç—å—Å—è</Button>
            </Link>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="min-h-screen flex items-center justify-center p-4">
      <Card className="w-full max-w-md">
        <CardHeader className="text-center">
          <div className="mx-auto w-16 h-16 bg-green-100 dark:bg-green-900/30 rounded-full flex items-center justify-center mb-4">
            <CheckCircle className="w-8 h-8 text-green-600 dark:text-green-400" />
          </div>
          <CardTitle className="text-2xl">–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!</CardTitle>
          <p className="text-muted-foreground">
            –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É. –í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω.
          </p>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="bg-green-50 dark:bg-green-950/30 border border-green-200 dark:border-green-800 rounded-lg p-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-2">
                <Coins className="w-5 h-5 text-green-600 dark:text-green-400" />
                <span className="font-medium">–î–æ–±–∞–≤–ª–µ–Ω–æ –∫—Ä–µ–¥–∏—Ç–æ–≤:</span>
              </div>
              <span className="text-lg font-bold text-green-600 dark:text-green-400">
                +{paymentData.creditAmount}
              </span>
            </div>
            <div className="flex items-center justify-between mt-2">
              <span className="text-sm text-muted-foreground">
                –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞:
              </span>
              <span className="text-sm font-medium">
                ${(paymentData.amount / 100).toFixed(2)}{' '}
                {paymentData.currency.toUpperCase()}
              </span>
            </div>
          </div>

          <div className="text-sm text-muted-foreground bg-blue-50 dark:bg-blue-950/30 border border-blue-200 dark:border-blue-800 rounded-lg p-3">
            <p className="font-medium mb-1">–ß—Ç–æ –¥–∞–ª—å—à–µ?</p>
            <ul className="space-y-1">
              <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫—Ä–µ–¥–∏—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</li>
              <li>‚Ä¢ –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é AI</li>
              <li>‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞</li>
            </ul>
          </div>

          <div className="flex gap-3">
            <Link href="/" className="flex-1">
              <Button className="w-full" variant="outline">
                <ArrowLeft className="w-4 h-4 mr-2" />
                –í–µ—Ä–Ω—É—Ç—å—Å—è
              </Button>
            </Link>
            <Link href="/tools" className="flex-1">
              <Button className="w-full">
                <Coins className="w-4 h-4 mr-2" />
                –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
              </Button>
            </Link>
          </div>

          <div className="text-xs text-muted-foreground text-center pt-4 border-t">
            <p>ID —Å–µ—Å—Å–∏–∏: {sessionId}</p>
            <p>–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É</p>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
