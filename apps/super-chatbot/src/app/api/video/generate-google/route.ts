import { type NextRequest, NextResponse } from 'next/server';
import { auth } from '@/app/(auth)/auth';
import { z } from 'zod';
import { validateOperationBalance } from '@/lib/utils/tools-balance';
import { createBalanceErrorResponse } from '@/lib/utils/balance-error-handler';

// Zod schema for video generation request validation
const videoGenerationSchema = z.object({
  prompt: z.string().min(1, '–ü—Ä–æ–º–ø—Ç –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'),
  duration: z.enum(['4s', '6s', '8s']).optional().default('8s'),
  aspectRatio: z.enum(['16:9', '9:16', '1:1']).optional().default('16:9'),
  resolution: z.enum(['720p', '1080p']).optional().default('720p'),
  negativePrompt: z.string().optional(),
});

/**
 * –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Google AI API Key –Ω–∞–ø—Ä—è–º—É—é –¥–ª—è Veo 3.1
 *
 * –í–ê–ñ–ù–û: Google Veo API —Ç—Ä–µ–±—É–µ—Ç OAuth2 —Ç–æ–∫–µ–Ω, –∞ –Ω–µ API –∫–ª—é—á.
 * –≠—Ç–æ—Ç endpoint —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤–µ—Ä–Ω–µ—Ç –æ—à–∏–±–∫—É
 * "API keys are not supported by this API. Expected OAuth2 access token"
 *
 * –ï—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ —ç—Ç—É –æ—à–∏–±–∫—É - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /api/video/generate (Fal.ai)
 */
export async function POST(request: NextRequest) {
  try {
    console.log('üé¨ Video Generate Google API called');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ Auth0
    const session = await auth();
    if (!session?.user) {
      return NextResponse.json(
        { error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è' },
        { status: 401 },
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Google AI API Key
    const apiKey = process.env.GOOGLE_AI_API_KEY;
    if (!apiKey) {
      return NextResponse.json(
        {
          error: 'GOOGLE_AI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω',
          hint: '–î–æ–±–∞–≤—å—Ç–µ GOOGLE_AI_API_KEY –≤ .env.local',
        },
        { status: 500 },
      );
    }

    // –ü–∞—Ä—Å–∏–º –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
    const body = await request.json();
    const validatedData = videoGenerationSchema.parse(body);

    console.log('üé¨ Validated video request:', {
      prompt: `${validatedData.prompt.substring(0, 50)}...`,
      duration: validatedData.duration,
      aspectRatio: validatedData.aspectRatio,
      resolution: validatedData.resolution,
    });

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userId = session.user.id;
    const generationType = 'text-to-video';

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    const multipliers: string[] = [];
    const durationSeconds = Number.parseInt(validatedData.duration);

    if (durationSeconds <= 5) multipliers.push('duration-5s');
    else if (durationSeconds <= 10) multipliers.push('duration-10s');
    else if (durationSeconds <= 15) multipliers.push('duration-15s');

    // –î–æ–±–∞–≤–ª—è–µ–º –º–Ω–æ–∂–∏—Ç–µ–ª—å –∑–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
    if (validatedData.resolution === '1080p') {
      multipliers.push('hd-quality');
    }

    const balanceValidation = await validateOperationBalance(
      userId,
      'video-generation',
      generationType,
      multipliers,
    );

    if (!balanceValidation.valid) {
      const errorResponse = createBalanceErrorResponse(
        balanceValidation,
        generationType,
      );
      return NextResponse.json(errorResponse, { status: 402 });
    }

    console.log(
      `üí≥ User ${userId} has sufficient balance for ${generationType} (${balanceValidation.cost} credits)`,
    );

    // –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–∑–≤–∞—Ç—å Google Veo 3.1 API –Ω–∞–ø—Ä—è–º—É—é
    const GOOGLE_VEO_API =
      'https://generativelanguage.googleapis.com/v1beta/models/veo-3.1-generate-preview:predictLongRunning';

    console.log(
      'üöÄ Attempting to call Google Veo 3.1 API with GOOGLE_AI_API_KEY...',
    );
    console.log(
      '‚ö†Ô∏è –í–µ—Ä–æ—è—Ç–Ω–æ –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É - Google —Ç—Ä–µ–±—É–µ—Ç OAuth2, –∞ –Ω–µ API –∫–ª—é—á',
    );

    const response = await fetch(GOOGLE_VEO_API, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-goog-api-key': apiKey,
      },
      body: JSON.stringify({
        instances: [
          {
            prompt: validatedData.prompt,
            ...(validatedData.negativePrompt && {
              negativePrompt: validatedData.negativePrompt,
            }),
          },
        ],
        parameters: {
          aspectRatio: validatedData.aspectRatio,
          resolution: validatedData.resolution,
          durationSeconds: durationSeconds,
        },
      }),
    });

    const responseText = await response.text();
    console.log('üìã Google API Response Status:', response.status);
    console.log('üìã Google API Response:', responseText);

    if (!response.ok) {
      // –í–µ—Ä–æ—è—Ç–Ω–æ –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É –ø—Ä–æ OAuth2
      let errorDetails = responseText;
      try {
        const errorJson = JSON.parse(responseText);
        errorDetails = errorJson.error?.message || responseText;
      } catch {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞
      }

      return NextResponse.json(
        {
          success: false,
          error: 'Google Veo API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç API –∫–ª—é—á–∏',
          details: errorDetails,
          recommendation: {
            message: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /api/video/generate –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ endpoint',
            reason: 'Google Veo —Ç—Ä–µ–±—É–µ—Ç OAuth2 —Ç–æ–∫–µ–Ω, –∞ –Ω–µ API –∫–ª—é—á',
            solution:
              '–ü–æ–ª—É—á–∏—Ç–µ Fal.ai –∫–ª—é—á –Ω–∞ https://fal.ai - –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø—Ä–æ—Å—Ç—ã–º–∏ API –∫–ª—é—á–∞–º–∏',
          },
        },
        { status: 400 },
      );
    }

    // –ï—Å–ª–∏ –∫–∞–∫–∏–º-—Ç–æ —á—É–¥–æ–º —Å—Ä–∞–±–æ—Ç–∞–ª–æ - –ø–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç
    const operationData = JSON.parse(responseText);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID —Ñ–∞–π–ª–∞
    const fileId = `google-direct-${Date.now()}-${Math.random().toString(36).substring(7)}`;

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç–≤–µ—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ–ø–µ—Ä–∞—Ü–∏–∏
    return NextResponse.json({
      success: true,
      fileId,
      operationName: operationData.name,
      status: 'processing',
      message: 'üéâ –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ —Å—Ä–∞–±–æ—Ç–∞–ª–æ! –í–∏–¥–µ–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è...',
      data: {
        id: fileId,
        operationName: operationData.name,
        prompt: validatedData.prompt,
        timestamp: Date.now(),
        settings: {
          duration: durationSeconds,
          aspectRatio: validatedData.aspectRatio,
          resolution: validatedData.resolution,
        },
      },
      provider: 'google-direct',
      model: 'veo-3.1',
      note: '–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ /api/video/status/:operationName',
    });
  } catch (error) {
    console.error('üí• Video Generate Google API error:', error);

    if (error instanceof z.ZodError) {
      return NextResponse.json(
        {
          error: '–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
          details: error.errors,
        },
        { status: 400 },
      );
    }

    const errorMessage =
      error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';

    return NextResponse.json(
      {
        success: false,
        error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Google API',
        details: errorMessage,
        recommendation: {
          message: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /api/video/generate (Fal.ai) –≤–º–µ—Å—Ç–æ',
          reason: 'Google Veo API —Ç—Ä–µ–±—É–µ—Ç —Å–ª–æ–∂–Ω—É—é OAuth2 –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é',
        },
      },
      { status: 500 },
    );
  }
}

// GET –∑–∞–ø—Ä–æ—Å –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
export async function GET() {
  try {
    console.log('üé¨ Video Generate Google info API called');

    const hasApiKey = !!process.env.GOOGLE_AI_API_KEY;

    return NextResponse.json({
      success: true,
      configured: hasApiKey,
      warning: '–≠—Ç–æ—Ç endpoint –∏—Å–ø–æ–ª—å–∑—É–µ—Ç GOOGLE_AI_API_KEY –Ω–∞–ø—Ä—è–º—É—é',
      expectedResult: '–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤–µ—Ä–Ω–µ—Ç –æ—à–∏–±–∫—É OAuth2',
      recommendation: {
        use: '/api/video/generate',
        provider: 'Fal.ai',
        reason: 'Google Veo —Ç—Ä–µ–±—É–µ—Ç OAuth2, –∞ –Ω–µ API –∫–ª—é—á',
        setup: '–ü–æ–ª—É—á–∏—Ç–µ Fal.ai –∫–ª—é—á –Ω–∞ https://fal.ai',
      },
      data: {
        provider: 'google-direct',
        model: 'veo-3.1',
        durations: ['4s', '6s', '8s'],
        aspectRatios: ['16:9', '9:16', '1:1'],
        resolutions: ['720p', '1080p'],
      },
    });
  } catch (error) {
    console.error('üé¨ Video Generate Google info API error:', error);

    return NextResponse.json(
      {
        error: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
        details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞',
      },
      { status: 500 },
    );
  }
}
