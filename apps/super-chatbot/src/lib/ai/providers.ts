import {
  customProvider,
} from 'ai';
import { createGoogleGenerativeAI } from '@ai-sdk/google';

// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º @ai-sdk/google —Å GOOGLE_AI_API_KEY
// –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–∑ –∫–æ—Ä–æ–±–∫–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç streaming + tools
const google = createGoogleGenerativeAI({
  apiKey: process.env.GOOGLE_AI_API_KEY || '',
});

/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π Gemini
 *
 * –ë—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π —á–µ—Ä–µ–∑ .env.local:
 * - GEMINI_MAIN_MODEL=gemini-2.5-flash (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
 * - GEMINI_PRO_MODEL=gemini-2.5-pro (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
 * - GEMINI_FLASH_MODEL=gemini-2.5-flash (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
 *
 * –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ (—Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ list-gemini-models.mjs):
 * - gemini-2.5-flash - –°—Ç–∞–±–∏–ª—å–Ω–∞—è, –±—ã—Å—Ç—Ä–∞—è, –∏—é–Ω—å 2025
 * - gemini-2.5-flash-lite - –û–±–ª–µ–≥—á–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
 * - gemini-2.5-pro - Pro –≤–µ—Ä—Å–∏—è
 * - gemini-2.0-flash - Flash 2.0
 * - gemini-2.0-flash-001 - –°—Ç–∞–±–∏–ª—å–Ω–∞—è 2.0
 * - gemini-flash-latest - –í—Å–µ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è Flash
 * - gemini-pro-latest - –í—Å–µ–≥–¥–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è Pro
 *
 * –ü—Ä–∏ –∏—Å—á–µ—Ä–ø–∞–Ω–∏–∏ –∫–≤–æ—Ç—ã:
 * 1. –û—Ç–∫—Ä–æ–π—Ç–µ .env.local
 * 2. –î–æ–±–∞–≤—å—Ç–µ: GEMINI_MAIN_MODEL=gemini-2.0-flash
 * 3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä
 */
const GEMINI_CONFIG = {
  main: process.env.GEMINI_MAIN_MODEL || 'gemini-2.5-flash',
  pro: process.env.GEMINI_PRO_MODEL || 'gemini-2.5-pro',
  flash: process.env.GEMINI_FLASH_MODEL || 'gemini-2.5-flash',
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å fallback –º–æ–¥–µ–ª–∏ –ø—Ä–∏ –∏—Å—á–µ—Ä–ø–∞–Ω–∏–∏ –∫–≤–æ—Ç—ã
  fallback: process.env.GEMINI_FALLBACK_MODEL || 'gemini-2.0-flash-001',
};

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –º–æ–¥–µ–ª–µ–π –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
console.log('ü§ñ Gemini Models Configuration:');
console.log(`   Main: ${GEMINI_CONFIG.main}`);
console.log(`   Pro: ${GEMINI_CONFIG.pro}`);
console.log(`   Flash: ${GEMINI_CONFIG.flash}`);
console.log(`   Fallback: ${GEMINI_CONFIG.fallback}`);

// –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const mainModel = google(GEMINI_CONFIG.main);
const proModel = google(GEMINI_CONFIG.pro);
const flashModel = google(GEMINI_CONFIG.flash);
const nanoBananaModel = google(GEMINI_CONFIG.main); // Nano Banana –∏—Å–ø–æ–ª—å–∑—É–µ—Ç main –º–æ–¥–µ–ª—å

// Azure OpenAI (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –∫–ª—é—á –∏—Å—Ç—ë–∫ –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint)
// import { createAzure } from '@ai-sdk/azure';
// const customAzure = createAzure({
//   apiKey: process.env.AZURE_OPENAI_API_KEY || '',
//   resourceName: process.env.AZURE_OPENAI_RESOURCE_NAME || '',
//   apiVersion: process.env.AZURE_OPENAI_API_VERSION || '2025-04-01-preview',
// });
// const mainModel = customAzure('model-router');

// Create provider - mock models are only loaded in test environment to avoid bundling vitest
export const myProvider: ReturnType<typeof customProvider> = customProvider({
  languageModels: {
    'chat-model': nanoBananaModel, // Nano Banana (Gemini 2.0 Flash) - default for chat
    'nano-banana': nanoBananaModel, // Explicit Nano Banana model
    'chat-model-reasoning': proModel, // Google Gemini 1.5 Pro
    'o3-reasoning': proModel, // Gemini Pro –¥–ª—è reasoning
    'o3-pro-reasoning': proModel, // Gemini Pro –¥–ª—è advanced reasoning
    'gemini-1.5-flash': flashModel, // Gemini 1.5 Flash
    'gemini-1.5-pro': proModel, // Gemini 1.5 Pro
    'gemini-2.0-flash-exp': flashModel, // Alias (2.0 not supported with API key)
    'gemini-2.5-flash-lite': flashModel, // Alias
    'title-model': flashModel, // –ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    'artifact-model': nanoBananaModel, // Nano Banana –¥–ª—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
  },
});
