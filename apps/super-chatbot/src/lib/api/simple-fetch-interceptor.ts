/**
 * –ü—Ä–æ—Å—Ç–æ–π fetch –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ SuperDuperAI
 */

import { getSuperduperToken } from '@/lib/config/token-cache';

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π fetch
const originalFetch = globalThis.fetch;

/**
 * –ü–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ fetch –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
 */

async function interceptedFetch(
  input: RequestInfo | URL,
  init: RequestInit = {},
): Promise<Response> {
  let url: string;

  // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –≤—Ö–æ–¥–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  if (typeof input === 'string') {
    url = input;
  } else if (input instanceof URL) {
    url = input.toString();
  } else if (input instanceof Request) {
    url = input.url;
  } else {
    url = '';
  }

  // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –∏–¥–µ—Ç –∫ SuperDuperAI API
  if (url.includes('/api/v1/')) {
    console.log('üîç Intercepting SuperDuperAI API request:', url);

    // –ù–∞ –∫–ª–∏–µ–Ω—Ç–µ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏
    if (typeof window !== 'undefined') {
      const proxyUrl = url.replace(/^.*\/api\/v1\//, '/api/proxy/');
      console.log('üîÑ Redirecting to proxy:', proxyUrl);
      return originalFetch(proxyUrl, init);
    }

    // –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ - –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω
    const token = getSuperduperToken();
    const headers = new Headers(init.headers);
    headers.set('Authorization', `Bearer ${token}`);

    // –ù–ï —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Content-Type –¥–ª—è FormData - –±—Ä–∞—É–∑–µ—Ä —Å–∞–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç —Å boundary
    if (!(init.body instanceof FormData)) {
      headers.set('Content-Type', 'application/json');
    }

    console.log('üîë Added SuperDuperAI token to server request');

    return originalFetch(input, {
      ...init,
      headers,
    });
  }

  // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π fetch
  return originalFetch(input, init);
}

/**
 * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä
 */
export function setupFetchInterceptor(): void {
  if (globalThis.fetch !== interceptedFetch) {
    console.log('üîß Setting up simple fetch interceptor');
    globalThis.fetch = interceptedFetch;
  }
}

/**
 * –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π fetch
 */
export function restoreFetch(): void {
  globalThis.fetch = originalFetch;
  console.log('üîß Restored original fetch');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
if (
  typeof globalThis !== 'undefined' &&
  typeof globalThis.fetch === 'function'
) {
  setupFetchInterceptor();
}
