#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å middleware –≤ —Ç—É—Ä–±–æ—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
 */

const fs = require('node:fs');
const path = require('node:path');

console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å middleware –≤ —Ç—É—Ä–±–æ—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
const projectRoot = path.resolve(__dirname, '..');
const workspaceRoot = path.resolve(projectRoot, '..', '..');

console.log('üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:');
console.log(`   –ü—Ä–æ–µ–∫—Ç: ${projectRoot}`);
console.log(`   Workspace: ${workspaceRoot}\n`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ middleware
const middlewarePath = path.join(projectRoot, 'middleware.ts');
if (fs.existsSync(middlewarePath)) {
  console.log('‚úÖ Middleware –Ω–∞–π–¥–µ–Ω');
  const middlewareContent = fs.readFileSync(middlewarePath, 'utf8');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
  const hasMatcher = middlewareContent.includes('export const config');
  const hasEdgeRuntime = middlewareContent.includes('runtime: "edge"');
  const hasComplexLogic =
    middlewareContent.includes('try {') &&
    middlewareContent.includes('} catch');

  console.log(`   Matcher: ${hasMatcher ? '‚ùå –ù–∞–π–¥–µ–Ω' : '‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
  console.log(
    `   Edge Runtime: ${hasEdgeRuntime ? '‚ùå –ù–∞–π–¥–µ–Ω' : '‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`,
  );
  console.log(
    `   –°–ª–æ–∂–Ω–∞—è –ª–æ–≥–∏–∫–∞: ${hasComplexLogic ? '‚ùå –ù–∞–π–¥–µ–Ω–∞' : '‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`,
  );
} else {
  console.log('‚ùå Middleware –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º next.config
const nextConfigPath = path.join(projectRoot, 'next.config.ts');
if (fs.existsSync(nextConfigPath)) {
  console.log('\n‚úÖ Next.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞');
  const configContent = fs.readFileSync(nextConfigPath, 'utf8');

  const hasExperimental = configContent.includes('experimental:');
  const hasTurbo = configContent.includes('turbo:');
  const hasSentry = configContent.includes('withSentryConfig');

  console.log(
    `   Experimental: ${hasExperimental ? '‚úÖ –ù–∞–π–¥–µ–Ω–æ' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`,
  );
  console.log(`   Turbo: ${hasTurbo ? '‚úÖ –ù–∞–π–¥–µ–Ω–æ' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
  console.log(`   Sentry: ${hasSentry ? '‚ùå –ù–∞–π–¥–µ–Ω' : '‚úÖ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
} else {
  console.log('\n‚ùå Next.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
const packageJsonPath = path.join(projectRoot, 'package.json');
if (fs.existsSync(packageJsonPath)) {
  console.log('\n‚úÖ Package.json –Ω–∞–π–¥–µ–Ω');
  const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));

  const nextVersion = packageJson.dependencies?.next;
  const reactVersion = packageJson.dependencies?.react;
  const hasWorkspaceDeps = Object.keys(packageJson.dependencies || {}).some(
    (dep) => dep.startsWith('@turbo-super/'),
  );

  console.log(`   Next.js –≤–µ—Ä—Å–∏—è: ${nextVersion || '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
  console.log(`   React –≤–µ—Ä—Å–∏—è: ${reactVersion || '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞'}`);
  console.log(
    `   Workspace –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${hasWorkspaceDeps ? '‚úÖ –ù–∞–π–¥–µ–Ω—ã' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}`,
  );
} else {
  console.log('\n‚ùå Package.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º turbo.json
const turboJsonPath = path.join(workspaceRoot, 'turbo.json');
if (fs.existsSync(turboJsonPath)) {
  console.log('\n‚úÖ Turbo.json –Ω–∞–π–¥–µ–Ω');
  const turboJson = JSON.parse(fs.readFileSync(turboJsonPath, 'utf8'));

  const hasBuildTask = turboJson.tasks?.build;
  const hasGlobalEnv = turboJson.globalEnv;

  console.log(
    `   Build task: ${hasBuildTask ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`,
  );
  console.log(
    `   Global env: ${hasGlobalEnv ? '‚úÖ –ù–∞–π–¥–µ–Ω—ã' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}`,
  );
} else {
  console.log('\n‚ùå Turbo.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
}

console.log('\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ middleware –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Edge Runtime');
console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ matcher –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É–µ—Ç —Å —Ç—É—Ä–±–æ—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º');
console.log('3. –û—Ç–∫–ª—é—á–∏—Ç–µ Sentry –≤ middleware –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏');
console.log('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä—Å–∏–∏ Next.js –∏ React –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å');
console.log('5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ workspace –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã');

console.log('\nüöÄ –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
console.log('   pnpm build');
console.log('   pnpm start');
