{"version":3,"sources":["../src/veo3-tools/translations/en.json","../src/veo3-tools/translations/ru.json","../src/veo3-tools/translations/tr.json","../src/veo3-tools/translations/es.json","../src/veo3-tools/translations/hi.json","../src/veo3-tools/translations/index.ts","../src/veo3-tools/hooks/use-translation.ts","../src/veo3-tools/components/MoodboardUploader.tsx","../src/veo3-tools/components/PromptBuilder.tsx","../src/veo3-tools/components/PromptPreview.tsx","../src/veo3-tools/components/AIEnhancement.tsx","../src/veo3-tools/components/PromptHistory.tsx","../src/veo3-tools/utils/index.ts","../src/veo3-tools/constants/index.ts","../src/veo3-tools/components/Veo3PromptGenerator.tsx","../src/veo3-tools/types/index.ts","../src/video-player/hooks/use-media-prefetch.ts","../src/video-player/utils/video-utils.ts","../src/video-player/remotion/utils.ts","../src/video-player/remotion/components/scene.tsx","../src/fabric-editor/canvas.tsx","../src/fabric-editor/controller.ts","../src/fabric-editor/hook.ts","../src/fabric-editor/text-toolbar.tsx","../src/video-player/remotion/components/scenes.tsx","../src/video-player/remotion/components/audio-player.tsx","../src/video-player/remotion/components/volumes.tsx","../src/video-player/remotion/components/video-component.tsx","../src/video-player/remotion/player.tsx","../src/project-timeline/hooks/useGenerateTimeline.ts","../src/project-timeline/utils/project-utils.ts","../src/project-timeline/helper.ts","../src/project-timeline/components/player.tsx","../src/project-timeline/components/scene.tsx","../src/project-timeline/timeline-wrapper.tsx","../src/project-timeline/project-timeline.tsx","../src/inpainting/layer.tsx","../../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs","../src/inpainting/control/inpainting-tools.tsx","../src/inpainting/control/inpainting-form.tsx","../src/inpainting/control/index.tsx","../src/inpainting/inpainting.tsx"],"names":["useRef","jsxs","jsx","Label","Badge","Card","CardHeader","CardTitle","CardContent","MoodboardUploader","Textarea","Button","Trash2","copyToClipboard","Copy","Shuffle","Sparkles","Fragment","Loader2","Settings","ChevronUp","ChevronDown","StripePaymentButton","localeToLanguage","useState","useEffect","enhancedPrompt","promptData","BookOpen","Tabs","TabsList","TabsTrigger","TabsContent","prefetch","useMemo","FileTypeEnum","OffthreadVideo","Img","memo","canvas","obj","FONTS","loadFonts","Textbox","AlignGuidelines","CenteringGuidelines","Canvas","width","height","getCompactFontData","properties","X","ScrollArea","FontFamily","FontStyle","FontSize","FontColor","Alignment","TextDecoration","Opacity","BackgroundColor","useVideoConfig","AbsoluteFill","TransitionSeries","fade","linearTiming","Easing","Audio","Series","useCallback","Player","ProjectService","error","mediaTypeMap","useStore","RemotionPlayer","Composition","Scene","StateManager","trackItemDetailsMap","eventBus","SCENE_LOAD","useTimelineEvents","useTimelineHotkeys","useItemsHotkeys","isEqual","ArrowLeft","HistoryButtons","Download","MenuList","MenuItem","ControlList","ControlItem","TimelineComponent","FabricCircle","PencilBrush","Palette","Circle"],"mappings":"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","file":"index.js","sourcesContent":["{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"Master VEO3 Video Generation\",\r\n      \"description\": \"Learn professional prompting techniques and best practices for Google's most advanced AI video model.\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"Prompt Builder\",\r\n      \"enhance\": \"AI Enhancement\",\r\n      \"history\": \"History\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"Scene\",\r\n      \"scenePlaceholder\": \"Describe the setting, environment, or location...\",\r\n      \"style\": \"Style\",\r\n      \"stylePlaceholder\": \"Artistic, photorealistic, cinematic, etc...\",\r\n      \"camera\": \"Camera\",\r\n      \"cameraPlaceholder\": \"Camera movement, angle, shot type...\",\r\n      \"characters\": \"Characters\",\r\n      \"addCharacter\": \"Add Character\",\r\n      \"characterName\": \"Name\",\r\n      \"characterNamePlaceholder\": \"Character name (e.g., Sarah, Vendor)\",\r\n      \"characterDescription\": \"Description\",\r\n      \"characterDescriptionPlaceholder\": \"Describe the character (e.g., A young woman with wavy brown hair)\",\r\n      \"characterSpeech\": \"Speech/Dialogue\",\r\n      \"characterSpeechPlaceholder\": \"What they say (e.g., Hello there! or Привет!)\",\r\n      \"characterNumber\": \"Character\",\r\n      \"hasVoice\": \"Has Voice\",\r\n      \"voiceHighlight\": \"This dialogue will be highlighted in the enhanced prompt\",\r\n      \"removeCharacter\": \"Remove\",\r\n      \"action\": \"Action\",\r\n      \"actionPlaceholder\": \"What's happening in the scene...\",\r\n      \"lighting\": \"Lighting\",\r\n      \"lightingPlaceholder\": \"Natural, dramatic, soft, etc...\",\r\n      \"mood\": \"Mood\",\r\n      \"moodPlaceholder\": \"Emotional atmosphere, tone...\",\r\n      \"language\": \"Language\",\r\n      \"languagePlaceholder\": \"Enter language (e.g., English, Russian, Spanish...)\",\r\n      \"quickSelect\": \"Quick select:\",\r\n      \"moodboard\": \"Moodboard\",\r\n      \"moodboardEnabled\": \"Enable moodboard\",\r\n      \"moodboardDescription\": \"Upload reference images to guide generation\",\r\n      \"noCharacters\": \"No characters added yet. Click \\\"Add Character\\\" to start.\",\r\n      \"moodboardTitle\": \"Enable Moodboard References\",\r\n      \"moodboardImages\": \"0/3 images\",\r\n      \"visualReferences\": \"Visual References\",\r\n      \"uploadImages\": \"📁 Click to Upload Images\",\r\n      \"uploadDescription\": \"Select up to 3 images to use as visual references\",\r\n      \"supportedFormats\": \"Supported formats: JPG, PNG, GIF, WebP\",\r\n      \"moodboardTips\": \"🎨 Moodboard Tips\",\r\n      \"tip1\": \"Upload reference images to influence your VEO3 generation\",\r\n      \"tip2\": \"Add descriptions to highlight specific elements you want emphasized\",\r\n      \"tip3\": \"Adjust influence weight to control how much each image affects the result\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"Generated Prompt\",\r\n      \"copyButton\": \"Copy\",\r\n      \"copied\": \"Copied!\",\r\n      \"randomizeButton\": \"Randomize\",\r\n      \"clearButton\": \"Clear All\",\r\n      \"enhanceButton\": \"Continue to AI Enhancement →\",\r\n      \"placeholder\": \"Your generated prompt will appear here, or type your own prompt...\",\r\n      \"preview\": \"Preview\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"AI Enhancement\",\r\n      \"description\": \"Enhance your prompt with advanced AI techniques\",\r\n      \"focusTypes\": {\r\n        \"character\": \"Character Focus\",\r\n        \"action\": \"Action Focus\", \r\n        \"cinematic\": \"Cinematic Focus\",\r\n        \"safe\": \"Safe Content\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"Enhancement Settings\",\r\n        \"characterLimit\": \"Character Limit\",\r\n        \"includeAudio\": \"Include Audio Description\",\r\n        \"model\": \"AI Model\"\r\n      },\r\n      \"enhanceButton\": \"Enhance Prompt\",\r\n      \"enhancing\": \"Enhancing...\",\r\n      \"enhanceError\": \"Enhancement failed\",\r\n             \"enhancementInfo\": {\r\n         \"model\": \"Model\",\r\n         \"length\": \"Length\",\r\n         \"actualCharacters\": \"Actual Characters\",\r\n         \"targetCharacters\": \"Target Characters\"\r\n       },\r\n       \"focus\": \"focus\"\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"Prompt History\",\r\n      \"empty\": \"No prompts in history yet\",\r\n      \"loadButton\": \"Load\",\r\n      \"clearButton\": \"Clear History\",\r\n      \"columns\": {\r\n        \"timestamp\": \"Date\",\r\n        \"basicPrompt\": \"Basic Prompt\",\r\n        \"enhancedPrompt\": \"Enhanced Prompt\",\r\n        \"length\": \"Length\",\r\n        \"model\": \"Model\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"Loading...\",\r\n      \"error\": \"Error\",\r\n      \"success\": \"Success\",\r\n      \"cancel\": \"Cancel\",\r\n      \"save\": \"Save\",\r\n      \"delete\": \"Delete\",\r\n      \"edit\": \"Edit\",\r\n      \"close\": \"Close\"\r\n    }\r\n  }\r\n}\r\n","{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"Освойте генерацию видео VEO3\",\r\n      \"description\": \"Изучите профессиональные техники промптинга и лучшие практики для самой продвинутой AI-модели видео от Google.\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"Конструктор промптов\",\r\n      \"enhance\": \"AI-улучшение\",\r\n      \"history\": \"История\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"Сцена\",\r\n      \"scenePlaceholder\": \"Опишите обстановку, окружение или место действия...\",\r\n      \"style\": \"Стиль\",\r\n      \"stylePlaceholder\": \"Художественный, фотореалистичный, кинематографичный и т.д...\",\r\n      \"camera\": \"Камера\",\r\n      \"cameraPlaceholder\": \"Движение камеры, угол, тип кадра...\",\r\n      \"characters\": \"Персонажи\",\r\n      \"addCharacter\": \"Добавить персонажа\",\r\n      \"characterName\": \"Имя\",\r\n      \"characterNamePlaceholder\": \"Имя персонажа (например, Сара, Продавец)\",\r\n      \"characterDescription\": \"Описание\",\r\n      \"characterDescriptionPlaceholder\": \"Опишите персонажа (например, Молодая женщина с волнистыми каштановыми волосами)\",\r\n      \"characterSpeech\": \"Речь/Диалог\",\r\n      \"characterSpeechPlaceholder\": \"Что они говорят (например, Привет! или Hello!)\",\r\n      \"characterNumber\": \"Персонаж\",\r\n      \"hasVoice\": \"Есть голос\",\r\n      \"voiceHighlight\": \"Этот диалог будет выделен в улучшенном промпте\",\r\n      \"removeCharacter\": \"Удалить\",\r\n      \"action\": \"Действие\",\r\n      \"actionPlaceholder\": \"Что происходит в сцене...\",\r\n      \"lighting\": \"Освещение\",\r\n      \"lightingPlaceholder\": \"Естественное, драматичное, мягкое и т.д...\",\r\n      \"mood\": \"Настроение\",\r\n      \"moodPlaceholder\": \"Эмоциональная атмосфера, тон...\",\r\n      \"language\": \"Язык\",\r\n      \"languagePlaceholder\": \"Введите язык (например, Английский, Русский, Испанский...)\",\r\n      \"quickSelect\": \"Быстрый выбор:\",\r\n      \"moodboard\": \"Мудборд\",\r\n      \"moodboardEnabled\": \"Включить мудборд\",\r\n      \"moodboardDescription\": \"Загрузите референсные изображения для направления генерации\",\r\n      \"noCharacters\": \"Персонажи еще не добавлены. Нажмите «Добавить персонажа», чтобы начать.\",\r\n      \"moodboardTitle\": \"Включить мудборд\",\r\n      \"moodboardImages\": \"0/3 изображений\",\r\n      \"visualReferences\": \"Визуальные ссылки\",\r\n      \"uploadImages\": \"📁 Нажмите для загрузки изображений\",\r\n      \"uploadDescription\": \"Выберите до 3 изображений для использования в качестве визуальных ссылок\",\r\n      \"supportedFormats\": \"Поддерживаемые форматы: JPG, PNG, GIF, WebP\",\r\n      \"moodboardTips\": \"🎨 Советы по мудборду\",\r\n      \"tip1\": \"Загрузите референсные изображения для влияния на генерацию VEO3\",\r\n      \"tip2\": \"Добавьте описания для выделения конкретных элементов, которые хотите подчеркнуть\",\r\n      \"tip3\": \"Настройте вес влияния для контроля того, насколько каждое изображение влияет на результат\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"Сгенерированный промпт\",\r\n      \"copyButton\": \"Копировать\",\r\n      \"copied\": \"Скопировано!\",\r\n      \"randomizeButton\": \"Случайно\",\r\n      \"clearButton\": \"Очистить всё\",\r\n      \"enhanceButton\": \"Продолжить к AI-улучшению →\",\r\n      \"placeholder\": \"Ваш сгенерированный промпт появится здесь, или введите свой собственный промпт...\",\r\n      \"preview\": \"Предварительный просмотр\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"AI-улучшение\",\r\n      \"description\": \"Улучшите ваш промпт с помощью продвинутых AI-техник\",\r\n      \"focusTypes\": {\r\n        \"character\": \"Фокус на персонажах\",\r\n        \"action\": \"Фокус на действии\",\r\n        \"cinematic\": \"Кинематографический фокус\",\r\n        \"safe\": \"Безопасный контент\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"Настройки улучшения\",\r\n        \"characterLimit\": \"Лимит символов\",\r\n        \"includeAudio\": \"Включить описание аудио\",\r\n        \"model\": \"AI-модель\"\r\n      },\r\n      \"enhanceButton\": \"Улучшить промпт\",\r\n      \"enhancing\": \"Улучшение...\",\r\n      \"enhanceError\": \"Ошибка улучшения\",\r\n             \"enhancementInfo\": {\r\n         \"model\": \"Модель\",\r\n         \"length\": \"Длина\",\r\n         \"actualCharacters\": \"Фактическое количество символов\",\r\n         \"targetCharacters\": \"Целевое количество символов\"\r\n       },\r\n       \"focus\": \"фокус\"\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"История промптов\",\r\n      \"empty\": \"История промптов пока пуста\",\r\n      \"loadButton\": \"Загрузить\",\r\n      \"clearButton\": \"Очистить историю\",\r\n      \"columns\": {\r\n        \"timestamp\": \"Дата\",\r\n        \"basicPrompt\": \"Базовый промпт\",\r\n        \"enhancedPrompt\": \"Улучшенный промпт\",\r\n        \"length\": \"Длина\",\r\n        \"model\": \"Модель\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"Загрузка...\",\r\n      \"error\": \"Ошибка\",\r\n      \"success\": \"Успешно\",\r\n      \"cancel\": \"Отмена\",\r\n      \"save\": \"Сохранить\",\r\n      \"delete\": \"Удалить\",\r\n      \"edit\": \"Редактировать\",\r\n      \"close\": \"Закрыть\"\r\n    }\r\n  }\r\n}\r\n","{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"VEO3 Video Üretiminde Uzmanlaşın\",\r\n      \"description\": \"Google'ın en gelişmiş AI video modeli için profesyonel prompt tekniklerini ve en iyi uygulamaları öğrenin.\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"Prompt Oluşturucu\",\r\n      \"enhance\": \"AI Geliştirme\",\r\n      \"history\": \"Geçmiş\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"Sahne\",\r\n      \"scenePlaceholder\": \"Ortamı, çevreyi veya konumu açıklayın...\",\r\n      \"style\": \"Stil\",\r\n      \"stylePlaceholder\": \"Sanatsal, foto-gerçekçi, sinematik, vb...\",\r\n      \"camera\": \"Kamera\",\r\n      \"cameraPlaceholder\": \"Kamera hareketi, açı, çekim türü...\",\r\n      \"characters\": \"Karakterler\",\r\n      \"addCharacter\": \"Karakter Ekle\",\r\n      \"characterName\": \"İsim\",\r\n      \"characterDescription\": \"Açıklama\",\r\n      \"characterSpeech\": \"Konuşma/Diyalog\",\r\n      \"removeCharacter\": \"Kaldır\",\r\n      \"action\": \"Aksiyon\",\r\n      \"actionPlaceholder\": \"Sahnede ne oluyor...\",\r\n      \"lighting\": \"Aydınlatma\",\r\n      \"lightingPlaceholder\": \"Doğal, dramatik, yumuşak, vb...\",\r\n      \"mood\": \"Ruh Hali\",\r\n      \"moodPlaceholder\": \"Duygusal atmosfer, ton...\",\r\n      \"language\": \"Dil\",\r\n      \"moodboard\": \"Moodboard\",\r\n      \"moodboardEnabled\": \"Moodboard'u etkinleştir\",\r\n      \"moodboardDescription\": \"Üretimi yönlendirmek için referans görseller yükleyin\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"Oluşturulan Prompt\",\r\n      \"copyButton\": \"Kopyala\",\r\n      \"copied\": \"Kopyalandı!\",\r\n      \"randomizeButton\": \"Rastgele\",\r\n      \"clearButton\": \"Tümünü Temizle\",\r\n      \"enhanceButton\": \"AI ile Geliştir\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"AI Geliştirme\",\r\n      \"description\": \"Prompt'unuzu gelişmiş AI teknikleriyle geliştirin\",\r\n      \"focusTypes\": {\r\n        \"character\": \"Karakter Odaklı\",\r\n        \"action\": \"Aksiyon Odaklı\",\r\n        \"cinematic\": \"Sinematik Odak\",\r\n        \"safe\": \"Güvenli İçerik\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"Geliştirme Ayarları\",\r\n        \"characterLimit\": \"Karakter Limiti\",\r\n        \"includeAudio\": \"Ses Açıklamasını Dahil Et\",\r\n        \"model\": \"AI Modeli\"\r\n      },\r\n      \"enhanceButton\": \"Prompt'u Geliştir\",\r\n      \"enhancing\": \"Geliştiriliyor...\",\r\n      \"enhanceError\": \"Geliştirme başarısız\",\r\n      \"enhancementInfo\": {\r\n        \"model\": \"Model\",\r\n        \"length\": \"Uzunluk\",\r\n        \"actualCharacters\": \"Gerçek Karakterler\",\r\n        \"targetCharacters\": \"Hedef Karakterler\"\r\n      }\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"Prompt Geçmişi\",\r\n      \"empty\": \"Henüz prompt geçmişi yok\",\r\n      \"loadButton\": \"Yükle\",\r\n      \"clearButton\": \"Geçmişi Temizle\",\r\n      \"columns\": {\r\n        \"timestamp\": \"Tarih\",\r\n        \"basicPrompt\": \"Temel Prompt\",\r\n        \"enhancedPrompt\": \"Geliştirilmiş Prompt\",\r\n        \"length\": \"Uzunluk\",\r\n        \"model\": \"Model\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"Yükleniyor...\",\r\n      \"error\": \"Hata\",\r\n      \"success\": \"Başarılı\",\r\n      \"cancel\": \"İptal\",\r\n      \"save\": \"Kaydet\",\r\n      \"delete\": \"Sil\",\r\n      \"edit\": \"Düzenle\",\r\n      \"close\": \"Kapat\"\r\n    }\r\n  }\r\n}\r\n","{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"Domina la Generación de Video VEO3\",\r\n      \"description\": \"Aprende técnicas profesionales de prompting y mejores prácticas para el modelo de video AI más avanzado de Google.\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"Constructor de Prompts\",\r\n      \"enhance\": \"Mejora con AI\",\r\n      \"history\": \"Historial\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"Escena\",\r\n      \"scenePlaceholder\": \"Describe el entorno, ambiente o ubicación...\",\r\n      \"style\": \"Estilo\",\r\n      \"stylePlaceholder\": \"Artístico, fotorrealista, cinematográfico, etc...\",\r\n      \"camera\": \"Cámara\",\r\n      \"cameraPlaceholder\": \"Movimiento de cámara, ángulo, tipo de toma...\",\r\n      \"characters\": \"Personajes\",\r\n      \"addCharacter\": \"Agregar Personaje\",\r\n      \"characterName\": \"Nombre\",\r\n      \"characterDescription\": \"Descripción\",\r\n      \"characterSpeech\": \"Habla/Diálogo\",\r\n      \"removeCharacter\": \"Eliminar\",\r\n      \"action\": \"Acción\",\r\n      \"actionPlaceholder\": \"¿Qué está pasando en la escena...\",\r\n      \"lighting\": \"Iluminación\",\r\n      \"lightingPlaceholder\": \"Natural, dramática, suave, etc...\",\r\n      \"mood\": \"Estado de Ánimo\",\r\n      \"moodPlaceholder\": \"Atmósfera emocional, tono...\",\r\n      \"language\": \"Idioma\",\r\n      \"moodboard\": \"Moodboard\",\r\n      \"moodboardEnabled\": \"Habilitar moodboard\",\r\n      \"moodboardDescription\": \"Sube imágenes de referencia para guiar la generación\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"Prompt Generado\",\r\n      \"copyButton\": \"Copiar\",\r\n      \"copied\": \"¡Copiado!\",\r\n      \"randomizeButton\": \"Aleatorizar\",\r\n      \"clearButton\": \"Limpiar Todo\",\r\n      \"enhanceButton\": \"Mejorar con AI\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"Mejora con AI\",\r\n      \"description\": \"Mejora tu prompt con técnicas avanzadas de AI\",\r\n      \"focusTypes\": {\r\n        \"character\": \"Enfoque en Personajes\",\r\n        \"action\": \"Enfoque en Acción\",\r\n        \"cinematic\": \"Enfoque Cinematográfico\",\r\n        \"safe\": \"Contenido Seguro\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"Configuración de Mejora\",\r\n        \"characterLimit\": \"Límite de Caracteres\",\r\n        \"includeAudio\": \"Incluir Descripción de Audio\",\r\n        \"model\": \"Modelo AI\"\r\n      },\r\n      \"enhanceButton\": \"Mejorar Prompt\",\r\n      \"enhancing\": \"Mejorando...\",\r\n      \"enhanceError\": \"La mejora falló\",\r\n      \"enhancementInfo\": {\r\n        \"model\": \"Modelo\",\r\n        \"length\": \"Longitud\",\r\n        \"actualCharacters\": \"Caracteres Reales\",\r\n        \"targetCharacters\": \"Caracteres Objetivo\"\r\n      }\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"Historial de Prompts\",\r\n      \"empty\": \"Aún no hay prompts en el historial\",\r\n      \"loadButton\": \"Cargar\",\r\n      \"clearButton\": \"Limpiar Historial\",\r\n      \"columns\": {\r\n        \"timestamp\": \"Fecha\",\r\n        \"basicPrompt\": \"Prompt Básico\",\r\n        \"enhancedPrompt\": \"Prompt Mejorado\",\r\n        \"length\": \"Longitud\",\r\n        \"model\": \"Modelo\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"Cargando...\",\r\n      \"error\": \"Error\",\r\n      \"success\": \"Éxito\",\r\n      \"cancel\": \"Cancelar\",\r\n      \"save\": \"Guardar\",\r\n      \"delete\": \"Eliminar\",\r\n      \"edit\": \"Editar\",\r\n      \"close\": \"Cerrar\"\r\n    }\r\n  }\r\n}\r\n","{\r\n  \"veo3PromptGenerator\": {\r\n    \"infoBanner\": {\r\n      \"title\": \"VEO3 वीडियो जनरेशन में महारत हासिल करें\",\r\n      \"description\": \"Google के सबसे उन्नत AI वीडियो मॉडल के लिए पेशेवर प्रॉम्प्टिंग तकनीकों और सर्वोत्तम प्रथाओं को सीखें।\"\r\n    },\r\n    \"tabs\": {\r\n      \"builder\": \"प्रॉम्प्ट बिल्डर\",\r\n      \"enhance\": \"AI एन्हांसमेंट\",\r\n      \"history\": \"इतिहास\"\r\n    },\r\n    \"promptBuilder\": {\r\n      \"scene\": \"दृश्य\",\r\n      \"scenePlaceholder\": \"सेटिंग, वातावरण या स्थान का वर्णन करें...\",\r\n      \"style\": \"शैली\",\r\n      \"stylePlaceholder\": \"कलात्मक, फोटोरियलिस्टिक, सिनेमैटिक, आदि...\",\r\n      \"camera\": \"कैमरा\",\r\n      \"cameraPlaceholder\": \"कैमरा आंदोलन, कोण, शॉट प्रकार...\",\r\n      \"characters\": \"पात्र\",\r\n      \"addCharacter\": \"पात्र जोड़ें\",\r\n      \"characterName\": \"नाम\",\r\n      \"characterDescription\": \"विवरण\",\r\n      \"characterSpeech\": \"भाषण/संवाद\",\r\n      \"removeCharacter\": \"हटाएं\",\r\n      \"action\": \"कार्रवाई\",\r\n      \"actionPlaceholder\": \"दृश्य में क्या हो रहा है...\",\r\n      \"lighting\": \"प्रकाश व्यवस्था\",\r\n      \"lightingPlaceholder\": \"प्राकृतिक, नाटकीय, नरम, आदि...\",\r\n      \"mood\": \"मूड\",\r\n      \"moodPlaceholder\": \"भावनात्मक वातावरण, स्वर...\",\r\n      \"language\": \"भाषा\",\r\n      \"moodboard\": \"मूडबोर्ड\",\r\n      \"moodboardEnabled\": \"मूडबोर्ड सक्षम करें\",\r\n      \"moodboardDescription\": \"जनरेशन को निर्देशित करने के लिए संदर्भ छवियां अपलोड करें\"\r\n    },\r\n    \"promptPreview\": {\r\n      \"title\": \"उत्पन्न प्रॉम्प्ट\",\r\n      \"copyButton\": \"कॉपी करें\",\r\n      \"copied\": \"कॉपी किया गया!\",\r\n      \"randomizeButton\": \"रैंडमाइज़\",\r\n      \"clearButton\": \"सब कुछ साफ़ करें\",\r\n      \"enhanceButton\": \"AI के साथ बढ़ाएं\"\r\n    },\r\n    \"aiEnhancement\": {\r\n      \"title\": \"AI एन्हांसमेंट\",\r\n      \"description\": \"उन्नत AI तकनीकों के साथ अपने प्रॉम्प्ट को बढ़ाएं\",\r\n      \"focusTypes\": {\r\n        \"character\": \"पात्र फोकस\",\r\n        \"action\": \"कार्रवाई फोकस\",\r\n        \"cinematic\": \"सिनेमैटिक फोकस\",\r\n        \"safe\": \"सुरक्षित सामग्री\"\r\n      },\r\n      \"settings\": {\r\n        \"title\": \"एन्हांसमेंट सेटिंग्स\",\r\n        \"characterLimit\": \"अक्षर सीमा\",\r\n        \"includeAudio\": \"ऑडियो विवरण शामिल करें\",\r\n        \"model\": \"AI मॉडल\"\r\n      },\r\n      \"enhanceButton\": \"प्रॉम्प्ट बढ़ाएं\",\r\n      \"enhancing\": \"बढ़ा रहा है...\",\r\n      \"enhanceError\": \"एन्हांसमेंट विफल\",\r\n      \"enhancementInfo\": {\r\n        \"model\": \"मॉडल\",\r\n        \"length\": \"लंबाई\",\r\n        \"actualCharacters\": \"वास्तविक अक्षर\",\r\n        \"targetCharacters\": \"लक्ष्य अक्षर\"\r\n      }\r\n    },\r\n    \"promptHistory\": {\r\n      \"title\": \"प्रॉम्प्ट इतिहास\",\r\n      \"empty\": \"अभी तक इतिहास में कोई प्रॉम्प्ट नहीं\",\r\n      \"loadButton\": \"लोड करें\",\r\n      \"clearButton\": \"इतिहास साफ़ करें\",\r\n      \"columns\": {\r\n        \"timestamp\": \"दिनांक\",\r\n        \"basicPrompt\": \"बुनियादी प्रॉम्प्ट\",\r\n        \"enhancedPrompt\": \"बढ़ाया गया प्रॉम्प्ट\",\r\n        \"length\": \"लंबाई\",\r\n        \"model\": \"मॉडल\"\r\n      }\r\n    },\r\n    \"common\": {\r\n      \"loading\": \"लोड हो रहा है...\",\r\n      \"error\": \"त्रुटि\",\r\n      \"success\": \"सफलता\",\r\n      \"cancel\": \"रद्द करें\",\r\n      \"save\": \"सहेजें\",\r\n      \"delete\": \"हटाएं\",\r\n      \"edit\": \"संपादित करें\",\r\n      \"close\": \"बंद करें\"\r\n    }\r\n  }\r\n}\r\n","export { default as en } from \"./en.json\";\r\nexport { default as ru } from \"./ru.json\";\r\nexport { default as tr } from \"./tr.json\";\r\nexport { default as es } from \"./es.json\";\r\nexport { default as hi } from \"./hi.json\";\r\n\r\nexport type Locale = \"en\" | \"ru\" | \"tr\" | \"es\" | \"hi\";\r\n\r\nexport const locales: Locale[] = [\"en\", \"ru\", \"tr\", \"es\", \"hi\"];\r\nexport const defaultLocale: Locale = \"en\";\r\n","import { en, ru, tr, es, hi, type Locale } from \"../translations\";\r\n\r\nconst dictionaries: Record<Locale, Record<string, any>> = {\r\n  en,\r\n  ru,\r\n  tr,\r\n  es,\r\n  hi,\r\n};\r\n\r\nfunction getNested(obj: unknown, path: string | string[]) {\r\n  const keys = Array.isArray(path) ? path : path.split(\".\");\r\n  return keys.reduce((acc, key) => {\r\n    if (acc && typeof acc === \"object\" && key in acc) {\r\n      return (acc as Record<string, unknown>)[key];\r\n    }\r\n    return undefined;\r\n  }, obj);\r\n}\r\n\r\nexport function useTranslation(locale: Locale) {\r\n  const dict = dictionaries[locale] || dictionaries.en;\r\n\r\n  function t<T = string>(key: string, fallback?: T): T {\r\n    const value = getNested(dict, key);\r\n    if (value !== undefined) return value as T;\r\n\r\n    if (fallback !== undefined) return fallback;\r\n    return key as unknown as T;\r\n  }\r\n\r\n  return { t };\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  Label,\r\n  Badge,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@turbo-super/ui\";\r\nimport { MoodboardImage } from \"../types\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface MoodboardUploaderProps {\r\n  enabled: boolean;\r\n  onEnabledChange: (enabled: boolean) => void;\r\n  onImagesChange: (images: MoodboardImage[]) => void;\r\n  maxImages?: number;\r\n  value?: MoodboardImage[];\r\n  locale?: Locale;\r\n}\r\n\r\nexport function MoodboardUploader({\r\n  enabled,\r\n  onEnabledChange,\r\n  onImagesChange,\r\n  maxImages = 3,\r\n  value = [],\r\n  locale = \"en\",\r\n}: MoodboardUploaderProps) {\r\n  const { t } = useTranslation(locale);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files;\r\n    if (!files) return;\r\n\r\n    const newImages: MoodboardImage[] = [];\r\n\r\n    for (let i = 0; i < Math.min(files.length, maxImages - value.length); i++) {\r\n      const file = files[i];\r\n      if (file.type.startsWith(\"image/\")) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          const base64 = e.target?.result as string;\r\n          const newImage: MoodboardImage = {\r\n            id: Date.now().toString() + i,\r\n            file: file,\r\n            base64: base64,\r\n            tags: [],\r\n            description: \"\",\r\n            weight: 1.0,\r\n          };\r\n\r\n          const updatedImages = [...value, newImage];\r\n          onImagesChange(updatedImages);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDropZoneClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const removeImage = (imageId: string) => {\r\n    const updatedImages = value.filter((img) => img.id !== imageId);\r\n    onImagesChange(updatedImages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Enable/Disable Toggle */}\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"moodboard-toggle\"\r\n            checked={enabled}\r\n            onChange={(e) => onEnabledChange(e.target.checked)}\r\n            className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n          />\r\n          <Label\r\n            htmlFor=\"moodboard-toggle\"\r\n            className=\"text-sm font-medium\"\r\n          >\r\n            {t(\"veo3PromptGenerator.promptBuilder.moodboardTitle\")}\r\n          </Label>\r\n        </div>\r\n        {enabled && (\r\n          <Badge\r\n            variant=\"outline\"\r\n            className=\"text-xs\"\r\n          >\r\n            {t(\"veo3PromptGenerator.promptBuilder.moodboardImages\").replace(\r\n              \"0/3\",\r\n              `${value.length}/${maxImages}`\r\n            )}\r\n          </Badge>\r\n        )}\r\n      </div>\r\n\r\n      {enabled && (\r\n        <div className=\"space-y-6\">\r\n          {/* Image Uploader */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-lg\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.visualReferences\")}\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                multiple\r\n                accept=\"image/*\"\r\n                onChange={handleFileSelect}\r\n                className=\"hidden\"\r\n              />\r\n              <div\r\n                className=\"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-6 text-center cursor-pointer hover:border-blue-400 dark:hover:border-blue-500 transition-colors\"\r\n                onClick={handleDropZoneClick}\r\n              >\r\n                <div className=\"text-gray-500 dark:text-gray-400 mb-2\">\r\n                  📁 {t(\"veo3PromptGenerator.promptBuilder.uploadImages\")}\r\n                </div>\r\n                <p className=\"text-sm text-gray-400 dark:text-gray-500\">\r\n                  {t(\r\n                    \"veo3PromptGenerator.promptBuilder.uploadDescription\"\r\n                  ).replace(\"3\", maxImages.toString())}\r\n                </p>\r\n                <p className=\"text-xs text-gray-400 dark:text-gray-500 mt-1\">\r\n                  {t(\"veo3PromptGenerator.promptBuilder.supportedFormats\")}\r\n                </p>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Image Configuration */}\r\n          {value.length > 0 && (\r\n            <div className=\"space-y-4\">\r\n              {value.map((image) => (\r\n                <Card\r\n                  key={image.id}\r\n                  className=\"group relative\"\r\n                >\r\n                  <CardContent className=\"pt-6\">\r\n                    {/* Delete Button */}\r\n                    <button\r\n                      onClick={() => removeImage(image.id)}\r\n                      className=\"absolute top-2 right-2 z-10 p-1 bg-red-500 hover:bg-red-600 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity\"\r\n                      title=\"Remove image\"\r\n                    >\r\n                      ✕\r\n                    </button>\r\n\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                      {/* Image Preview */}\r\n                      <div className=\"lg:col-span-1\">\r\n                        <div className=\"aspect-square relative rounded-lg overflow-hidden bg-muted\">\r\n                          {image.url ? (\r\n                            <img\r\n                              src={image.url}\r\n                              alt=\"Moodboard reference\"\r\n                              className=\"w-full h-full object-cover\"\r\n                            />\r\n                          ) : image.base64 ? (\r\n                            <img\r\n                              src={image.base64}\r\n                              alt=\"Moodboard reference\"\r\n                              className=\"w-full h-full object-cover\"\r\n                            />\r\n                          ) : (\r\n                            <div className=\"w-full h-full flex items-center justify-center text-muted-foreground\">\r\n                              Image Preview\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Configuration */}\r\n                      <div className=\"lg:col-span-2 space-y-4\">\r\n                        <div className=\"text-sm text-muted-foreground\">\r\n                          <p>Image ID: {image.id}</p>\r\n                          {image.description && (\r\n                            <p>Description: {image.description}</p>\r\n                          )}\r\n                          {image.tags.length > 0 && (\r\n                            <p>Tags: {image.tags.join(\", \")}</p>\r\n                          )}\r\n                          <p>Weight: {image.weight}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Instructions */}\r\n          <Card className=\"border-blue-200 bg-blue-50/50 dark:border-blue-800 dark:bg-blue-950/20\">\r\n            <CardContent className=\"pt-6\">\r\n              <div className=\"space-y-3\">\r\n                <h4 className=\"text-sm font-semibold text-blue-900 dark:text-blue-100 flex items-center gap-2\">\r\n                  🎨 {t(\"veo3PromptGenerator.promptBuilder.moodboardTips\")}\r\n                </h4>\r\n                <ul className=\"text-sm text-blue-800 dark:text-blue-200 space-y-2\">\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\r\n                    <span>{t(\"veo3PromptGenerator.promptBuilder.tip1\")}</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\r\n                    <span>{t(\"veo3PromptGenerator.promptBuilder.tip2\")}</span>\r\n                  </li>\r\n                  <li className=\"flex items-start gap-2\">\r\n                    <span className=\"text-blue-600 dark:text-blue-400\">•</span>\r\n                                         <span>\r\n                       {t(\"veo3PromptGenerator.promptBuilder.tip3\")}\r\n                     </span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n  Button,\r\n  Textarea,\r\n  Label,\r\n  Badge,\r\n} from \"@turbo-super/ui\";\r\nimport { Trash2 } from \"lucide-react\";\r\nimport { Character, PromptData, PresetOptions, MoodboardImage } from \"../types\";\r\nimport { MoodboardUploader as DefaultMoodboardUploader } from \"./MoodboardUploader\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface PromptBuilderProps {\r\n  promptData: PromptData;\r\n  setPromptData: (data: PromptData) => void;\r\n  addCharacter: () => void;\r\n  updateCharacter: (id: string, field: keyof Character, value: string) => void;\r\n  removeCharacter: (id: string) => void;\r\n  presetOptions: PresetOptions;\r\n  moodboardEnabled?: boolean;\r\n  setMoodboardEnabled?: (enabled: boolean) => void;\r\n  moodboardImages?: MoodboardImage[];\r\n  setMoodboardImages?: (images: MoodboardImage[]) => void;\r\n  MoodboardUploader?: React.ComponentType<{\r\n    images: MoodboardImage[];\r\n    setImages: (images: MoodboardImage[]) => void;\r\n  }>;\r\n  locale?: Locale;\r\n}\r\n\r\nexport function PromptBuilder({\r\n  promptData,\r\n  setPromptData,\r\n  addCharacter,\r\n  updateCharacter,\r\n  removeCharacter,\r\n  presetOptions,\r\n  moodboardEnabled = false,\r\n  setMoodboardEnabled,\r\n  moodboardImages = [],\r\n  setMoodboardImages,\r\n  MoodboardUploader,\r\n  locale = \"en\",\r\n}: PromptBuilderProps) {\r\n  const { t } = useTranslation(locale);\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardHeader>\r\n        <CardTitle>{t(\"veo3PromptGenerator.tabs.builder\")}</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Scene Description */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-blue-500 bg-blue-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"scene\"\r\n            className=\"flex items-center gap-2 text-blue-300 font-medium\"\r\n          >\r\n            🎬 {t(\"veo3PromptGenerator.promptBuilder.scene\")}\r\n          </Label>\r\n          <Textarea\r\n            id=\"scene\"\r\n            placeholder={t(\r\n              \"veo3PromptGenerator.promptBuilder.scenePlaceholder\"\r\n            )}\r\n            value={promptData.scene}\r\n            onChange={(e) =>\r\n              setPromptData({ ...promptData, scene: e.target.value })\r\n            }\r\n            className=\"min-h-[80px] border-blue-600 bg-blue-950/10 focus:border-blue-400 focus:ring-blue-400\"\r\n          />\r\n        </div>\r\n        {/* Characters */}\r\n        <div className=\"space-y-4 p-4 border-l-4 border-green-500 bg-green-950/20 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Label className=\"flex items-center gap-2 text-green-300 font-medium\">\r\n              👥 {t(\"veo3PromptGenerator.promptBuilder.characters\")} (\r\n              {promptData.characters.length})\r\n            </Label>\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={addCharacter}\r\n              className=\"text-xs border-green-600 text-green-300 hover:bg-green-950/30\"\r\n            >\r\n              + {t(\"veo3PromptGenerator.promptBuilder.addCharacter\")}\r\n            </Button>\r\n          </div>\r\n          {promptData.characters.length === 0 && (\r\n            <div className=\"text-sm text-muted-foreground p-4 border border-dashed rounded-lg text-center\">\r\n              {t(\"veo3PromptGenerator.promptBuilder.noCharacters\")}\r\n            </div>\r\n          )}\r\n          {promptData.characters.map((character, index) => (\r\n            <div\r\n              key={character.id}\r\n              className=\"p-4 border border-green-600 bg-green-950/10 rounded-lg space-y-3\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <Label className=\"text-sm font-medium\">\r\n                  {t(\"veo3PromptGenerator.promptBuilder.characterNumber\")}{\" \"}\r\n                  {index + 1}\r\n                </Label>\r\n                {promptData.characters.length > 1 && (\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"ghost\"\r\n                    size=\"sm\"\r\n                    onClick={() => removeCharacter(character.id)}\r\n                    className=\"text-red-500 hover:text-red-700 size-6 p-0\"\r\n                  >\r\n                    <Trash2 className=\"size-3\" />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className=\"grid grid-cols-1 gap-3\">\r\n                <div>\r\n                  <Label\r\n                    htmlFor={`char-name-${character.id}`}\r\n                    className=\"text-xs\"\r\n                  >\r\n                    {t(\"veo3PromptGenerator.promptBuilder.characterName\")}\r\n                  </Label>\r\n                  <input\r\n                    id={`char-name-${character.id}`}\r\n                    type=\"text\"\r\n                    placeholder={t(\r\n                      \"veo3PromptGenerator.promptBuilder.characterNamePlaceholder\"\r\n                    )}\r\n                    value={character.name}\r\n                    onChange={(e) =>\r\n                      updateCharacter(character.id, \"name\", e.target.value)\r\n                    }\r\n                    className=\"w-full px-3 py-2 border border-green-600 bg-green-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-green-400 focus:border-transparent\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <Label\r\n                    htmlFor={`char-desc-${character.id}`}\r\n                    className=\"text-xs\"\r\n                  >\r\n                    {t(\r\n                      \"veo3PromptGenerator.promptBuilder.characterDescription\"\r\n                    )}\r\n                  </Label>\r\n                  <Textarea\r\n                    id={`char-desc-${character.id}`}\r\n                    placeholder={t(\r\n                      \"veo3PromptGenerator.promptBuilder.characterDescriptionPlaceholder\"\r\n                    )}\r\n                    value={character.description}\r\n                    onChange={(e) =>\r\n                      updateCharacter(\r\n                        character.id,\r\n                        \"description\",\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                    className=\"min-h-[60px] text-sm border-green-600 bg-green-950/10 focus:border-green-400 focus:ring-green-400\"\r\n                  />\r\n                </div>\r\n                <div className=\"relative\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Label\r\n                      htmlFor={`char-speech-${character.id}`}\r\n                      className=\"text-xs\"\r\n                    >\r\n                      {t(\"veo3PromptGenerator.promptBuilder.characterSpeech\")}\r\n                    </Label>\r\n                    {character.speech && (\r\n                      <Badge\r\n                        variant=\"secondary\"\r\n                        className=\"text-xs px-2 py-0.5\"\r\n                      >\r\n                        🎙️ {t(\"veo3PromptGenerator.promptBuilder.hasVoice\")}\r\n                      </Badge>\r\n                    )}\r\n                  </div>\r\n                  <Textarea\r\n                    id={`char-speech-${character.id}`}\r\n                    placeholder={t(\r\n                      \"veo3PromptGenerator.promptBuilder.characterSpeechPlaceholder\"\r\n                    )}\r\n                    value={character.speech}\r\n                    onChange={(e) =>\r\n                      updateCharacter(character.id, \"speech\", e.target.value)\r\n                    }\r\n                    className={`min-h-[50px] text-sm border-green-600 bg-green-950/10 focus:border-green-400 focus:ring-green-400 ${character.speech ? \"border-blue-400 bg-blue-950/20\" : \"\"}`}\r\n                  />\r\n                  {character.speech && (\r\n                    <div className=\"mt-1 text-xs text-blue-300 flex items-center gap-1\">\r\n                      <span>🔊</span>\r\n                      <span>\r\n                        {t(\"veo3PromptGenerator.promptBuilder.voiceHighlight\")}\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {/* Action */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-orange-500 bg-orange-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"action\"\r\n            className=\"flex items-center gap-2 text-orange-300 font-medium\"\r\n          >\r\n            🎭 {t(\"veo3PromptGenerator.promptBuilder.action\")}\r\n          </Label>\r\n          <Textarea\r\n            id=\"action\"\r\n            placeholder={t(\r\n              \"veo3PromptGenerator.promptBuilder.actionPlaceholder\"\r\n            )}\r\n            value={promptData.action}\r\n            onChange={(e) =>\r\n              setPromptData({ ...promptData, action: e.target.value })\r\n            }\r\n            className=\"border-orange-600 bg-orange-950/10 focus:border-orange-400 focus:ring-orange-400\"\r\n          />\r\n        </div>\r\n        {/* Language */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-yellow-500 bg-yellow-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"language\"\r\n            className=\"flex items-center gap-2 text-yellow-300 font-medium\"\r\n          >\r\n            🗣️ {t(\"veo3PromptGenerator.promptBuilder.language\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"language\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.languagePlaceholder\"\r\n              )}\r\n              value={promptData.language}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, language: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-yellow-600 bg-yellow-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-yellow-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-yellow-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.languages.map((language: string) => (\r\n                <Badge\r\n                  key={language}\r\n                  variant={\r\n                    promptData.language === language ? \"default\" : \"outline\"\r\n                  }\r\n                  className={`cursor-pointer text-xs ${promptData.language === language ? \"bg-yellow-600 text-white\" : \"border-yellow-600 text-yellow-300 hover:bg-yellow-950/30\"}`}\r\n                  onClick={() => setPromptData({ ...promptData, language })}\r\n                >\r\n                  {language}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Visual Style */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-purple-500 bg-purple-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"style\"\r\n            className=\"flex items-center gap-2 text-purple-300 font-medium\"\r\n          >\r\n            🎨 {t(\"veo3PromptGenerator.promptBuilder.style\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"style\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.stylePlaceholder\"\r\n              )}\r\n              value={promptData.style}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, style: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-purple-600 bg-purple-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-purple-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-purple-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.styles.map((style: string) => (\r\n                <Badge\r\n                  key={style}\r\n                  variant={promptData.style === style ? \"default\" : \"outline\"}\r\n                  className={`cursor-pointer text-xs ${promptData.style === style ? \"bg-purple-600 text-white\" : \"border-purple-600 text-purple-300 hover:bg-purple-950/30\"}`}\r\n                  onClick={() => setPromptData({ ...promptData, style })}\r\n                >\r\n                  {style}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Camera Angle */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-indigo-500 bg-indigo-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"camera\"\r\n            className=\"flex items-center gap-2 text-indigo-300 font-medium\"\r\n          >\r\n            📹 {t(\"veo3PromptGenerator.promptBuilder.camera\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"camera\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.cameraPlaceholder\"\r\n              )}\r\n              value={promptData.camera}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, camera: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-indigo-600 bg-indigo-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-indigo-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.cameras.map((camera: string) => (\r\n                <Badge\r\n                  key={camera}\r\n                  variant={promptData.camera === camera ? \"default\" : \"outline\"}\r\n                  className={`cursor-pointer text-xs ${promptData.camera === camera ? \"bg-indigo-600 text-white\" : \"border-indigo-600 text-indigo-300 hover:bg-indigo-950/30\"}`}\r\n                  onClick={() => setPromptData({ ...promptData, camera })}\r\n                >\r\n                  {camera}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Lighting */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-pink-500 bg-pink-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"lighting\"\r\n            className=\"flex items-center gap-2 text-pink-300 font-medium\"\r\n          >\r\n            💡 {t(\"veo3PromptGenerator.promptBuilder.lighting\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"lighting\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.lightingPlaceholder\"\r\n              )}\r\n              value={promptData.lighting}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, lighting: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-pink-600 bg-pink-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-pink-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-pink-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.lighting.map((light: string) => (\r\n                <Badge\r\n                  key={light}\r\n                  variant={\r\n                    promptData.lighting === light ? \"default\" : \"outline\"\r\n                  }\r\n                  className={`cursor-pointer text-xs ${promptData.lighting === light ? \"bg-pink-600 text-white\" : \"border-pink-600 text-pink-300 hover:bg-pink-950/30\"}`}\r\n                  onClick={() =>\r\n                    setPromptData({ ...promptData, lighting: light })\r\n                  }\r\n                >\r\n                  {light}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Mood */}\r\n        <div className=\"space-y-2 p-4 border-l-4 border-rose-500 bg-rose-950/20 rounded-lg\">\r\n          <Label\r\n            htmlFor=\"mood\"\r\n            className=\"flex items-center gap-2 text-rose-300 font-medium\"\r\n          >\r\n            🌟 {t(\"veo3PromptGenerator.promptBuilder.mood\")}\r\n          </Label>\r\n          <div className=\"space-y-2\">\r\n            <input\r\n              id=\"mood\"\r\n              type=\"text\"\r\n              placeholder={t(\r\n                \"veo3PromptGenerator.promptBuilder.moodPlaceholder\"\r\n              )}\r\n              value={promptData.mood}\r\n              onChange={(e) =>\r\n                setPromptData({ ...promptData, mood: e.target.value })\r\n              }\r\n              className=\"w-full px-3 py-2 border border-rose-600 bg-rose-950/10 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-rose-400 focus:border-transparent\"\r\n            />\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              <Label className=\"text-xs text-rose-300\">\r\n                {t(\"veo3PromptGenerator.promptBuilder.quickSelect\")}\r\n              </Label>\r\n              {presetOptions.moods.map((mood: string) => (\r\n                <Badge\r\n                  key={mood}\r\n                  variant={promptData.mood === mood ? \"default\" : \"outline\"}\r\n                  className={`cursor-pointer text-xs ${promptData.mood === mood ? \"bg-rose-600 text-white\" : \"border-rose-600 text-rose-300 hover:bg-rose-950/30\"}`}\r\n                  onClick={() => setPromptData({ ...promptData, mood })}\r\n                >\r\n                  {mood}\r\n                </Badge>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* MoodboardUploader */}\r\n        {moodboardEnabled !== undefined &&\r\n          setMoodboardEnabled &&\r\n          setMoodboardImages &&\r\n          (MoodboardUploader ? (\r\n            <MoodboardUploader\r\n              images={moodboardImages}\r\n              setImages={setMoodboardImages}\r\n            />\r\n          ) : (\r\n            <DefaultMoodboardUploader\r\n              enabled={moodboardEnabled}\r\n              onEnabledChange={setMoodboardEnabled}\r\n              onImagesChange={setMoodboardImages}\r\n              maxImages={3}\r\n              value={moodboardImages}\r\n              locale={locale}\r\n            />\r\n          ))}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n  Button,\r\n  Textarea,\r\n  Badge,\r\n} from \"@turbo-super/ui\";\r\nimport { Copy, Shuffle, Sparkles, Trash2 } from \"lucide-react\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface PromptPreviewProps {\r\n  generatedPrompt: string;\r\n  setGeneratedPrompt: (prompt: string) => void;\r\n  randomizePrompt: () => void;\r\n  clearAll: () => void;\r\n  copyToClipboard: (text: string) => void;\r\n  copied: boolean;\r\n  setActiveTab: (tab: string) => void;\r\n  isEnhancing: boolean;\r\n  enhancePrompt: () => void;\r\n  locale?: Locale;\r\n}\r\n\r\nexport function PromptPreview({\r\n  generatedPrompt,\r\n  setGeneratedPrompt,\r\n  randomizePrompt,\r\n  clearAll,\r\n  copyToClipboard,\r\n  copied,\r\n  setActiveTab,\r\n  isEnhancing,\r\n  enhancePrompt,\r\n  locale = \"en\",\r\n}: PromptPreviewProps) {\r\n  const { t } = useTranslation(locale);\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Copy className=\"w-5 h-5\" />\r\n          {t(\"veo3PromptGenerator.promptPreview.title\")}\r\n          <Badge\r\n            variant=\"secondary\"\r\n            className=\"ml-auto text-xs\"\r\n          >\r\n            {t(\"veo3PromptGenerator.promptPreview.preview\")}\r\n          </Badge>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {/* Textarea with Copy button in top-right - Now Editable */}\r\n          <div className=\"relative\">\r\n            <Textarea\r\n              value={generatedPrompt}\r\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n                setGeneratedPrompt(e.target.value)\r\n              }\r\n              placeholder={t(\"veo3PromptGenerator.promptPreview.placeholder\")}\r\n              className=\"min-h-[400px] font-mono text-sm resize-none pr-20 bg-background border-border text-foreground\"\r\n            />\r\n            <div className=\"absolute top-2 right-2 flex gap-1\">\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"ghost\"\r\n                onClick={() => setGeneratedPrompt(\"\")}\r\n                disabled={!generatedPrompt}\r\n                className=\"size-8 p-0 hover:bg-background/80\"\r\n                title=\"Clear text\"\r\n              >\r\n                <Trash2 className=\"size-4\" />\r\n              </Button>\r\n              <Button\r\n                size=\"sm\"\r\n                variant=\"ghost\"\r\n                onClick={() => copyToClipboard(generatedPrompt)}\r\n                disabled={!generatedPrompt}\r\n                className=\"size-8 p-0 hover:bg-background/80\"\r\n                title={copied ? \"Copied!\" : \"Copy to clipboard\"}\r\n              >\r\n                <Copy className=\"size-4\" />\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          {/* Action Buttons */}\r\n          <div className=\"space-y-3\">\r\n            {/* Quick Actions */}\r\n            <div className=\"flex gap-2\">\r\n              <Button\r\n                onClick={randomizePrompt}\r\n                variant=\"outline\"\r\n                className=\"flex-1\"\r\n              >\r\n                <Shuffle className=\"size-4 mr-2\" />\r\n                {t(\"veo3PromptGenerator.promptPreview.randomizeButton\")}\r\n              </Button>\r\n              <Button\r\n                onClick={clearAll}\r\n                variant=\"outline\"\r\n                className=\"flex-1\"\r\n              >\r\n                <Trash2 className=\"size-4 mr-2\" />\r\n                {t(\"veo3PromptGenerator.promptPreview.clearButton\")}\r\n              </Button>\r\n            </div>\r\n            {/* Navigate to AI Enhancement - Large and Prominent */}\r\n            <Button\r\n              onClick={() => {\r\n                setActiveTab(\"enhance\");\r\n                setTimeout(() => {\r\n                  if (generatedPrompt && !isEnhancing) {\r\n                    enhancePrompt();\r\n                  }\r\n                }, 100);\r\n              }}\r\n              disabled={!generatedPrompt}\r\n              size=\"lg\"\r\n              className=\"w-full h-16 text-lg font-bold bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\r\n            >\r\n              <Sparkles className=\"size-6 mr-3\" />\r\n              {t(\"veo3PromptGenerator.promptPreview.enhanceButton\")}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n  Button,\r\n  Textarea,\r\n  Badge,\r\n} from \"@turbo-super/ui\";\r\nimport { StripePaymentButton } from \"@turbo-super/payment\";\r\nimport {\r\n  Sparkles,\r\n  Loader2,\r\n  Settings,\r\n  ChevronDown,\r\n  ChevronUp,\r\n  Copy,\r\n  CreditCard,\r\n} from \"lucide-react\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface AIEnhancementProps {\r\n  enhancedPrompt: string;\r\n  setEnhancedPrompt: (prompt: string) => void;\r\n  generatedPrompt: string;\r\n  enhanceWithSelectedFocus: () => void;\r\n  isEnhancing: boolean;\r\n  enhanceError: string;\r\n  enhancementInfo: any;\r\n  selectedFocusTypes: string[];\r\n  toggleFocusType: (\r\n    type: \"character\" | \"action\" | \"cinematic\" | \"safe\"\r\n  ) => void;\r\n  includeAudio: boolean;\r\n  setIncludeAudio: (val: boolean) => void;\r\n  customCharacterLimit: number;\r\n  setCustomCharacterLimit: (val: number) => void;\r\n  showSettings: boolean;\r\n  showPaymentButton?: boolean;\r\n  setShowSettings: (val: boolean) => void;\r\n  copied: boolean;\r\n  copyToClipboard: (text: string) => void;\r\n  locale?: Locale;\r\n}\r\n\r\nexport function AIEnhancement({\r\n  enhancedPrompt,\r\n  setEnhancedPrompt,\r\n  generatedPrompt,\r\n  enhanceWithSelectedFocus,\r\n  isEnhancing,\r\n  enhanceError,\r\n  enhancementInfo,\r\n  selectedFocusTypes,\r\n  toggleFocusType,\r\n  includeAudio,\r\n  setIncludeAudio,\r\n  customCharacterLimit,\r\n  setCustomCharacterLimit,\r\n  showSettings,\r\n  showPaymentButton = true,\r\n  setShowSettings,\r\n  copied,\r\n  copyToClipboard,\r\n  locale = \"en\",\r\n}: AIEnhancementProps) {\r\n  const { t } = useTranslation(locale);\r\n  return (\r\n    <Card className=\"w-full\">\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Sparkles className=\"w-5 h-5 text-purple-600\" />\r\n          {t(\"veo3PromptGenerator.aiEnhancement.title\")}\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div className=\"space-y-4\">\r\n          {/* Main AI Enhance Button - Large and Prominent */}\r\n          <Button\r\n            onClick={enhanceWithSelectedFocus}\r\n            disabled={isEnhancing}\r\n            size=\"lg\"\r\n            className=\"w-full h-16 text-lg font-bold bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\r\n          >\r\n            {isEnhancing ? (\r\n              <>\r\n                <Loader2 className=\"w-6 h-6 mr-3 animate-spin\" />\r\n                {t(\"veo3PromptGenerator.aiEnhancement.enhancing\")}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Sparkles className=\"w-6 h-6 mr-3\" />\r\n                {enhancedPrompt.trim()\r\n                  ? t(\"veo3PromptGenerator.aiEnhancement.enhanceButton\")\r\n                  : t(\"veo3PromptGenerator.aiEnhancement.enhanceButton\")}\r\n                {selectedFocusTypes.length > 0 && (\r\n                  <span className=\"ml-2 text-sm opacity-90\">\r\n                    ({selectedFocusTypes.length}{\" \"}\r\n                    {t(\"veo3PromptGenerator.aiEnhancement.focus\")}\r\n                    {selectedFocusTypes.length !== 1 ? \"es\" : \"\"})\r\n                  </span>\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n          {/* Quick Enhancement Actions */}\r\n          <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-2\">\r\n            <Button\r\n              variant={\r\n                selectedFocusTypes.includes(\"character\") ? \"default\" : \"outline\"\r\n              }\r\n              size=\"sm\"\r\n              onClick={() => toggleFocusType(\"character\")}\r\n              className=\"text-xs\"\r\n            >\r\n              👤 {t(\"veo3PromptGenerator.aiEnhancement.focusTypes.character\")}\r\n            </Button>\r\n            <Button\r\n              variant={\r\n                selectedFocusTypes.includes(\"action\") ? \"default\" : \"outline\"\r\n              }\r\n              size=\"sm\"\r\n              onClick={() => toggleFocusType(\"action\")}\r\n              className=\"text-xs\"\r\n            >\r\n              🎬 {t(\"veo3PromptGenerator.aiEnhancement.focusTypes.action\")}\r\n            </Button>\r\n            <Button\r\n              variant={\r\n                selectedFocusTypes.includes(\"cinematic\") ? \"default\" : \"outline\"\r\n              }\r\n              size=\"sm\"\r\n              onClick={() => toggleFocusType(\"cinematic\")}\r\n              className=\"text-xs\"\r\n            >\r\n              🎥 {t(\"veo3PromptGenerator.aiEnhancement.focusTypes.cinematic\")}\r\n            </Button>\r\n            <Button\r\n              variant={includeAudio ? \"default\" : \"outline\"}\r\n              size=\"sm\"\r\n              onClick={() => setIncludeAudio(!includeAudio)}\r\n              className={`text-xs ${\r\n                includeAudio\r\n                  ? \"bg-blue-600 text-white border-blue-600 hover:bg-blue-700\"\r\n                  : \"bg-blue-50 border-blue-200 hover:bg-blue-100\"\r\n              }`}\r\n            >\r\n              🔊 {t(\"veo3PromptGenerator.aiEnhancement.settings.includeAudio\")}\r\n            </Button>\r\n            <Button\r\n              variant={\r\n                selectedFocusTypes.includes(\"safe\") ? \"default\" : \"outline\"\r\n              }\r\n              size=\"sm\"\r\n              onClick={() => toggleFocusType(\"safe\")}\r\n              className={`text-xs ${\r\n                selectedFocusTypes.includes(\"safe\")\r\n                  ? \"bg-green-600 text-white border-green-600 hover:bg-green-700\"\r\n                  : \"bg-green-50 border-green-200 hover:bg-green-100\"\r\n              }`}\r\n            >\r\n              🛡️ {t(\"veo3PromptGenerator.aiEnhancement.focusTypes.safe\")}\r\n            </Button>\r\n          </div>\r\n          {/* Collapsible Settings */}\r\n          <div className=\"border rounded-lg\">\r\n            <Button\r\n              variant=\"ghost\"\r\n              onClick={() => setShowSettings(!showSettings)}\r\n              className=\"w-full justify-between p-3 h-auto\"\r\n            >\r\n              <div className=\"flex items-center gap-2\">\r\n                <Settings className=\"w-4 h-4\" />\r\n                <span className=\"text-sm\">\r\n                  {t(\"veo3PromptGenerator.aiEnhancement.settings.title\")}\r\n                </span>\r\n                <Badge\r\n                  variant=\"outline\"\r\n                  className=\"text-xs\"\r\n                >\r\n                  {customCharacterLimit} chars • GPT-4.1\r\n                </Badge>\r\n              </div>\r\n              {showSettings ? (\r\n                <ChevronUp className=\"w-4 h-4\" />\r\n              ) : (\r\n                <ChevronDown className=\"w-4 h-4\" />\r\n              )}\r\n            </Button>\r\n            {showSettings && (\r\n              <div className=\"px-3 pb-3 space-y-3 border-t\">\r\n                {/* Character Limit Slider */}\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-xs text-muted-foreground\">\r\n                      {t(\r\n                        \"veo3PromptGenerator.aiEnhancement.settings.characterLimit\"\r\n                      )}\r\n                    </span>\r\n                    <Badge\r\n                      variant=\"outline\"\r\n                      className=\"text-xs\"\r\n                    >\r\n                      {customCharacterLimit} chars\r\n                    </Badge>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"200\"\r\n                      max=\"10000\"\r\n                      step=\"100\"\r\n                      value={customCharacterLimit}\r\n                      onChange={(e) =>\r\n                        setCustomCharacterLimit(Number(e.target.value))\r\n                      }\r\n                      className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\r\n                    />\r\n                    <div className=\"flex justify-between text-xs text-muted-foreground\">\r\n                      <span>200</span>\r\n                      <span>2K</span>\r\n                      <span>5K</span>\r\n                      <span>10K</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"text-xs text-muted-foreground\">\r\n                    {customCharacterLimit < 600 && \"Concise and focused\"}\r\n                    {customCharacterLimit >= 600 &&\r\n                      customCharacterLimit < 1500 &&\r\n                      \"Balanced detail\"}\r\n                    {customCharacterLimit >= 1500 &&\r\n                      customCharacterLimit < 3000 &&\r\n                      \"Rich and detailed\"}\r\n                    {customCharacterLimit >= 3000 && \"Extremely detailed\"}\r\n                  </div>\r\n                </div>\r\n                {/* Model Info */}\r\n                <div className=\"space-y-2\">\r\n                  <span className=\"text-xs text-muted-foreground\">\r\n                    {t(\"veo3PromptGenerator.aiEnhancement.settings.model\")}\r\n                  </span>\r\n                  <div className=\"p-2 bg-muted rounded text-xs\">\r\n                    <div className=\"font-medium\">GPT-4.1</div>\r\n                    <div className=\"text-muted-foreground\">\r\n                      Best quality enhancement model\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n          {enhanceError && (\r\n            <div className=\"p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n              <p className=\"text-sm text-red-600\">{enhanceError}</p>\r\n            </div>\r\n          )}\r\n          {/* AI Enhanced Prompt Display */}\r\n          <div className=\"relative\">\r\n            <Textarea\r\n              value={enhancedPrompt}\r\n              onChange={(e) => setEnhancedPrompt(e.target.value)}\r\n              placeholder=\"Click 'Enhance with AI' to generate a professional, detailed prompt...\"\r\n              className=\"min-h-[500px] font-mono text-sm resize-none whitespace-pre-wrap pr-12 bg-background border-border text-foreground\"\r\n            />\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"ghost\"\r\n              onClick={() => copyToClipboard(enhancedPrompt)}\r\n              disabled={!enhancedPrompt}\r\n              className=\"absolute top-2 right-2 h-8 w-8 p-0 hover:bg-background/80\"\r\n              title={copied ? \"Copied!\" : \"Copy enhanced prompt\"}\r\n            >\r\n              <Copy className=\"w-4 h-4\" />\r\n            </Button>\r\n          </div>\r\n          {/* Enhancement Info - Compact */}\r\n          {enhancementInfo && (\r\n            <div className=\"p-3 bg-muted/50 rounded-lg\">\r\n              <div className=\"flex justify-between items-center text-xs text-muted-foreground\">\r\n                <div className=\"flex items-center gap-3\">\r\n                  <span>\r\n                    Model:{\" \"}\r\n                    <span className=\"font-medium text-foreground\">\r\n                      {enhancementInfo.modelName || enhancementInfo.model}\r\n                    </span>\r\n                  </span>\r\n                  <span>\r\n                    Length:{\" \"}\r\n                    <span className=\"font-medium text-foreground\">\r\n                      {enhancementInfo.length}\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span>\r\n                    Characters:{\" \"}\r\n                    <span className=\"font-medium text-foreground\">\r\n                      {enhancementInfo.actualCharacters} /{\" \"}\r\n                      {enhancementInfo.targetCharacters}\r\n                    </span>\r\n                  </span>\r\n                  <Badge\r\n                    variant={\r\n                      enhancementInfo.actualCharacters <=\r\n                      enhancementInfo.targetCharacters\r\n                        ? \"default\"\r\n                        : \"secondary\"\r\n                    }\r\n                    className=\"text-xs\"\r\n                  >\r\n                    {enhancementInfo.actualCharacters <=\r\n                    enhancementInfo.targetCharacters\r\n                      ? \"✓ Within limit\"\r\n                      : \"⚠ Over limit\"}\r\n                  </Badge>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Bottom Enhance Button - Duplicate for convenience */}\r\n          <Button\r\n            onClick={enhanceWithSelectedFocus}\r\n            disabled={isEnhancing}\r\n            size=\"lg\"\r\n            className=\"w-full h-16 text-lg font-bold bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white shadow-lg transform hover:scale-[1.02] transition-all duration-200\"\r\n          >\r\n            {isEnhancing ? (\r\n              <>\r\n                <Loader2 className=\"w-6 h-6 mr-3 animate-spin\" />\r\n                {t(\"veo3PromptGenerator.aiEnhancement.enhancing\")}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Sparkles className=\"w-6 h-6 mr-3\" />\r\n                {enhancedPrompt.trim()\r\n                  ? t(\"veo3PromptGenerator.aiEnhancement.enhanceButton\")\r\n                  : t(\"veo3PromptGenerator.aiEnhancement.enhanceButton\")}\r\n                {selectedFocusTypes.length > 0 && (\r\n                  <span className=\"ml-2 text-sm opacity-90\">\r\n                    ({selectedFocusTypes.length}{\" \"}\r\n                    {t(\"veo3PromptGenerator.aiEnhancement.focus\")}\r\n                    {selectedFocusTypes.length !== 1 ? \"es\" : \"\"})\r\n                  </span>\r\n                )}\r\n              </>\r\n            )}\r\n          </Button>\r\n\r\n          {/* Payment Button - Only show when we have an enhanced prompt */}\r\n          {showPaymentButton && generatedPrompt.trim() && (\r\n            <div className=\"mt-6 p-4 bg-gradient-to-r from-purple-50/50 to-blue-50/50 dark:from-purple-950/30 dark:to-blue-950/30 border border-purple-200/50 dark:border-purple-600/30 rounded-lg\">\r\n              <div className=\"text-center mb-4\">\r\n                <h3 className=\"text-lg font-semibold text-purple-900 dark:text-purple-100 mb-2\">\r\n                  Ready to Generate Your Video?\r\n                </h3>\r\n                <p className=\"text-sm text-purple-700 dark:text-purple-300\">\r\n                  Your enhanced prompt is ready! Generate a professional VEO3\r\n                  video for just $1.00\r\n                </p>\r\n              </div>\r\n              <StripePaymentButton\r\n                variant=\"video\"\r\n                toolSlug=\"veo3-prompt-generator\"\r\n                toolTitle=\"VEO3 Video Generator\"\r\n                price={1.0}\r\n                apiEndpoint=\"/api/stripe-prices\"\r\n                checkoutEndpoint=\"/api/create-checkout\"\r\n                className=\"border-0 shadow-none\"\r\n                prompt={generatedPrompt}\r\n                locale={locale}\r\n                // toolSlug=\"veo3-prompt-generator\"\r\n                // toolTitle=\"VEO3 Video Generator\"\r\n                // onPaymentClick={() => console.log(\"VEO3 payment started\")}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardContent,\r\n  Button,\r\n  Badge,\r\n} from \"@turbo-super/ui\";\r\nimport { Copy, Trash2 } from \"lucide-react\";\r\nimport { HistoryItem } from \"../types\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface PromptHistoryProps {\r\n  promptHistory: HistoryItem[];\r\n  loadFromHistory: (item: HistoryItem) => void;\r\n  clearHistory: () => void;\r\n  setActiveTab: (tab: string) => void;\r\n  locale?: Locale;\r\n}\r\n\r\nexport function PromptHistory({\r\n  promptHistory,\r\n  loadFromHistory,\r\n  clearHistory,\r\n  setActiveTab,\r\n  locale = \"en\",\r\n}: PromptHistoryProps) {\r\n  const { t } = useTranslation(locale);\r\n  return (\r\n    <Card className=\"w-full\">\r\n      {promptHistory.length > 0 ? (\r\n        <>\r\n          <CardHeader>\r\n            <div className=\"flex items-center justify-between\">\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Copy className=\"w-5 h-5\" />\r\n                {t(\"veo3PromptGenerator.promptHistory.title\")}\r\n                <Badge\r\n                  variant=\"outline\"\r\n                  className=\"ml-2\"\r\n                >\r\n                  {promptHistory.length}/10\r\n                </Badge>\r\n              </CardTitle>\r\n              <Button\r\n                onClick={clearHistory}\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                className=\"text-muted-foreground hover:text-destructive\"\r\n              >\r\n                <Trash2 className=\"w-4 h-4\" />\r\n              </Button>\r\n            </div>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {promptHistory.slice(0, 10).map((historyItem) => (\r\n                <div\r\n                  key={historyItem.id}\r\n                  className=\"p-4 border rounded-lg hover:bg-muted/50 transition-colors\"\r\n                >\r\n                  <div className=\"flex justify-between items-start mb-3\">\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      {historyItem.timestamp &&\r\n                      typeof historyItem.timestamp === \"object\" &&\r\n                      \"toLocaleString\" in historyItem.timestamp\r\n                        ? historyItem.timestamp.toLocaleString()\r\n                        : String(historyItem.timestamp)}\r\n                    </p>\r\n                    <div className=\"flex gap-1\">\r\n                      {historyItem.model && (\r\n                        <Badge\r\n                          variant=\"outline\"\r\n                          className=\"text-xs\"\r\n                        >\r\n                          {historyItem.model}\r\n                        </Badge>\r\n                      )}\r\n                      <Badge\r\n                        variant=\"secondary\"\r\n                        className=\"text-xs\"\r\n                      >\r\n                        {historyItem.length}\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-sm mb-3 line-clamp-3\">\r\n                    {historyItem.basicPrompt &&\r\n                    historyItem.basicPrompt.length > 120\r\n                      ? historyItem.basicPrompt.substring(0, 120) + \"...\"\r\n                      : historyItem.basicPrompt}\r\n                  </p>\r\n                  <Button\r\n                    onClick={() => loadFromHistory(historyItem)}\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    className=\"w-full\"\r\n                  >\r\n                    {t(\"veo3PromptGenerator.promptHistory.loadButton\")}\r\n                  </Button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </>\r\n      ) : (\r\n        <CardContent className=\"flex flex-col items-center justify-center py-12\">\r\n          <Copy className=\"w-12 h-12 text-muted-foreground mb-4\" />\r\n                     <h3 className=\"text-lg font-semibold mb-2\">{t(\"veo3PromptGenerator.promptHistory.empty\")}</h3>\r\n                     <p className=\"text-muted-foreground text-center mb-4\">\r\n             {t(\"veo3PromptGenerator.promptHistory.empty\")}\r\n           </p>\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={() => setActiveTab(\"builder\")}\r\n          >\r\n                         {t(\"veo3PromptGenerator.promptHistory.loadButton\")}\r\n          </Button>\r\n        </CardContent>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n","import { PromptData, Character } from \"../types\";\r\nimport { Locale } from \"../translations\";\r\n\r\nexport const generatePrompt = (data: PromptData): string => {\r\n  const parts: string[] = [];\r\n\r\n  if (data.scene) parts.push(data.scene);\r\n\r\n  if (data.characters.length > 0) {\r\n    const validCharacters = data.characters.filter(\r\n      (char) => char.name || char.description\r\n    );\r\n    if (validCharacters.length > 0) {\r\n      const characterDescriptions = validCharacters.map((char) => {\r\n        let desc = char.description || char.name || \"a character\";\r\n        if (char.speech && data.language) {\r\n          desc += ` who says in ${data.language.toLowerCase()}: \"${char.speech}\"`;\r\n        }\r\n        return desc;\r\n      });\r\n      parts.push(`featuring ${characterDescriptions.join(\", \")}`);\r\n    }\r\n  }\r\n\r\n  if (data.action) parts.push(`${data.action}`);\r\n  if (data.camera) parts.push(`Shot with ${data.camera.toLowerCase()}`);\r\n  if (data.style) parts.push(`${data.style.toLowerCase()} style`);\r\n  if (data.lighting) parts.push(`${data.lighting.toLowerCase()} lighting`);\r\n  if (data.mood) parts.push(`${data.mood.toLowerCase()} mood`);\r\n\r\n  return parts.length > 0\r\n    ? parts.join(\", \") + \".\"\r\n    : \"Your generated prompt will appear here, or type your own prompt...\";\r\n};\r\n\r\nexport const createRandomPromptData = (): PromptData => {\r\n  const styles = [\r\n    \"Cinematic\",\r\n    \"Documentary\",\r\n    \"Anime\",\r\n    \"Realistic\",\r\n    \"Artistic\",\r\n    \"Vintage\",\r\n    \"Modern\",\r\n  ];\r\n  const cameras = [\r\n    \"Close-up\",\r\n    \"Wide shot\",\r\n    \"Over-the-shoulder\",\r\n    \"Drone view\",\r\n    \"Handheld\",\r\n    \"Static\",\r\n  ];\r\n  const lighting = [\r\n    \"Natural\",\r\n    \"Golden hour\",\r\n    \"Blue hour\",\r\n    \"Dramatic\",\r\n    \"Soft\",\r\n    \"Neon\",\r\n    \"Candlelight\",\r\n  ];\r\n  const moods = [\r\n    \"Peaceful\",\r\n    \"Energetic\",\r\n    \"Mysterious\",\r\n    \"Romantic\",\r\n    \"Tense\",\r\n    \"Joyful\",\r\n    \"Melancholic\",\r\n  ];\r\n  const languages = [\r\n    \"English\",\r\n    \"Spanish\",\r\n    \"French\",\r\n    \"German\",\r\n    \"Italian\",\r\n    \"Russian\",\r\n    \"Japanese\",\r\n    \"Chinese\",\r\n  ];\r\n\r\n  return {\r\n    scene: \"A serene lakeside at sunset\",\r\n    characters: [\r\n      {\r\n        id: \"1\",\r\n        name: \"Person\",\r\n        description: \"A person in casual clothes\",\r\n        speech: Math.random() > 0.5 ? \"Perfect evening for this!\" : \"\",\r\n      },\r\n    ],\r\n    action: \"skipping stones across the water\",\r\n    language: languages[Math.floor(Math.random() * languages.length)],\r\n    style: styles[Math.floor(Math.random() * styles.length)],\r\n    camera: cameras[Math.floor(Math.random() * cameras.length)],\r\n    lighting: lighting[Math.floor(Math.random() * lighting.length)],\r\n    mood: moods[Math.floor(Math.random() * moods.length)],\r\n  };\r\n};\r\n\r\nexport const createEmptyPromptData = (): PromptData => ({\r\n  scene: \"\",\r\n  style: \"\",\r\n  camera: \"\",\r\n  characters: [],\r\n  action: \"\",\r\n  lighting: \"\",\r\n  mood: \"\",\r\n  language: \"English\",\r\n});\r\n\r\nexport const createCharacter = (id?: string): Character => ({\r\n  id: id || Date.now().toString(),\r\n  name: \"\",\r\n  description: \"\",\r\n  speech: \"\",\r\n});\r\n\r\nexport const copyToClipboard = async (text: string): Promise<boolean> => {\r\n  try {\r\n    await navigator.clipboard.writeText(text);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(\"Failed to copy to clipboard:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const getLocaleLanguage = (locale?: Locale): string => {\r\n  if (typeof window === \"undefined\") return \"English\";\r\n\r\n  // Если передан locale как параметр, используем его\r\n  if (locale) {\r\n    const localeToLanguage: Record<Locale, string> = {\r\n      en: \"English\",\r\n      ru: \"Russian\",\r\n      es: \"Spanish\",\r\n      hi: \"Hindi\",\r\n      tr: \"Turkish\",\r\n    };\r\n\r\n    return localeToLanguage[locale] || \"English\";\r\n  }\r\n\r\n  // Иначе получаем из URL (для обратной совместимости)\r\n  const urlLocale = window.location.pathname.split(\"/\")[1];\r\n  const localeToLanguage: Record<string, string> = {\r\n    en: \"English\",\r\n    ru: \"Russian\",\r\n    es: \"Spanish\",\r\n    hi: \"Hindi\",\r\n    tr: \"Turkish\",\r\n  };\r\n\r\n  return localeToLanguage[urlLocale] || \"English\";\r\n};\r\n","import { PresetOptions } from \"../types\";\r\n\r\nexport const PRESET_OPTIONS: PresetOptions = {\r\n  styles: [\r\n    \"Cinematic\",\r\n    \"Documentary\",\r\n    \"Anime\",\r\n    \"Realistic\",\r\n    \"Artistic\",\r\n    \"Vintage\",\r\n    \"Modern\",\r\n  ],\r\n  cameras: [\r\n    \"Close-up\",\r\n    \"Wide shot\",\r\n    \"Over-the-shoulder\",\r\n    \"Drone view\",\r\n    \"Handheld\",\r\n    \"Static\",\r\n  ],\r\n  lighting: [\r\n    \"Natural\",\r\n    \"Golden hour\",\r\n    \"Blue hour\",\r\n    \"Dramatic\",\r\n    \"Soft\",\r\n    \"Neon\",\r\n    \"Candlelight\",\r\n  ],\r\n  moods: [\r\n    \"Peaceful\",\r\n    \"Energetic\",\r\n    \"Mysterious\",\r\n    \"Romantic\",\r\n    \"Tense\",\r\n    \"Joyful\",\r\n    \"Melancholic\",\r\n  ],\r\n  languages: [\r\n    \"English\",\r\n    \"Spanish\",\r\n    \"French\",\r\n    \"German\",\r\n    \"Italian\",\r\n    \"Russian\",\r\n    \"Japanese\",\r\n    \"Chinese\",\r\n  ],\r\n};\r\n\r\nexport const STORAGE_KEYS = {\r\n  PROMPT_HISTORY: \"veo3-prompt-history\",\r\n  CUSTOM_CHARACTER_LIMIT: \"veo3-custom-character-limit\",\r\n  INCLUDE_AUDIO: \"veo3-include-audio\",\r\n  MOODBOARD_ENABLED: \"veo3-moodboard-enabled\",\r\n} as const;\r\n\r\nexport const DEFAULT_VALUES = {\r\n  CHARACTER_LIMIT: 4000,\r\n  LANGUAGE: \"English\",\r\n  INCLUDE_AUDIO: true,\r\n  MOODBOARD_ENABLED: true,\r\n  HISTORY_LIMIT: 10,\r\n} as const;\r\n","\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@turbo-super/ui\";\r\nimport { BookOpen } from \"lucide-react\";\r\nimport { PromptBuilder } from \"./PromptBuilder\";\r\nimport { PromptPreview } from \"./PromptPreview\";\r\nimport { AIEnhancement } from \"./AIEnhancement\";\r\nimport { PromptHistory } from \"./PromptHistory\";\r\nimport {\r\n  PromptData,\r\n  EnhancementInfo,\r\n  MoodboardImage,\r\n  PresetOptions,\r\n  HistoryItem,\r\n  Character,\r\n} from \"../types\";\r\nimport {\r\n  generatePrompt,\r\n  createRandomPromptData,\r\n  copyToClipboard as copyToClipboardUtil,\r\n  getLocaleLanguage,\r\n} from \"../utils\";\r\nimport { PRESET_OPTIONS, DEFAULT_VALUES } from \"../constants\";\r\nimport { useTranslation } from \"../hooks/use-translation\";\r\nimport { Locale } from \"../translations\";\r\n\r\ninterface Veo3PromptGeneratorProps {\r\n  enhancePromptFunction?: (params: {\r\n    prompt: string;\r\n    customLimit: number;\r\n    model: string;\r\n    focusType?: string;\r\n    includeAudio: boolean;\r\n    promptData: PromptData;\r\n    moodboard?: {\r\n      enabled: boolean;\r\n      images: MoodboardImage[];\r\n    };\r\n  }) => Promise<{\r\n    enhancedPrompt: string;\r\n    model?: string;\r\n    characterLimit?: number;\r\n    characterCount?: number;\r\n    targetCharacters?: number;\r\n    metadata?: any;\r\n  }>;\r\n  MoodboardUploader?:\r\n    | React.ComponentType<{\r\n        images: MoodboardImage[];\r\n        setImages: (images: MoodboardImage[]) => void;\r\n      }>\r\n    | undefined;\r\n  showInfoBanner?: boolean;\r\n  className?: string;\r\n  locale?: Locale;\r\n  showPaymentButton?: boolean;\r\n}\r\n\r\nexport function Veo3PromptGenerator({\r\n  enhancePromptFunction,\r\n  MoodboardUploader,\r\n  showInfoBanner = true,\r\n  className = \"\",\r\n  locale = \"en\" as Locale,\r\n  showPaymentButton = true,\r\n}: Veo3PromptGeneratorProps) {\r\n  const { t } = useTranslation(locale);\r\n\r\n  const [promptData, setPromptData] = useState<PromptData>({\r\n    scene: \"\",\r\n    style: \"\",\r\n    camera: \"\",\r\n    characters: [{ id: \"default\", name: \"\", description: \"\", speech: \"\" }],\r\n    action: \"\",\r\n    lighting: \"\",\r\n    mood: \"\",\r\n    language: \"English\",\r\n  });\r\n  const [generatedPrompt, setGeneratedPrompt] = useState(\"\");\r\n  const [enhancedPrompt, setEnhancedPrompt] = useState(\"\");\r\n  const [isEnhancing, setIsEnhancing] = useState(false);\r\n  const [enhanceError, setEnhanceError] = useState(\"\");\r\n  const [customCharacterLimit, setCustomCharacterLimit] = useState<number>(\r\n    DEFAULT_VALUES.CHARACTER_LIMIT\r\n  );\r\n  const [selectedModel] = useState<\"gpt-4.1\">(\"gpt-4.1\");\r\n  const [promptHistory, setPromptHistory] = useState<HistoryItem[]>([]);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n  const [enhancementInfo, setEnhancementInfo] =\r\n    useState<EnhancementInfo | null>(null);\r\n  const [activeTab, setActiveTab] = useState(\"builder\");\r\n  const [selectedFocusTypes, setSelectedFocusTypes] = useState<\r\n    Array<\"character\" | \"action\" | \"cinematic\" | \"safe\">\r\n  >([\"safe\"]);\r\n  const [includeAudio, setIncludeAudio] = useState<boolean>(\r\n    DEFAULT_VALUES.INCLUDE_AUDIO\r\n  );\r\n  const [moodboardEnabled, setMoodboardEnabled] = useState<boolean>(\r\n    DEFAULT_VALUES.MOODBOARD_ENABLED\r\n  );\r\n  const [moodboardImages, setMoodboardImages] = useState<MoodboardImage[]>([]);\r\n\r\n  // Load history from localStorage\r\n  useEffect(() => {\r\n    const savedHistory = localStorage.getItem(\"veo3-prompt-history\");\r\n    if (savedHistory) {\r\n      try {\r\n        const parsed = JSON.parse(savedHistory);\r\n        const historyWithDates = parsed.map((item: any) => ({\r\n          ...item,\r\n          timestamp: new Date(item.timestamp),\r\n        }));\r\n        setPromptHistory(historyWithDates);\r\n      } catch (error) {\r\n        console.error(\"Failed to load prompt history:\", error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save history to localStorage\r\n  useEffect(() => {\r\n    if (promptHistory.length > 0) {\r\n      localStorage.setItem(\r\n        \"veo3-prompt-history\",\r\n        JSON.stringify(promptHistory)\r\n      );\r\n    }\r\n  }, [promptHistory]);\r\n\r\n  // Generate prompt when promptData changes\r\n  useEffect(() => {\r\n    const hasValidCharacter = promptData.characters.some(\r\n      (char) => char.name || char.description\r\n    );\r\n    if (promptData.scene || hasValidCharacter) {\r\n      const prompt = generatePrompt(promptData);\r\n      setGeneratedPrompt(prompt);\r\n    }\r\n  }, [promptData]);\r\n\r\n  // Set language based on locale\r\n  useEffect(() => {\r\n    const defaultLanguage = getLocaleLanguage(locale);\r\n    setPromptData((prev) => ({ ...prev, language: defaultLanguage }));\r\n  }, [locale]);\r\n\r\n  const addCharacter = () => {\r\n    setPromptData((prev) => ({\r\n      ...prev,\r\n      characters: [\r\n        ...prev.characters,\r\n        { id: Date.now().toString(), name: \"\", description: \"\", speech: \"\" },\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const updateCharacter = (\r\n    id: string,\r\n    field: keyof Character,\r\n    value: string\r\n  ) => {\r\n    setPromptData((prev) => ({\r\n      ...prev,\r\n      characters: prev.characters.map((char) =>\r\n        char.id === id ? { ...char, [field]: value } : char\r\n      ),\r\n    }));\r\n  };\r\n\r\n  const removeCharacter = (id: string) => {\r\n    setPromptData((prev) => ({\r\n      ...prev,\r\n      characters: prev.characters.filter((char) => char.id !== id),\r\n    }));\r\n  };\r\n\r\n  const clearAll = () => {\r\n    const emptyData: PromptData = {\r\n      scene: \"\",\r\n      style: \"\",\r\n      camera: \"\",\r\n      characters: [],\r\n      action: \"\",\r\n      lighting: \"\",\r\n      mood: \"\",\r\n      language: \"English\",\r\n    };\r\n    setPromptData(emptyData);\r\n    setGeneratedPrompt(\"\");\r\n    setEnhancedPrompt(\"\");\r\n    setEnhanceError(\"\");\r\n  };\r\n\r\n  const saveToHistory = (\r\n    basicPrompt: string,\r\n    enhancedPrompt: string,\r\n    length: string,\r\n    model: string,\r\n    promptData: PromptData\r\n  ) => {\r\n    const newHistoryItem: HistoryItem = {\r\n      id: Date.now().toString(),\r\n      timestamp: new Date(),\r\n      basicPrompt,\r\n      enhancedPrompt,\r\n      length,\r\n      model,\r\n      promptData,\r\n    };\r\n    setPromptHistory((prev) => {\r\n      const updated = [newHistoryItem, ...prev];\r\n      return updated.slice(0, 10);\r\n    });\r\n  };\r\n\r\n  const clearHistory = () => {\r\n    setPromptHistory([]);\r\n    localStorage.removeItem(\"veo3-prompt-history\");\r\n  };\r\n\r\n  const randomizePrompt = () => {\r\n    const randomData = createRandomPromptData();\r\n    setPromptData(randomData);\r\n  };\r\n\r\n  const copyToClipboard = async (text: string) => {\r\n    const success = await copyToClipboardUtil(text);\r\n    if (success) {\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    }\r\n  };\r\n\r\n  const loadFromHistory = (historyItem: HistoryItem) => {\r\n    setPromptData(historyItem.promptData);\r\n    setGeneratedPrompt(historyItem.basicPrompt);\r\n    setEnhancedPrompt(historyItem.enhancedPrompt);\r\n    if (historyItem.length) {\r\n      const match = historyItem.length?.match(/(\\d+)/);\r\n      if (match) {\r\n        const charLimit = parseInt(match[1]);\r\n        if (charLimit >= 200 && charLimit <= 10000) {\r\n          setCustomCharacterLimit(charLimit);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleFocusType = (\r\n    focusType: \"character\" | \"action\" | \"cinematic\" | \"safe\"\r\n  ) => {\r\n    setSelectedFocusTypes((prev) => {\r\n      if (prev.includes(focusType)) {\r\n        return prev.filter((type) => type !== focusType);\r\n      } else {\r\n        return [...prev, focusType];\r\n      }\r\n    });\r\n  };\r\n\r\n  const enhancePrompt = async (focusType?: string) => {\r\n    if (!enhancePromptFunction) {\r\n      console.warn(\"No enhance function provided\");\r\n      return;\r\n    }\r\n\r\n    let promptToEnhance = \"\";\r\n    if (activeTab === \"enhance\" && enhancedPrompt.trim()) {\r\n      promptToEnhance = enhancedPrompt.trim();\r\n    } else if (generatedPrompt.trim()) {\r\n      promptToEnhance = generatedPrompt.trim();\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    setIsEnhancing(true);\r\n    setEnhanceError(\"\");\r\n\r\n    try {\r\n      const data = await enhancePromptFunction({\r\n        prompt: promptToEnhance,\r\n        customLimit: customCharacterLimit,\r\n        model: selectedModel,\r\n        focusType: focusType,\r\n        includeAudio: includeAudio,\r\n        promptData: promptData,\r\n        ...(moodboardEnabled && moodboardImages.length > 0\r\n          ? {\r\n              moodboard: {\r\n                enabled: true,\r\n                images: moodboardImages.map((img) => ({\r\n                  id: img.id,\r\n                  url: img.url,\r\n                  base64: img.base64,\r\n                  tags: img.tags,\r\n                  description: img.description,\r\n                  weight: img.weight,\r\n                })),\r\n              },\r\n            }\r\n          : {}),\r\n      });\r\n\r\n      if (data.enhancedPrompt) {\r\n        setEnhancedPrompt(data.enhancedPrompt);\r\n        setEnhancementInfo({\r\n          model: data.model || selectedModel,\r\n          modelName: data.model || selectedModel,\r\n          length: `${data.characterLimit || customCharacterLimit} chars`,\r\n          actualCharacters: data.characterCount || data.enhancedPrompt.length,\r\n          targetCharacters: data.targetCharacters || customCharacterLimit,\r\n        });\r\n\r\n        const basicPromptForHistory =\r\n          activeTab === \"enhance\" && enhancedPrompt.trim()\r\n            ? promptToEnhance\r\n            : generatedPrompt;\r\n        saveToHistory(\r\n          basicPromptForHistory,\r\n          data.enhancedPrompt,\r\n          `${data.characterLimit || customCharacterLimit} chars`,\r\n          data.model || selectedModel,\r\n          promptData\r\n        );\r\n      } else {\r\n        throw new Error(\"No enhanced prompt received\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Enhancement error:\", error);\r\n      setEnhanceError(\r\n        error instanceof Error\r\n          ? error.message\r\n          : t(\"veo3PromptGenerator.aiEnhancement.enhanceError\")\r\n      );\r\n    } finally {\r\n      setIsEnhancing(false);\r\n    }\r\n  };\r\n\r\n  const enhanceWithSelectedFocus = async () => {\r\n    if (selectedFocusTypes.length === 0) {\r\n      await enhancePrompt();\r\n    } else {\r\n      await enhancePrompt(selectedFocusTypes.join(\",\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`w-full max-w-6xl mx-auto ${className}`}>\r\n      {/* Info Banner */}\r\n      {showInfoBanner && (\r\n        <div className=\"mb-6 p-4 bg-gradient-to-r from-green-50/10 to-blue-50/10 dark:from-green-950/20 dark:to-blue-950/20 border border-green-200/20 dark:border-green-600/20 rounded-lg\">\r\n          <div className=\"flex items-start gap-3\">\r\n            <div className=\"flex-shrink-0 w-8 h-8 bg-green-100/20 dark:bg-green-900/30 rounded-full flex items-center justify-center\">\r\n              <BookOpen className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <h3 className=\"font-semibold text-green-900 dark:text-green-100 mb-1\">\r\n                {t(\"veo3PromptGenerator.infoBanner.title\")}\r\n              </h3>\r\n              <p className=\"text-sm text-green-700 dark:text-green-300 mb-2\">\r\n                {t(\"veo3PromptGenerator.infoBanner.description\")}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <Tabs\r\n        value={activeTab}\r\n        onValueChange={setActiveTab}\r\n        className=\"space-y-6\"\r\n      >\r\n        <TabsList className=\"grid w-full grid-cols-3\">\r\n          <TabsTrigger value=\"builder\">\r\n            {t(\"veo3PromptGenerator.tabs.builder\")}\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"enhance\">\r\n            {t(\"veo3PromptGenerator.tabs.enhance\")}\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"history\">\r\n            {t(\"veo3PromptGenerator.tabs.history\")} ({promptHistory.length}/10)\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        <TabsContent value=\"builder\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            <PromptBuilder\r\n              promptData={promptData}\r\n              setPromptData={setPromptData}\r\n              addCharacter={addCharacter}\r\n              updateCharacter={updateCharacter}\r\n              removeCharacter={removeCharacter}\r\n              presetOptions={PRESET_OPTIONS}\r\n              moodboardEnabled={moodboardEnabled}\r\n              setMoodboardEnabled={setMoodboardEnabled}\r\n              moodboardImages={moodboardImages}\r\n              setMoodboardImages={setMoodboardImages}\r\n              MoodboardUploader={MoodboardUploader || undefined}\r\n              locale={locale}\r\n            />\r\n            <PromptPreview\r\n              generatedPrompt={generatedPrompt}\r\n              setGeneratedPrompt={setGeneratedPrompt}\r\n              randomizePrompt={randomizePrompt}\r\n              clearAll={clearAll}\r\n              copyToClipboard={copyToClipboard}\r\n              copied={copied}\r\n              setActiveTab={setActiveTab}\r\n              isEnhancing={isEnhancing}\r\n              enhancePrompt={enhancePrompt}\r\n              locale={locale}\r\n            />\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"enhance\">\r\n          <AIEnhancement\r\n            enhancedPrompt={enhancedPrompt}\r\n            setEnhancedPrompt={setEnhancedPrompt}\r\n            generatedPrompt={generatedPrompt}\r\n            enhanceWithSelectedFocus={enhanceWithSelectedFocus}\r\n            isEnhancing={isEnhancing}\r\n            enhanceError={enhanceError}\r\n            enhancementInfo={enhancementInfo}\r\n            selectedFocusTypes={selectedFocusTypes}\r\n            toggleFocusType={toggleFocusType}\r\n            includeAudio={includeAudio}\r\n            setIncludeAudio={setIncludeAudio}\r\n            customCharacterLimit={customCharacterLimit}\r\n            setCustomCharacterLimit={setCustomCharacterLimit}\r\n            showSettings={showSettings}\r\n            setShowSettings={setShowSettings}\r\n            copied={copied}\r\n            copyToClipboard={copyToClipboard}\r\n            locale={locale}\r\n            showPaymentButton={showPaymentButton}\r\n          />\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"history\">\r\n          <PromptHistory\r\n            promptHistory={promptHistory}\r\n            loadFromHistory={loadFromHistory}\r\n            clearHistory={clearHistory}\r\n            setActiveTab={setActiveTab}\r\n            locale={locale}\r\n          />\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n","export interface Character {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  speech: string;\r\n}\r\n\r\nexport interface PromptData {\r\n  scene: string;\r\n  style: string;\r\n  camera: string;\r\n  characters: Character[];\r\n  action: string;\r\n  lighting: string;\r\n  mood: string;\r\n  language: string;\r\n}\r\n\r\nexport interface EnhancementInfo {\r\n  model: string;\r\n  modelName: string;\r\n  length: string;\r\n  actualCharacters: number;\r\n  targetCharacters: number;\r\n}\r\n\r\nexport interface MoodboardImage {\r\n  id: string;\r\n  file?: File;\r\n  url?: string;\r\n  base64?: string;\r\n  tags: string[];\r\n  description: string;\r\n  weight: number;\r\n}\r\n\r\nexport interface PresetOptions {\r\n  styles: string[];\r\n  cameras: string[];\r\n  lighting: string[];\r\n  moods: string[];\r\n  languages: string[];\r\n}\r\n\r\nexport interface HistoryItem {\r\n  id: string;\r\n  timestamp: Date;\r\n  basicPrompt: string;\r\n  enhancedPrompt: string;\r\n  length: string;\r\n  model: string;\r\n  promptData: PromptData;\r\n}\r\n\r\n// Export types as values for JavaScript compatibility\r\nexport const PromptDataType = {} as PromptData;\r\nexport const MoodboardImageType = {} as MoodboardImage;\r\nexport const CharacterType = {} as Character;\r\nexport const EnhancementInfoType = {} as EnhancementInfo;\r\nexport const PresetOptionsType = {} as PresetOptions;\r\nexport const HistoryItemType = {} as HistoryItem;\r\n","import { FileTypeEnum, ISceneRead } from \"@turbo-super/api\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport { prefetch } from \"remotion\";\r\n\r\nexport type MediaPrefetchFileType = {\r\n  url: string;\r\n  type: FileTypeEnum;\r\n};\r\n\r\ntype Props = {\r\n  files?: MediaPrefetchFileType[];\r\n  cleanable?: boolean;\r\n};\r\n\r\nexport const useMediaPrefetch = ({ files, cleanable = false }: Props) => {\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [progress, setProgress] = useState<{\r\n    totalBytes: number;\r\n    loadedBytes: number;\r\n  }>({ totalBytes: 0, loadedBytes: 0 });\r\n\r\n  useEffect(() => {\r\n    if (!files || files.length === 0) return;\r\n\r\n    let isCancelled = false;\r\n    let totalBytes = 0;\r\n    let loadedBytes = 0;\r\n\r\n    const cleanupResources = () => {\r\n      files.forEach((file) => {\r\n        const { free } = prefetch(file.url);\r\n        free();\r\n      });\r\n      setLoaded(false);\r\n    };\r\n\r\n    const prefetchPromises = files.map((file) => {\r\n      const contentType = mediaTypeMap[file.type] || \"application/octet-stream\";\r\n      const { free, waitUntilDone } = prefetch(file.url, {\r\n        contentType,\r\n        onProgress: (bytes) => {\r\n          if (bytes.totalBytes) totalBytes = bytes.totalBytes;\r\n          if (bytes.loadedBytes > progress.loadedBytes) {\r\n            loadedBytes = bytes.loadedBytes;\r\n            setProgress({ loadedBytes, totalBytes });\r\n          }\r\n        },\r\n      });\r\n\r\n      return waitUntilDone()\r\n        .then(() => {\r\n          if (isCancelled) free();\r\n          return file.url;\r\n        })\r\n        .catch((error: unknown) => {\r\n          console.error(`Failed to preload file: ${file.url}`, error);\r\n        });\r\n    });\r\n\r\n    Promise.all(prefetchPromises)\r\n      .then(() => {\r\n        if (!isCancelled) setLoaded(true);\r\n      })\r\n      .catch((error: unknown) => {\r\n        console.error(\"Failed to preload media files\", error);\r\n      });\r\n\r\n    return () => {\r\n      isCancelled = true;\r\n      if (cleanable) cleanupResources();\r\n    };\r\n  }, [files, cleanable]);\r\n\r\n  const progressValue = useMemo(\r\n    () =>\r\n      progress.totalBytes\r\n        ? Math.floor((progress.loadedBytes / progress.totalBytes) * 100)\r\n        : 0,\r\n    [progress]\r\n  );\r\n\r\n  return {\r\n    loaded,\r\n    progress: progressValue,\r\n  };\r\n};\r\n\r\nconst mediaTypeMap = {\r\n  [FileTypeEnum.IMAGE]: \"image/webp\",\r\n  [FileTypeEnum.VIDEO]: \"video/mp4\",\r\n  [FileTypeEnum.VOICEOVER]: \"audio/mpeg\",\r\n  [FileTypeEnum.SOUND_EFFECT]: \"audio/mpeg\",\r\n  [FileTypeEnum.AUDIO]: \"audio/mpeg\",\r\n  [FileTypeEnum.MUSIC]: \"audio/mpeg\",\r\n  [FileTypeEnum.TEXT]: \"text/plain\",\r\n  [FileTypeEnum.OTHER]: \"application/octet-stream\",\r\n};\r\n\r\nexport const sceneToMediaFormatting = (scenes?: ISceneRead[]) => {\r\n  if (!scenes) return [];\r\n  const media: MediaPrefetchFileType[] = [];\r\n\r\n  for (const scene of scenes) {\r\n    if (scene.file?.url) {\r\n      media.push({\r\n        url: scene.file.url,\r\n        type: scene.file.type,\r\n      });\r\n    }\r\n    if (scene.voiceover?.url) {\r\n      media.push({\r\n        url: scene.voiceover.url,\r\n        type: scene.voiceover.type,\r\n      });\r\n    }\r\n    if (scene.sound_effect?.url) {\r\n      media.push({\r\n        url: scene.sound_effect.url,\r\n        type: scene.sound_effect.type,\r\n      });\r\n    }\r\n  }\r\n  return media;\r\n};\r\n","import type { ISceneRead } from \"@turbo-super/api\";\r\nimport type { VideoScene, VideoConfig } from \"../types\";\r\n\r\n/**\r\n * Вычисляет общую длительность видео на основе сцен\r\n */\r\nexport function calculateTotalDuration(scenes: ISceneRead[]): number {\r\n  const total = scenes.reduce((acc, scene) => acc + (scene.duration || 5), 0);\r\n  // Убеждаемся, что возвращаем целое число\r\n  return Math.round(total);\r\n}\r\n\r\n/**\r\n * Создает временную шкалу для сцен\r\n */\r\nexport function createVideoTimeline(\r\n  scenes: ISceneRead[],\r\n  fps: number = 30\r\n): VideoScene[] {\r\n  return scenes.map((scene, index) => {\r\n    const sceneDuration = scene.duration || 5;\r\n    const startTime = scenes\r\n      .slice(0, index)\r\n      .reduce((acc, s) => acc + (s.duration || 5), 0);\r\n\r\n    return {\r\n      scene,\r\n      startTime: startTime * fps,\r\n      endTime: (startTime + sceneDuration) * fps,\r\n      duration: sceneDuration * fps,\r\n    };\r\n  });\r\n}\r\n\r\n/**\r\n * Получает конфигурацию видео на основе соотношения сторон\r\n */\r\nexport function getVideoConfig(\r\n  aspectRatio: \"16:9\" | \"9:16\" | \"1:1\" | \"4:3\"\r\n): VideoConfig {\r\n  const configs = {\r\n    \"16:9\": { width: 1920, height: 1080 },\r\n    \"9:16\": { width: 1080, height: 1920 },\r\n    \"1:1\": { width: 1080, height: 1080 },\r\n    \"4:3\": { width: 1440, height: 1080 },\r\n  };\r\n\r\n  const dimensions = configs[aspectRatio];\r\n\r\n  return {\r\n    ...dimensions,\r\n    fps: 30,\r\n    duration: 0, // Будет вычислено позже\r\n    aspectRatio,\r\n  };\r\n}\r\n\r\n/**\r\n * Форматирует время в формате MM:SS\r\n */\r\nexport function formatTime(seconds: number): string {\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = Math.floor(seconds % 60);\r\n  return `${minutes.toString().padStart(2, \"0\")}:${remainingSeconds.toString().padStart(2, \"0\")}`;\r\n}\r\n\r\n/**\r\n * Проверяет, готова ли сцена к отображению\r\n */\r\nexport function isSceneReady(scene: ISceneRead): boolean {\r\n  return !!(\r\n    scene.visual_description ||\r\n    scene.action_description ||\r\n    scene.dialogue ||\r\n    scene.file\r\n  );\r\n}\r\n\r\n/**\r\n * Получает превью для сцены\r\n */\r\nexport function getScenePreview(scene: ISceneRead): string | null {\r\n  if (scene.file?.url) {\r\n    return scene.file.url;\r\n  }\r\n\r\n  // Если нет файла, можно создать превью на основе описания\r\n  return null;\r\n}\r\n\r\n/**\r\n * Вычисляет прогресс воспроизведения в процентах\r\n */\r\nexport function calculatePlaybackProgress(\r\n  currentTime: number,\r\n  totalDuration: number\r\n): number {\r\n  if (totalDuration === 0) return 0;\r\n  return Math.min(100, (currentTime / totalDuration) * 100);\r\n}\r\n","export const FPS = 30;\r\nexport const transitionDuration = 10;\r\nexport const minSceneDurationInFrames = 30;\r\n\r\nexport const calculateDuration = (scenes: any[]) => {\r\n  let totalDuration = 0;\r\n\r\n  for (const scene of scenes ?? []) {\r\n    const durationInFrames = scene.duration * FPS;\r\n    totalDuration += durationInFrames;\r\n  }\r\n\r\n  return Math.ceil(totalDuration);\r\n};\r\n","\"use client\";\r\n\r\nimport { memo, type FC } from \"react\";\r\nimport { Img, OffthreadVideo } from \"remotion\";\r\n\r\ntype Props = {\r\n    url?: string | null;\r\n    type?: string;\r\n    playbackRate?: number;\r\n};\r\n\r\nconst SceneComponent: FC<Props> = ({ type, url, playbackRate = 1 }) => {\r\n    if (!url) return null;\r\n\r\n    return type === \"video\" ? (\r\n        <OffthreadVideo\r\n            src={url}\r\n            className=\"size-full object-cover\"\r\n            playbackRate={playbackRate}\r\n        />\r\n    ) : (\r\n        <Img\r\n            src={url}\r\n            className=\"size-full object-cover\"\r\n        />\r\n    );\r\n};\r\n\r\nexport const Scene = memo(SceneComponent);\r\n","\"use client\";\r\n\r\nimport type { FC } from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Canvas, FabricObject, Textbox } from \"fabric\";\r\nimport {\r\n  AlignGuidelines,\r\n  CenteringGuidelines,\r\n} from \"@superduperai/fabric-guideline-plugin\";\r\nimport { FONTS, loadFonts } from \"super-timeline\";\r\n\r\ntype Props = {\r\n  className?: string;\r\n  onReady?: (canvas: Canvas) => void;\r\n  initialObjects?: any[];\r\n  readonly?: boolean;\r\n  width?: number;\r\n  height?: number;\r\n};\r\n\r\nexport const FabricCanvas: FC<Props> = ({\r\n  className,\r\n  onReady,\r\n  readonly,\r\n  initialObjects,\r\n  width: initialWidth,\r\n  height: initialHeight,\r\n}) => {\r\n  const [canvas, setCanvas] = useState<Canvas | null>(null);\r\n\r\n  const alignGuidelines = useRef<AlignGuidelines | null>(null);\r\n\r\n  const centeringGuidelines = useRef<CenteringGuidelines | null>(null);\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const loadObjects = async (canvas: Canvas) => {\r\n    if (!initialObjects) return;\r\n\r\n    const objectsFonts: string[] = [];\r\n    canvas.remove(...canvas.getObjects());\r\n\r\n    const canvasWidth = canvas.getWidth();\r\n    const canvasHeight = canvas.getHeight();\r\n    const canvasSquare = canvasWidth * canvasHeight;\r\n    const canvasSqrt = Math.round(Math.sqrt(canvasSquare) * 100) / 100;\r\n\r\n    initialObjects.forEach((object) => {\r\n      if (\r\n        object.fontFamily &&\r\n        !objectsFonts.includes(object.fontFamily as string)\r\n      ) {\r\n        objectsFonts.push(object.fontFamily as string);\r\n      }\r\n    });\r\n\r\n    const fontsData = objectsFonts.map((objectFont) => {\r\n      const obj = initialObjects.find((obj) => obj.fontFamily === objectFont);\r\n      if (obj) {\r\n        return { name: objectFont, url: obj.fontUrl };\r\n      }\r\n      const defaultFont = FONTS.find(\r\n        (font) =>\r\n          font.family === objectFont || font.postScriptName === objectFont\r\n      );\r\n      return {\r\n        name: defaultFont?.postScriptName ?? objectFont,\r\n        url: defaultFont?.url ?? \"\",\r\n      };\r\n    });\r\n\r\n    await loadFonts(fontsData);\r\n    await Promise.all(\r\n      fontsData\r\n        .filter((f) => f.name)\r\n        .map((f) => document.fonts.load(`1em \"${f.name}\"`))\r\n    );\r\n    await document.fonts.ready;\r\n\r\n    await new Promise((resolve) => requestAnimationFrame(() => resolve(null)));\r\n\r\n    const canvasObjects = initialObjects.map((object) => {\r\n      const { text, type, left, top, width, height, fontSize, ...objectData } =\r\n        object;\r\n\r\n      const relativeData = {\r\n        left: left * canvasWidth,\r\n        top: top * canvasHeight,\r\n        width: width * canvasWidth,\r\n        height: height * canvasHeight,\r\n        fontSize: fontSize\r\n          ? Math.round((canvasSqrt / fontSize) * 100) / 100\r\n          : undefined,\r\n      };\r\n\r\n      if (type === \"Textbox\") {\r\n        const textbox = new Textbox(text as string, {\r\n          ...objectData,\r\n          ...relativeData,\r\n          fontFamily: object.fontFamily,\r\n        });\r\n        textbox.setControlsVisibility({ mt: false, mb: false });\r\n        return textbox;\r\n      }\r\n\r\n      throw new Error(`Unsupported object type: ${object.type}`);\r\n    });\r\n\r\n    canvas.add(...canvasObjects);\r\n\r\n    canvas.requestRenderAll();\r\n  };\r\n\r\n  const setCurrentDimensions = (canvas: Canvas) => {\r\n    const oldWidth = canvas.getWidth();\r\n    const oldHeight = canvas.getHeight();\r\n\r\n    canvas.setDimensions({\r\n      width: containerRef.current?.clientWidth ?? 0,\r\n      height: containerRef.current?.clientHeight ?? 0,\r\n    });\r\n\r\n    const scaleX = canvas.getWidth() / oldWidth;\r\n    const scaleY = canvas.getHeight() / oldHeight;\r\n\r\n    canvas.getObjects().forEach((object: any) => {\r\n      object.set({\r\n        width: object.width * scaleX,\r\n        height: object.height * scaleY,\r\n        left: object.left * scaleX,\r\n        top: object.top * scaleY,\r\n        fontSize: object.fontSize ? object.fontSize * scaleX : undefined,\r\n      });\r\n    });\r\n\r\n    canvas.renderAll();\r\n  };\r\n  useEffect(() => {\r\n    if (!canvas || !initialObjects) return;\r\n    void loadObjects(canvas);\r\n  }, [initialObjects, canvas]);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n    setGuidelines(canvas);\r\n\r\n    if (onReady) {\r\n      onReady(canvas);\r\n    }\r\n  }, [canvas]);\r\n\r\n  const setGuidelines = (canvas: Canvas) => {\r\n    alignGuidelines.current = new AlignGuidelines({\r\n      canvas: canvas,\r\n      aligningOptions: {\r\n        lineColor: \"#32D10A\",\r\n        lineMargin: 8,\r\n      },\r\n    });\r\n\r\n    alignGuidelines.current.init();\r\n\r\n    centeringGuidelines.current = new CenteringGuidelines({\r\n      canvas: canvas,\r\n      color: \"#32D10A\",\r\n      verticalOffset: 8,\r\n      horizontalOffset: 8,\r\n    });\r\n\r\n    centeringGuidelines.current.init();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const width = containerRef.current?.clientWidth ?? initialWidth ?? 0;\r\n    const height = containerRef.current?.clientHeight ?? initialHeight ?? 0;\r\n\r\n    const fabricCanvas = new Canvas(canvasRef.current ?? undefined, {\r\n      width,\r\n      height,\r\n    });\r\n\r\n    const observeTarget = containerRef.current;\r\n\r\n    if (!observeTarget) return;\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      if (!containerRef.current) return;\r\n\r\n      const width = containerRef.current.clientWidth;\r\n      const height = containerRef.current.clientHeight;\r\n\r\n      if (width !== 0 && height !== 0) {\r\n        setCurrentDimensions(fabricCanvas);\r\n        setCanvas(fabricCanvas);\r\n      }\r\n    });\r\n\r\n    resizeObserver.observe(observeTarget);\r\n\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n      resizeObserver.disconnect();\r\n      void fabricCanvas.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={containerRef}\r\n      className={className}\r\n      style={{\r\n        pointerEvents: readonly ? \"none\" : undefined,\r\n        width: initialWidth ? `${initialWidth}px` : undefined,\r\n        height: initialHeight ? `${initialHeight}px` : undefined,\r\n      }}\r\n    >\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n","import type { Canvas, IText, TextboxProps } from \"fabric\";\r\nimport { Textbox } from \"fabric\";\r\nimport { FONTS, loadFonts } from \"super-timeline\";\r\n\r\nexport type FabricControllerEvents =\r\n  | { type: \"selection:changed\" }\r\n  | { type: \"object:added\"; target: any }\r\n  | { type: \"object:removed\"; target: any }\r\n  | { type: \"object:modified\"; target: any }\r\n  | { type: \"text:changed\"; target: IText }\r\n  | { type: \"object:hover\"; target: any }\r\n  | { type: \"object:hover:out\" }\r\n  | { type: \"object:clicked\"; target: any }\r\n  | { type: \"canvas:clicked\" };\r\n\r\ntype Listener = (event: FabricControllerEvents) => void;\r\n\r\nexport class FabricController {\r\n  private canvas: Canvas;\r\n  private listeners: Set<Listener> = new Set();\r\n\r\n  constructor(canvas: Canvas) {\r\n    this.canvas = canvas;\r\n    this.bindEvents();\r\n  }\r\n\r\n  private bindEvents() {\r\n    const emit = (event: FabricControllerEvents) => {\r\n      this.listeners.forEach((l) => l(event));\r\n    };\r\n\r\n    this.canvas.on(\"selection:cleared\", () =>\r\n      emit({ type: \"selection:changed\" })\r\n    );\r\n    this.canvas.on(\"selection:created\", () =>\r\n      emit({ type: \"selection:changed\" })\r\n    );\r\n    this.canvas.on(\"selection:updated\", () =>\r\n      emit({ type: \"selection:changed\" })\r\n    );\r\n    this.canvas.on(\"object:added\", (e: any) =>\r\n      emit({ type: \"object:added\", target: e.target })\r\n    );\r\n    this.canvas.on(\"object:removed\", (e: any) =>\r\n      emit({ type: \"object:removed\", target: e.target })\r\n    );\r\n    this.canvas.on(\"object:modified\", (e: any) =>\r\n      emit({ type: \"object:modified\", target: e.target })\r\n    );\r\n    this.canvas.on(\"text:changed\", (e: any) =>\r\n      emit({ type: \"text:changed\", target: e.target })\r\n    );\r\n    this.canvas.on(\"mouse:over\", (e: any) =>\r\n      emit({ type: \"object:hover\", target: e.target })\r\n    );\r\n    this.canvas.on(\"mouse:out\", () => emit({ type: \"object:hover:out\" }));\r\n    this.canvas.on(\"mouse:down\", (e: any) => {\r\n      if (e && e.target) {\r\n        emit({ type: \"object:clicked\", target: e.target });\r\n      } else {\r\n        emit({ type: \"canvas:clicked\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  getCanvasElement() {\r\n    return this.canvas.getElement();\r\n  }\r\n\r\n  on(listener: Listener) {\r\n    this.listeners.add(listener);\r\n    return () => this.off(listener);\r\n  }\r\n\r\n  off(listener: Listener) {\r\n    this.listeners.delete(listener);\r\n  }\r\n\r\n  async importObjects(objects: any[], replace = true) {\r\n    if (!objects) return;\r\n    await this.loadFontsForObjects(objects);\r\n\r\n    if (replace) {\r\n      this.canvas.remove(...this.canvas.getObjects());\r\n    }\r\n\r\n    const canvasWidth = this.canvas.getWidth();\r\n    const canvasHeight = this.canvas.getHeight();\r\n    const canvasSquare = canvasWidth * canvasHeight;\r\n    const canvasSqrt = Math.round(Math.sqrt(canvasSquare) * 100) / 100;\r\n\r\n    const canvasObjects = objects.map((object) => {\r\n      const { text, type, left, top, width, height, fontSize, ...objectData } =\r\n        object;\r\n      const relativeData = {\r\n        left: left * canvasWidth,\r\n        top: top * canvasHeight,\r\n        width: width * canvasWidth,\r\n        height: height * canvasHeight,\r\n        fontSize: fontSize\r\n          ? Math.round((canvasSqrt / fontSize) * 100) / 100\r\n          : undefined,\r\n      };\r\n\r\n      if (type === \"Textbox\") {\r\n        const textbox = new Textbox(text as string, {\r\n          ...objectData,\r\n          ...relativeData,\r\n          fontFamily: object.fontFamily,\r\n        });\r\n        textbox.setControlsVisibility({ mt: false, mb: false });\r\n        return textbox;\r\n      }\r\n\r\n      throw new Error(`Unsupported object type: ${object.type}`);\r\n    });\r\n\r\n    this.canvas.add(...canvasObjects);\r\n    this.canvas.requestRenderAll();\r\n  }\r\n\r\n  private async loadFontsForObjects(objects: any[]) {\r\n    const objectsFonts: string[] = [];\r\n    objects.forEach((object) => {\r\n      if (\r\n        object.fontFamily &&\r\n        !objectsFonts.includes(object.fontFamily as string)\r\n      ) {\r\n        objectsFonts.push(object.fontFamily as string);\r\n      }\r\n    });\r\n\r\n    const fontsData = objectsFonts.map((objectFont) => {\r\n      const obj = objects.find((obj: any) => obj.fontFamily === objectFont);\r\n      if (obj) {\r\n        return { name: obj.fontFamily as string, url: obj.fontUrl as string };\r\n      }\r\n      const defaultFont = FONTS.find(\r\n        (font) =>\r\n          font.family === objectFont || font.postScriptName === objectFont\r\n      );\r\n      console.log(defaultFont);\r\n      return {\r\n        name: defaultFont?.postScriptName ?? objectFont,\r\n        url: defaultFont?.url ?? \"\",\r\n      };\r\n    });\r\n\r\n    await loadFonts(fontsData);\r\n    await Promise.all(\r\n      fontsData\r\n        .filter((f) => f.name)\r\n        .map((f) => document.fonts.load(`1em \"${f.name}\"`))\r\n    );\r\n    await document.fonts.ready;\r\n  }\r\n\r\n  exportObjects() {\r\n    const canvasJSON = this.canvas.toJSON();\r\n    const canvasWidth = this.canvas.getWidth();\r\n    const canvasHeight = this.canvas.getHeight();\r\n    const canvasSquare = canvasWidth * canvasHeight;\r\n    const canvasSqrt = Math.round(Math.sqrt(canvasSquare) * 100) / 100;\r\n    return (canvasJSON.objects as any[]).map((object: any) => {\r\n      const { left, top, width, height, fontSize } = object;\r\n      return {\r\n        ...object,\r\n        left: left / canvasWidth,\r\n        top: top / canvasHeight,\r\n        width: width / canvasWidth,\r\n        height: height / canvasHeight,\r\n        fontSize: fontSize\r\n          ? Math.round((canvasSqrt / fontSize) * 100) / 100\r\n          : undefined,\r\n      };\r\n    });\r\n  }\r\n\r\n  addText(text: string, options?: Partial<TextboxProps>) {\r\n    const textObject = new Textbox(text, options);\r\n    this.canvas.add(textObject);\r\n    this.canvas.setActiveObject(textObject);\r\n    this.canvas.renderAll();\r\n  }\r\n\r\n  removeSelected() {\r\n    const activeObject = this.canvas.getActiveObject();\r\n    if (activeObject) {\r\n      this.canvas.remove(activeObject);\r\n      this.canvas.renderAll();\r\n    }\r\n  }\r\n\r\n  getActiveText() {\r\n    const object = this.canvas.getActiveObject();\r\n    if (object instanceof Textbox) {\r\n      return object;\r\n    }\r\n  }\r\n\r\n  setStyle(style: string) {\r\n    const activeObject = this.getActiveText();\r\n    if (!activeObject) return false;\r\n    const currentValue = activeObject.get(\r\n      styleMap[style as keyof typeof styleMap]\r\n    );\r\n    if (style === \"bold\") {\r\n      const newValue = currentValue === \"bold\" ? \"normal\" : \"bold\";\r\n      this.updateText(activeObject, { fontWeight: newValue });\r\n    } else if (style === \"italic\") {\r\n      const newValue = currentValue === \"italic\" ? \"normal\" : \"italic\";\r\n      this.updateText(activeObject, { fontStyle: newValue });\r\n    } else if (style === \"uppercase\") {\r\n      const newText = isUppercase(activeObject.text);\r\n      this.updateText(activeObject, { text: newText });\r\n    } else {\r\n      this.updateText(activeObject, {\r\n        [styleMap[style]]: !currentValue,\r\n      } as any);\r\n    }\r\n  }\r\n\r\n  setFontFamily(fontFamily: string) {\r\n    const activeObject = this.getActiveText();\r\n    if (!activeObject) return;\r\n    this.updateText(activeObject, { fontFamily });\r\n  }\r\n\r\n  setProperty(properties: Partial<TextboxProps>) {\r\n    const activeObject = this.getActiveText();\r\n    if (!activeObject) return;\r\n    this.updateText(activeObject, { ...properties });\r\n  }\r\n\r\n  setFontSize(fontSize: number) {\r\n    const activeObject = this.getActiveText();\r\n    if (!activeObject) return;\r\n    this.updateText(activeObject, { fontSize });\r\n  }\r\n\r\n  setFill(color: string) {\r\n    const activeObject = this.getActiveText();\r\n    if (!activeObject) return;\r\n    this.updateText(activeObject, { fill: color } as any);\r\n  }\r\n\r\n  setTextAlign(align: \"left\" | \"center\" | \"right\" | \"justify\") {\r\n    const activeObject = this.getActiveText();\r\n    if (!activeObject) return;\r\n    this.updateText(activeObject, { textAlign: align } as any);\r\n  }\r\n\r\n  setText(text: string) {\r\n    const activeObject = this.getActiveText();\r\n    if (!activeObject) return;\r\n    this.updateText(activeObject, { text });\r\n  }\r\n\r\n  updateText(\r\n    object: Textbox,\r\n    options?: Partial<TextboxProps & { text: string }>\r\n  ) {\r\n    object.set(options);\r\n    // Не вызываем text:changed событие здесь, чтобы избежать циклических обновлений\r\n    // Событие будет вызвано автоматически при изменении объекта\r\n    this.canvas.renderAll();\r\n  }\r\n}\r\n\r\nexport const buildFabricController = (canvas: Canvas) =>\r\n  new FabricController(canvas);\r\n\r\nconst isUppercase = (text: string) => {\r\n  const isUpper = text === text.toUpperCase();\r\n  const newText = isUpper ? text.toLowerCase() : text.toUpperCase();\r\n  return newText;\r\n};\r\n\r\nconst styleMap: Record<string, keyof TextboxProps> = {\r\n  bold: \"fontWeight\",\r\n  italic: \"fontStyle\",\r\n  underline: \"underline\",\r\n  linethrough: \"linethrough\",\r\n  overline: \"overline\",\r\n};\r\n\r\nexport type FabricControllerType = FabricController;\r\n","\"use client\";\r\n\r\nimport type { Canvas, FabricObject, IText } from \"fabric\";\r\nimport { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { buildFabricController } from \"./controller\";\r\n\r\ntype Props = {\r\n  onChange?: (object: FabricObject) => void;\r\n};\r\n\r\ntype SelectEvent = {\r\n  selected: FabricObject[];\r\n};\r\n\r\ntype ObjectEvent = {\r\n  target: FabricObject;\r\n};\r\n\r\ntype TextEvent = {\r\n  target: IText;\r\n};\r\n\r\nexport const useFabricEditor = ({ onChange }: Props) => {\r\n  const [canvas, setCanvas] = useState<Canvas | null>(null);\r\n\r\n  const isInitializing = useRef(true);\r\n\r\n  const [selectedObjects, setSelectedObject] = useState<FabricObject[]>([]);\r\n\r\n  useEffect(() => {\r\n    const onSelectionCleared = () => {\r\n      setSelectedObject([]);\r\n    };\r\n\r\n    const onSelectionCreated = (event: SelectEvent) => {\r\n      setSelectedObject(event.selected);\r\n    };\r\n\r\n    const onSelectionUpdated = (event: SelectEvent) => {\r\n      setSelectedObject(event.selected);\r\n    };\r\n\r\n    const onObjectAdded = (event: ObjectEvent) => {\r\n      if (!isInitializing.current) {\r\n        onChange?.(event.target);\r\n      }\r\n    };\r\n\r\n    const onObjectRemoved = (event: ObjectEvent) => {\r\n      onChange?.(event.target);\r\n    };\r\n\r\n    const onObjectModified = (event: ObjectEvent) => {\r\n      onChange?.(event.target);\r\n    };\r\n\r\n    const onTextChange = (event: TextEvent) => {\r\n      onChange?.(event.target);\r\n    };\r\n\r\n    const bindEvents = (canvas: Canvas) => {\r\n      canvas.on(\"selection:cleared\", onSelectionCleared);\r\n      canvas.on(\"selection:created\", onSelectionCreated);\r\n      canvas.on(\"selection:updated\", onSelectionUpdated);\r\n      canvas.on(\"object:added\", onObjectAdded);\r\n      canvas.on(\"object:removed\", onObjectRemoved);\r\n      canvas.on(\"object:modified\", onObjectModified);\r\n      canvas.on(\"text:changed\", onTextChange);\r\n    };\r\n\r\n    if (canvas) {\r\n      bindEvents(canvas);\r\n\r\n      setTimeout(() => {\r\n        isInitializing.current = false;\r\n      }, 0);\r\n    }\r\n\r\n    return () => {\r\n      if (!canvas) return;\r\n      canvas.off(\"selection:cleared\", onSelectionCleared);\r\n      canvas.off(\"selection:created\", onSelectionCreated);\r\n      canvas.off(\"selection:updated\", onSelectionUpdated);\r\n      canvas.off(\"object:added\", onObjectAdded);\r\n      canvas.off(\"object:removed\", onObjectRemoved);\r\n      canvas.off(\"object:modified\", onObjectModified);\r\n      canvas.off(\"text:changed\", onTextChange);\r\n    };\r\n  }, [canvas, onChange]);\r\n\r\n  const controller = useMemo(\r\n    () => (canvas ? buildFabricController(canvas) : undefined),\r\n    [canvas]\r\n  );\r\n\r\n  const handleReady = (canvas: Canvas) => {\r\n    console.log(\"Fabric canvas ready\");\r\n    setCanvas(canvas);\r\n  };\r\n\r\n  return {\r\n    selectedObjects,\r\n    handleReady,\r\n    controller,\r\n  };\r\n};\r\n","\"use client\";\r\n\r\nimport type { FC } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport type { FabricController } from \"./controller\";\r\nimport {\r\n  FONTS,\r\n  getCompactFontData,\r\n  loadFonts,\r\n  ScrollArea,\r\n  FontFamily,\r\n  Alignment,\r\n  TextDecoration,\r\n  FontStyle,\r\n  FontSize,\r\n  FontColor,\r\n  Opacity,\r\n  BackgroundColor,\r\n} from \"super-timeline\";\r\nimport { ShoppingBasket, Trash2, X } from \"lucide-react\";\r\n\r\n// Types from super-timeline\r\nimport type { ICompactFont, IFont } from \"super-timeline\";\r\nimport { TextboxProps } from \"fabric\";\r\n\r\ntype Props = {\r\n  controller: FabricController;\r\n  visible: boolean;\r\n  onClose?: () => void;\r\n};\r\n\r\nexport const TextToolbar: FC<Props> = ({ controller, visible, onClose }) => {\r\n  type TextProperties = {\r\n    color: string;\r\n    colorDisplay: string;\r\n    fontSize: number;\r\n    fontSizeDisplay: string;\r\n    fontFamily: string;\r\n    fontFamilyDisplay: string;\r\n    opacity: number;\r\n    opacityDisplay: string;\r\n    textAlign: \"left\" | \"center\" | \"right\" | \"justify\";\r\n    textDecoration: string;\r\n    borderWidth: number;\r\n    borderColor: string;\r\n    backgroundColor?: string;\r\n  };\r\n\r\n  const [properties, setProperties] = useState<TextProperties>({\r\n    color: \"#ffffff\",\r\n    colorDisplay: \"#ffffff\",\r\n    fontSize: 40,\r\n    fontSizeDisplay: \"40px\",\r\n    fontFamily: \"Open Sans\",\r\n    fontFamilyDisplay: \"Open Sans\",\r\n    opacity: 100,\r\n    opacityDisplay: \"100%\",\r\n    textAlign: \"left\",\r\n    textDecoration: \"none\",\r\n    borderWidth: 0,\r\n    borderColor: \"#000000\",\r\n    backgroundColor: \"#00000000\",\r\n  });\r\n\r\n  const [selectedFont, setSelectedFont] = useState<ICompactFont>({\r\n    family: \"Open Sans\",\r\n    styles: [],\r\n    // @ts-expect-error default is required by ICompactFont at runtime; we only need shape\r\n    default: {\r\n      family: \"Open Sans\",\r\n      postScriptName: \"OpenSans-Regular\",\r\n      url: \"\",\r\n    },\r\n    name: \"Regular\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    import(\"super-timeline/style.css\");\r\n  }, []);\r\n\r\n  const handleSetProperties = () => {\r\n    const active = controller.getActiveText();\r\n    if (active) {\r\n      const activeFontFamily =\r\n        (active.get(\"fontFamily\") as string) || \"Open Sans\";\r\n      const activeFontSize = (active.get(\"fontSize\") as number) || 40;\r\n      const activeFill = (active.get(\"fill\") as string) || \"#ffffff\";\r\n      const activeAlign = (active.get(\"textAlign\") as any) || \"left\";\r\n      const activeBackground =\r\n        (active.get(\"backgroundColor\") as any) || \"#00000000\";\r\n      const activeOpacity = (active.get(\"opacity\") as number) ?? 1; // fabric хранит в 0-1\r\n      const activeDecoration =\r\n        (active.get(\"underline\") ? \"underline \" : \"\") +\r\n        (active.get(\"linethrough\") ? \"line-through \" : \"\") +\r\n        (active.get(\"overline\") ? \"overline\" : \"\");\r\n\r\n      const compactFonts = getCompactFontData(FONTS);\r\n      const found = compactFonts.find((f) => f.family === activeFontFamily);\r\n\r\n      setSelectedFont(\r\n        found\r\n          ? {\r\n              ...found,\r\n              name:\r\n                found.default?.postScriptName?.split(\"-\")?.slice(-1)[0] ||\r\n                \"Regular\",\r\n            }\r\n          : selectedFont\r\n      );\r\n\r\n      setProperties((prev) => ({\r\n        ...prev,\r\n        fontFamily: activeFontFamily,\r\n        fontFamilyDisplay: activeFontFamily,\r\n        fontSize: activeFontSize,\r\n        fontSizeDisplay: `${activeFontSize}px`,\r\n        color: activeFill,\r\n        colorDisplay: activeFill,\r\n        textAlign: activeAlign,\r\n        backgroundColor: activeBackground,\r\n        opacity: Math.round(activeOpacity * 100),\r\n        opacityDisplay: `${Math.round(activeOpacity * 100)}%`,\r\n        textDecoration: activeDecoration.trim() || \"none\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handler = (evt: any) => {\r\n      if (evt.type !== \"selection:changed\") return;\r\n      if (!visible) return;\r\n\r\n      const active = controller.getActiveText();\r\n      if (active) {\r\n        handleSetProperties();\r\n      }\r\n    };\r\n    controller.on(handler);\r\n    return () => {\r\n      controller.off(handler);\r\n    };\r\n  }, [visible, controller]);\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      handleSetProperties();\r\n    }\r\n  }, [visible]);\r\n\r\n  const handleChangeFont = async (font: ICompactFont) => {\r\n    const fontName = font.default.postScriptName;\r\n    const fontUrl = font.default.url;\r\n    await loadFonts([{ name: fontName, url: fontUrl }]).then(() => {\r\n      controller.setFontFamily(fontName);\r\n    });\r\n    setSelectedFont({\r\n      ...font,\r\n      name: fontName.split(\"-\").slice(-1)[0] || \"Regular\",\r\n    });\r\n    setProperties((prev) => ({\r\n      ...prev,\r\n      fontFamily: font.default.family,\r\n      fontFamilyDisplay: font.default.family,\r\n    }));\r\n  };\r\n\r\n  const handleChangeFontStyle = async (font: IFont) => {\r\n    const fontName = font.postScriptName;\r\n    const fontUrl = font.url;\r\n    await loadFonts([{ name: fontName, url: fontUrl }]).then(() => {\r\n      controller.setFontFamily(fontName);\r\n    });\r\n    setSelectedFont((prev) => ({\r\n      ...prev,\r\n      name: fontName.split(\"-\").slice(-1)[0] || prev.name,\r\n    }));\r\n  };\r\n\r\n  const handleChangeFontSize = (v: number) => {\r\n    setProperties((prev) => ({\r\n      ...prev,\r\n      fontSize: v,\r\n      fontSizeDisplay: `${v}px`,\r\n    }));\r\n    controller.setFontSize(v);\r\n  };\r\n\r\n  const handleColorChange = (color: string) => {\r\n    setProperties((prev) => ({ ...prev, color, colorDisplay: color }));\r\n    controller.setProperty({ fill: color });\r\n  };\r\n\r\n  const handleChangeTextAlign = (\r\n    v: \"left\" | \"center\" | \"right\" | \"justify\" | string\r\n  ) => {\r\n    const textAlign = v as any as \"left\" | \"center\" | \"right\" | \"justify\";\r\n    setProperties((prev) => ({ ...prev, textAlign }));\r\n    controller.setProperty({ textAlign });\r\n  };\r\n\r\n  const handleChangeTextDecoration = (v: string) => {\r\n    const properties: Partial<TextboxProps> = {\r\n      underline: v.includes(\"underline\"),\r\n      linethrough: v.includes(\"line-through\"),\r\n      overline: v.includes(\"overline\"),\r\n    };\r\n\r\n    setProperties((prev) => ({ ...prev, textDecoration: v }));\r\n    controller.setProperty(properties);\r\n  };\r\n\r\n  const handleChangeOpacity = (v: number) => {\r\n    setProperties((prev) => ({ ...prev, opacity: v, opacityDisplay: `${v}%` }));\r\n    controller.setProperty({ opacity: v / 100 });\r\n  };\r\n\r\n  const handleBackgroundChange = (backgroundColor: string) => {\r\n    setProperties((prev) => ({ ...prev, backgroundColor }));\r\n    controller.setProperty({ backgroundColor });\r\n  };\r\n\r\n  const handleRemoveSelected = () => {\r\n    controller.removeSelected();\r\n  };\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: \"50%\",\r\n        transform: \"translate(0, -50%)\",\r\n        // zIndex: 2,\r\n        height: \"300px\",\r\n        // overflow: \"hidden\",\r\n        // overflowY: \"scroll\",\r\n        maxWidth: \"250px\",\r\n      }}\r\n      className=\"flex flex-1 flex-col pointer-events-auto rounded-lg border border-border bg-background/95 p-2 shadow-2xl backdrop-blur-md\"\r\n    >\r\n      <div className=\"flex items-center justify-between gap-2 pb-2 px-1\">\r\n        <div className=\"text-xs text-muted-foreground\">Text</div>\r\n        <button\r\n          aria-label=\"Close\"\r\n          className=\"inline-flex h-6 w-6 items-center justify-center rounded hover:bg-muted/50\"\r\n          onClick={onClose}\r\n        >\r\n          <X size={14} />\r\n        </button>\r\n      </div>\r\n      <ScrollArea className=\"h-full\">\r\n        <div className=\"flex flex-col gap-2 px-4\">\r\n          <div className=\"flex flex-col gap-2\">\r\n            <FontFamily\r\n              handleChangeFont={handleChangeFont}\r\n              fontFamilyDisplay={properties.fontFamilyDisplay}\r\n            />\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <FontStyle\r\n                selectedFont={selectedFont}\r\n                handleChangeFontStyle={handleChangeFontStyle}\r\n              />\r\n              <FontSize\r\n                value={properties.fontSize}\r\n                onChange={handleChangeFontSize}\r\n              />\r\n            </div>\r\n            <FontColor\r\n              value={properties.color}\r\n              handleColorChange={handleColorChange}\r\n            />\r\n\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <Alignment\r\n                value={properties.textAlign}\r\n                onChange={handleChangeTextAlign}\r\n              />\r\n              <TextDecoration\r\n                value={properties.textDecoration}\r\n                onChange={handleChangeTextDecoration}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <Opacity\r\n            onChange={(v: number) => handleChangeOpacity(v)}\r\n            value={properties.opacity!}\r\n          />\r\n\r\n          <BackgroundColor\r\n            value={properties.backgroundColor || \"#ffffff\"}\r\n            handleBackgroundChange={handleBackgroundChange}\r\n          />\r\n          <div className=\"flex justify-center pt-2\">\r\n            <button\r\n              onClick={handleRemoveSelected}\r\n              className=\"w-full flex items-center justify-center gap-2 rounded-md bg-red-500/90 text-white text-sm py-2 transition-colors hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-400\"\r\n            >\r\n              <Trash2 size=\"17px\" />\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport { Fragment, memo, type FC } from \"react\";\r\nimport { AbsoluteFill, useVideoConfig, Easing } from \"remotion\";\r\nimport { Scene } from \"./scene\";\r\nimport { FPS, transitionDuration } from \"../utils\";\r\nimport { FabricCanvas } from \"../../../fabric-editor\";\r\nimport { fade } from \"@remotion/transitions/fade\";\r\nimport { linearTiming, TransitionSeries } from \"@remotion/transitions\";\r\n\r\ntype Props = {\r\n  scenes?: any[];\r\n};\r\n\r\nconst ScenesComponent: FC<Props> = ({ scenes }) => {\r\n  const { width, height } = useVideoConfig();\r\n\r\n  return (\r\n    <AbsoluteFill style={{ backgroundColor: \"black\" }}>\r\n      {/* Основные сцены */}\r\n      <TransitionSeries>\r\n        {scenes?.map((scene, index) => {\r\n          const durationInFrames = scene.duration * FPS;\r\n\r\n          return (\r\n            <Fragment>\r\n              <TransitionSeries.Sequence\r\n                key={index}\r\n                durationInFrames={durationInFrames}\r\n                premountFor={120}\r\n              >\r\n                <Scene\r\n                  type={scene.file?.type ?? \"image\"}\r\n                  url={scene.file?.url}\r\n                />\r\n              </TransitionSeries.Sequence>\r\n              <TransitionSeries.Transition\r\n                key={index}\r\n                presentation={fade()}\r\n                timing={linearTiming({ durationInFrames: transitionDuration })}\r\n              />\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </TransitionSeries>\r\n\r\n      {/* Текст и объекты */}\r\n      <TransitionSeries>\r\n        {scenes?.map((scene, index) => {\r\n          const sceneDurationInFrames = scene.duration * FPS;\r\n\r\n          const durationWithTransition =\r\n            sceneDurationInFrames > 30\r\n              ? sceneDurationInFrames - transitionDuration\r\n              : sceneDurationInFrames;\r\n\r\n          return (\r\n            <Fragment>\r\n              <TransitionSeries.Sequence\r\n                durationInFrames={durationWithTransition}\r\n              >\r\n                <FabricCanvas\r\n                  key={index}\r\n                  initialObjects={scene.objects}\r\n                  className=\"absolute left-0 top-0 size-full\"\r\n                  width={width}\r\n                  height={height}\r\n                  readonly\r\n                />\r\n              </TransitionSeries.Sequence>\r\n              <TransitionSeries.Sequence durationInFrames={transitionDuration}>\r\n                {/* Чтобы эффект fade не накладывался на предыдущий текст */}\r\n                <></>\r\n              </TransitionSeries.Sequence>\r\n              <TransitionSeries.Transition\r\n                presentation={fade()}\r\n                timing={linearTiming({\r\n                  durationInFrames: transitionDuration,\r\n                  easing: Easing.in(Easing.ease),\r\n                })}\r\n              />\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </TransitionSeries>\r\n    </AbsoluteFill>\r\n  );\r\n};\r\n\r\nexport const Scenes = memo(ScenesComponent);\r\n","import { type FC } from \"react\";\r\nimport { Audio } from \"remotion\";\r\n\r\ntype Props = {\r\n    src: string;\r\n    volume?: number;\r\n};\r\n\r\nexport const AudioPlayer: FC<Props> = ({ src, volume = 0.4 }) => {\r\n    return (\r\n        <Audio\r\n            src={src}\r\n            volume={volume}\r\n        />\r\n    );\r\n};\r\n","\"use client\";\r\n\r\nimport { memo, type FC } from \"react\";\r\nimport { Audio, Series } from \"remotion\";\r\nimport { AudioPlayer } from \"./audio-player\";\r\nimport { FPS, minSceneDurationInFrames, transitionDuration } from \"../utils\";\r\n\r\ntype Props = {\r\n  scenes?: any[];\r\n  musicUrl?: string | null;\r\n};\r\n\r\nconst Volumes: FC<Props> = ({ scenes, musicUrl }) => {\r\n  return (\r\n    <>\r\n      <Series>\r\n        {scenes?.map((scene, index) => {\r\n          const sceneDurationInFrames = scene.duration * FPS;\r\n          const durationWithTransition =\r\n            sceneDurationInFrames > minSceneDurationInFrames\r\n              ? sceneDurationInFrames - transitionDuration\r\n              : sceneDurationInFrames;\r\n\r\n          return (\r\n            <Series.Sequence\r\n              durationInFrames={durationWithTransition}\r\n              premountFor={10}\r\n              key={index}\r\n            >\r\n              {scene.sound_effect?.url && (\r\n                <Audio\r\n                  src={scene.sound_effect.url}\r\n                  volume={0.3}\r\n                />\r\n              )}\r\n\r\n              {scene.voiceover?.url &&\r\n                scene.file?.video_generation?.generation_config_name !==\r\n                  \"comfyui/lip-sync\" && (\r\n                  <Audio\r\n                    src={scene.voiceover.url}\r\n                    volume={1}\r\n                  />\r\n                )}\r\n            </Series.Sequence>\r\n          );\r\n        })}\r\n      </Series>\r\n\r\n      {musicUrl && (\r\n        <AudioPlayer\r\n          src={musicUrl}\r\n          volume={0.4}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const VolumesComponent = memo(Volumes);\r\n","import { type FC } from \"react\";\r\nimport { AbsoluteFill } from \"remotion\";\r\n\r\nimport { Scenes } from \"./scenes\";\r\nimport { VolumesComponent } from \"./volumes\";\r\n\r\ntype Props = {\r\n  scenes?: any[];\r\n  musicUrl?: string | null;\r\n};\r\n\r\nexport const VideoComponent: FC<Props> = ({ scenes, musicUrl }) => {\r\n  return (\r\n    <AbsoluteFill style={{ backgroundColor: \"black\", position: \"relative\" }}>\r\n      <Scenes scenes={scenes} />\r\n      <VolumesComponent\r\n        musicUrl={musicUrl}\r\n        scenes={scenes}\r\n      />\r\n    </AbsoluteFill>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport type { FC } from \"react\";\r\nimport { memo, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport type { PlayerRef } from \"@remotion/player\";\r\nimport { Player } from \"@remotion/player\";\r\nimport { calculateDuration, FPS } from \"./utils\";\r\nimport { VideoComponent } from \"./components/video-component\";\r\n\r\ntype Props = {\r\n  scenes?: any[];\r\n  music?: any;\r\n  aspectRatio?: number;\r\n  isLoading?: boolean;\r\n};\r\n\r\nconst VideoPlayer: FC<Props> = ({\r\n  scenes,\r\n  music,\r\n  aspectRatio = 16 / 9,\r\n  isLoading,\r\n}) => {\r\n  const containerRef = useRef<HTMLDivElement | null>(null);\r\n  const playerRef = useRef<PlayerRef | null>(null);\r\n\r\n  const [metadata, setMetadata] = useState<{\r\n    durationInFrames: number;\r\n    compositionWidth: number;\r\n    compositionHeight: number;\r\n    fps: number;\r\n  } | null>(null);\r\n\r\n  useEffect(() => {\r\n    const container = containerRef.current;\r\n\r\n    if (!container) return;\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      const containerWidth = container.clientWidth;\r\n      const containerHeight = container.clientHeight;\r\n\r\n      let compositionWidth;\r\n      let compositionHeight;\r\n\r\n      if (containerWidth / aspectRatio <= containerHeight) {\r\n        compositionWidth = containerWidth;\r\n        compositionHeight = containerWidth / aspectRatio;\r\n      } else {\r\n        compositionHeight = containerHeight;\r\n        compositionWidth = containerHeight * aspectRatio;\r\n      }\r\n\r\n      if (!compositionWidth || !compositionHeight) return;\r\n\r\n      const totalDuration = calculateDuration(scenes || []);\r\n\r\n      setMetadata({\r\n        durationInFrames: totalDuration,\r\n        fps: FPS,\r\n        compositionWidth: Math.round(compositionWidth - 5),\r\n        compositionHeight: Math.round(compositionHeight - 5),\r\n      });\r\n    });\r\n\r\n    resizeObserver.observe(container);\r\n\r\n    return () => {\r\n      resizeObserver.disconnect();\r\n    };\r\n  }, [aspectRatio, scenes]);\r\n\r\n  const inputProps = {\r\n    scenes,\r\n    musicUrl: music?.file?.url,\r\n  };\r\n\r\n  const renderPlayPauseButton = useCallback(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <div\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n          title=\"Loading\"\r\n        >\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-2\"></div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col\">\r\n      <div\r\n        ref={containerRef}\r\n        className=\"flex-1 flex justify-center items-center relative w-full h-full min-h-0\"\r\n      >\r\n        {metadata && (\r\n          <Player\r\n            ref={playerRef}\r\n            {...metadata}\r\n            component={() => VideoComponent(inputProps)}\r\n            renderPlayPauseButton={renderPlayPauseButton}\r\n            clickToPlay={!isLoading}\r\n            numberOfSharedAudioTags={10}\r\n            controls={true}\r\n            moveToBeginningWhenEnded={false}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const RemotionPlayer = memo(VideoPlayer);\r\n","import React, { useState } from \"react\";\r\nimport type { ProjectTimelineMutationOptions } from \"../types\";\r\nimport { ProjectService } from \"@turbo-super/api\";\r\n\r\nexport const useGenerateTimeline = (\r\n  mutationKey?: string[],\r\n  options?: ProjectTimelineMutationOptions\r\n) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<Error | null>(null);\r\n\r\n  const mutate = async (data: any) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      const result = await ProjectService.projectRegenerateTimeline(data);\r\n      console.log(\"result\", result);\r\n      if (options?.onSuccess) {\r\n        options.onSuccess(result);\r\n      }\r\n\r\n      return result;\r\n    } catch (err) {\r\n      const error = err instanceof Error ? err : new Error(\"Unknown error\");\r\n      setError(error);\r\n\r\n      if (options?.onError) {\r\n        options.onError(error);\r\n      }\r\n\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    mutate,\r\n    isLoading,\r\n    error,\r\n  };\r\n};\r\n","import type { TimelineData } from \"../types\";\r\nimport type { IProjectRead, ISceneRead } from \"@turbo-super/api\";\r\n\r\n/**\r\n * Конвертирует ISceneRead в TimelineData\r\n */\r\nexport function convertSceneToTimeline(scene: ISceneRead): TimelineData {\r\n  return {\r\n    id: scene.id,\r\n    project_id: scene.id, // Временно используем scene.id, нужно будет исправить\r\n    order: scene.order,\r\n    visual_description: scene.visual_description,\r\n    action_description: scene.action_description,\r\n    dialogue: scene.dialogue,\r\n    duration: scene.duration,\r\n    file: scene.file\r\n      ? {\r\n          id: scene.file.id,\r\n          url: scene.file.url || \"\",\r\n          type: scene.file.type || \"image\",\r\n        }\r\n      : undefined,\r\n  };\r\n}\r\n\r\n/**\r\n * Конвертирует массив сцен в timeline\r\n */\r\nexport function convertScenesToTimeline(scenes: ISceneRead[]): TimelineData[] {\r\n  return scenes.sort((a, b) => a.order - b.order).map(convertSceneToTimeline);\r\n}\r\n\r\n/**\r\n * Получает общую длительность timeline\r\n */\r\nexport function getTimelineDuration(timeline: TimelineData[]): number {\r\n  return timeline.reduce((acc, item) => acc + (item.duration || 5), 0);\r\n}\r\n\r\n/**\r\n * Создает ключи для React Query\r\n */\r\nexport const projectQueryKeys = {\r\n  all: [\"projects\"] as const,\r\n  byId: (id: string) => [\"projects\", id] as const,\r\n  timeline: (id: string) => [\"projects\", id, \"timeline\"] as const,\r\n  video: (id: string) => [\"projects\", id, \"video\"] as const,\r\n};\r\n","import type { IFileRead } from \"@turbo-super/api\";\r\nimport { FileTypeEnum } from \"@turbo-super/api\";\r\n\r\n// Временная заглушка для типа из super-timeline\r\ntype ItemType = \"image\" | \"video\" | \"audio\" | \"text\";\r\n\r\n// Экспортируем типы для использования в других файлах\r\nexport type { ItemType };\r\n\r\nexport const mediaTypeMap = {\r\n  [FileTypeEnum.IMAGE]: \"image\",\r\n  [FileTypeEnum.VIDEO]: \"video\",\r\n  [FileTypeEnum.VOICEOVER]: \"audio\",\r\n  [FileTypeEnum.SOUND_EFFECT]: \"audio\",\r\n  [FileTypeEnum.AUDIO]: \"audio\",\r\n  [FileTypeEnum.MUSIC]: \"audio\",\r\n  [FileTypeEnum.TEXT]: \"text\",\r\n  [FileTypeEnum.OTHER]: \"text\",\r\n};\r\n\r\ntype TrackItemProps = {\r\n  file: IFileRead;\r\n  duration: number;\r\n  from: number;\r\n  id?: string;\r\n};\r\n\r\ntype TrackItemDetailsProps = {\r\n  text?: string;\r\n  file: IFileRead;\r\n  textDetails?: any;\r\n  size?: {\r\n    width: number | string;\r\n    height: number | string;\r\n  };\r\n};\r\n\r\nconst createMusicTrackItem = ({ duration, file, from }: TrackItemProps) => {\r\n  const fileDurationMs = file.duration ? file.duration * 1000 : duration;\r\n\r\n  const trimTo = Math.min(fileDurationMs, duration);\r\n  const displayTo = from + trimTo;\r\n\r\n  return {\r\n    id: file.id,\r\n    name: \"\",\r\n    type: \"audio\",\r\n    display: {\r\n      from,\r\n      to: displayTo,\r\n    },\r\n    trim: {\r\n      from: 0,\r\n      to: trimTo,\r\n    },\r\n    isMain: false,\r\n    details: {\r\n      src: file.url,\r\n      duration: fileDurationMs,\r\n      volume: 100,\r\n      text: file.type,\r\n    },\r\n  };\r\n};\r\n\r\nconst createImageTrackItem = ({ duration, file, from }: TrackItemProps) => {\r\n  return {\r\n    id: file.id,\r\n    type: \"image\",\r\n    name: \"\",\r\n    display: {\r\n      from,\r\n      to: from + duration,\r\n    },\r\n    metadata: {},\r\n    isMain: false,\r\n    details: {\r\n      src: file.url,\r\n      // width: 1280,\r\n      // height: 1920,\r\n      opacity: 100,\r\n      // transform: \"scale(0.84375)\",\r\n      border: \"none\",\r\n      borderRadius: \"0\",\r\n      boxShadow: \"none\",\r\n      top: \"0px\",\r\n      // left: \"-100px\",\r\n    },\r\n  };\r\n};\r\n\r\nconst createVideoTrackItem = ({ duration, file, from }: TrackItemProps) => {\r\n  const fileDurationMs = file.duration ? file.duration * 1000 : duration;\r\n\r\n  return {\r\n    id: file.id,\r\n    type: \"video\",\r\n    preview: file.thumbnail_url,\r\n    display: {\r\n      from,\r\n      to: from + duration,\r\n    },\r\n    trim: {\r\n      from: 0,\r\n      to: fileDurationMs,\r\n    },\r\n    isMain: false,\r\n    details: {\r\n      width: 1920,\r\n      height: 1080,\r\n      duration: fileDurationMs,\r\n      src: file.url,\r\n      volume: 100,\r\n      top: \"600px\",\r\n      left: \"-100px\",\r\n      text: \"Scene\",\r\n    },\r\n  };\r\n};\r\n\r\nconst createTextTrackItem = ({ duration, from, id }: TrackItemProps) => {\r\n  return {\r\n    id,\r\n    name: \"\",\r\n    type: \"text\",\r\n    display: { from, to: from + duration },\r\n    metadata: {},\r\n    isMain: false,\r\n  };\r\n};\r\n\r\nconst trackItemTrackMap = {\r\n  [FileTypeEnum.IMAGE]: createImageTrackItem,\r\n  [FileTypeEnum.VIDEO]: createVideoTrackItem,\r\n  [FileTypeEnum.VOICEOVER]: createMusicTrackItem,\r\n  [FileTypeEnum.SOUND_EFFECT]: createMusicTrackItem,\r\n  [FileTypeEnum.AUDIO]: createMusicTrackItem,\r\n  [FileTypeEnum.MUSIC]: createMusicTrackItem,\r\n  [FileTypeEnum.TEXT]: createTextTrackItem,\r\n  [FileTypeEnum.OTHER]: createTextTrackItem,\r\n};\r\n\r\nconst createMusicDetails = ({ file }: TrackItemDetailsProps) => {\r\n  return {\r\n    type: \"audio\",\r\n    details: {\r\n      src: file.url,\r\n      duration: file.duration ? file.duration * 1000 : null,\r\n      volume: 100,\r\n      text: file.audio_generation?.prompt ?? file.type,\r\n    },\r\n  };\r\n};\r\n\r\nconst createImageDetails = ({ file }: TrackItemDetailsProps) => {\r\n  return {\r\n    type: \"image\",\r\n    details: {\r\n      src: file.url,\r\n      // width: 1280,\r\n      // height: 1920,\r\n      opacity: 100,\r\n      // transform: \"scale(0.84375)\",\r\n      border: \"none\",\r\n      borderRadius: \"0\",\r\n      boxShadow: \"none\",\r\n      top: \"0px\",\r\n      // left: \"-100px\",\r\n    },\r\n  };\r\n};\r\n\r\nconst createVideoDetails = ({ file }: TrackItemDetailsProps) => {\r\n  return {\r\n    type: \"video\",\r\n    details: {\r\n      width: 1280,\r\n      height: 720,\r\n      src: file.url,\r\n      volume: 100,\r\n      top: \"600px\",\r\n      left: \"-100px\",\r\n      text: file.video_generation?.prompt?.length\r\n        ? file.video_generation.prompt\r\n        : \"Video\",\r\n      duration: file.duration ? file.duration * 1000 : undefined,\r\n    },\r\n  };\r\n};\r\nconst createTextDetails = ({\r\n  text,\r\n  textDetails,\r\n  size,\r\n}: TrackItemDetailsProps) => {\r\n  const canvasWidth = Number(size?.width ?? 1920);\r\n  const canvasHeight = Number(size?.height ?? 1080);\r\n\r\n  const canvasSquare = canvasWidth * canvasHeight;\r\n  const canvasSqrt = Math.round(Math.sqrt(canvasSquare) * 100) / 115;\r\n\r\n  const fontSize = textDetails.fontSize\r\n    ? Math.round((canvasSqrt / textDetails.fontSize) * 100) / 100\r\n    : undefined;\r\n\r\n  return {\r\n    type: \"text\",\r\n    details: {\r\n      ...textDetails,\r\n      fontFamily: \"Roboto-Bold\",\r\n      fontSize: fontSize,\r\n      text,\r\n      opacity: 100,\r\n      textAlign: textDetails.textAlign ?? \"right\",\r\n\r\n      wordWrap: \"break-word\",\r\n      wordBreak: \"normal\",\r\n      WebkitTextStrokeColor: \"#ffffff\",\r\n      WebkitTextStrokeWidth: \"0px\",\r\n      top: `${textDetails.top * canvasHeight - (textDetails?.height * canvasHeight) / 2}px`,\r\n      left: `${textDetails.left * canvasWidth - (textDetails?.width * canvasWidth) / 2}px`,\r\n      width: textDetails.width * canvasWidth,\r\n      height: textDetails.height * canvasHeight,\r\n      fontUrl:\r\n        \"https://fonts.gstatic.com/s/roboto/v29/KFOlCnqEu92Fr1MmWUlvAx05IsDqlA.ttf\",\r\n    },\r\n  };\r\n};\r\n\r\nconst trackItemDetailsMap = {\r\n  [FileTypeEnum.IMAGE]: createImageDetails,\r\n  [FileTypeEnum.VIDEO]: createVideoDetails,\r\n  [FileTypeEnum.VOICEOVER]: createMusicDetails,\r\n  [FileTypeEnum.SOUND_EFFECT]: createMusicDetails,\r\n  [FileTypeEnum.AUDIO]: createMusicDetails,\r\n  [FileTypeEnum.MUSIC]: createMusicDetails,\r\n  [FileTypeEnum.TEXT]: createTextDetails,\r\n  [FileTypeEnum.OTHER]: createTextDetails,\r\n};\r\n\r\nexport const createTrackItemMap = (type: FileTypeEnum) => {\r\n  return trackItemTrackMap[type];\r\n};\r\n\r\nexport const createTrackDetailsMap = (type: FileTypeEnum) => {\r\n  return trackItemDetailsMap[type];\r\n};\r\n\r\nexport const createTrack = (\r\n  trackId: string,\r\n  type: FileTypeEnum,\r\n  items: string[]\r\n) => {\r\n  return {\r\n    id: trackId,\r\n    accepts: [\"text\", \"audio\", \"helper\", \"video\", \"image\"],\r\n    type: mediaTypeMap[type] as ItemType,\r\n    items,\r\n    magnetic: false,\r\n    static: false,\r\n  };\r\n};\r\n","\"use client\";\r\n\r\nimport { useEffect, useRef } from \"react\";\r\nimport type { PlayerRef } from \"@remotion/player\";\r\nimport { Player as RemotionPlayer } from \"@remotion/player\";\r\nimport { useStore, Composition } from \"super-timeline\";\r\n\r\nexport const Player = () => {\r\n  const playerRef = useRef<PlayerRef>(null);\r\n  const { setPlayerRef, duration, fps, size } = useStore();\r\n\r\n  useEffect(() => {\r\n    setPlayerRef(playerRef as any);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"size-full flex\">\r\n      <RemotionPlayer\r\n        ref={playerRef as any}\r\n        component={Composition}\r\n        durationInFrames={Math.round((duration / 1000) * fps) || 5 * 30}\r\n        compositionWidth={size.width}\r\n        compositionHeight={size.height}\r\n        style={{ width: \"100%\", height: \"400px\" }}\r\n        fps={fps}\r\n        overflowVisible\r\n        numberOfSharedAudioTags={10}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport { Player } from \"./player\";\r\n\r\nexport const Scene = () => {\r\n  return (\r\n    <div className=\"bg-scene py-3 size-full flex justify-center flex-1\">\r\n      <div className=\"max-w-3xl flex-1 size-full flex relative\">\r\n        <Player />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport type { FC, ReactNode } from \"react\";\r\n\r\ninterface TimelineWrapperProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const TimelineWrapper: FC<TimelineWrapperProps> = ({ children }) => {\r\n  useEffect(() => {\r\n    // Загружаем CSS только когда компонент монтируется\r\n    import(\"super-timeline/style.css\");\r\n\r\n    // Очищаем стили при размонтировании\r\n    return () => {\r\n      // Можно добавить логику очистки стилей если нужно\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"relative flex size-full flex-col min-h-screen\">\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","\"use client\";\r\nimport { IDataUpdate, IProjectRead } from \"@turbo-super/api\";\r\n\r\nimport type { FC } from \"react\";\r\nimport { useEffect, useState, useMemo } from \"react\";\r\nimport { ArrowLeft, Download, Users } from \"lucide-react\";\r\nimport { Button } from \"@turbo-super/ui\";\r\nimport Link from \"next/link\";\r\nimport {\r\n  eventBus,\r\n  SCENE_LOAD,\r\n  useItemsHotkeys,\r\n  useStore,\r\n  useTimelineEvents,\r\n  useTimelineHotkeys,\r\n  StateManager,\r\n  TimelineComponent,\r\n  MenuList,\r\n  MenuItem,\r\n  ControlList,\r\n  ControlItem,\r\n  HistoryButtons,\r\n} from \"super-timeline\";\r\n// import \"./styles.css\";\r\nimport { Scene } from \"./components/scene\";\r\nimport { isEqual } from \"lodash\";\r\nimport { TimelineWrapper } from \"./timeline-wrapper\";\r\n\r\ntype Props = {\r\n  timeline: any;\r\n  project: IProjectRead;\r\n  onBack: () => void;\r\n  onExport?: () => void;\r\n  onUpdateTimeline?: (payload: IDataUpdate) => void;\r\n  onRegenerateTimeline?: () => void;\r\n  isGenerating?: boolean;\r\n};\r\n\r\nconst stateManager = new StateManager();\r\n\r\nexport const ProjectTimeline: FC<Props> = ({\r\n  timeline,\r\n  project,\r\n  onBack,\r\n  onExport,\r\n  onUpdateTimeline,\r\n  onRegenerateTimeline,\r\n  isGenerating,\r\n}) => {\r\n  const [isComponentsLoaded, setIsComponentsLoaded] = useState(false);\r\n  const [isClient, setIsClient] = useState(false);\r\n\r\n  const {\r\n    playerRef,\r\n    trackItemDetailsMap,\r\n    tracks,\r\n    trackItemIds,\r\n    trackItemsMap,\r\n  } = useStore();\r\n  const [data, setData] = useState<any>([]);\r\n\r\n  const stableData = useMemo(() => {\r\n    return data;\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (!stableData) return;\r\n    eventBus.dispatch(SCENE_LOAD, {\r\n      payload: stableData,\r\n    });\r\n  }, [stableData]);\r\n\r\n  useEffect(() => {\r\n    if (!project || timeline) return;\r\n    onRegenerateTimeline?.();\r\n  }, [timeline, project]);\r\n\r\n  useEffect(() => {\r\n    if (!timeline) return;\r\n    const timer = setTimeout(() => {\r\n      const timelineData = timeline.value;\r\n      console.log(timelineData);\r\n      setData(timelineData);\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [timeline]);\r\n\r\n  useTimelineEvents();\r\n  useTimelineHotkeys();\r\n  useItemsHotkeys();\r\n\r\n  useEffect(() => {\r\n    setIsClient(true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isClient) {\r\n      const timer = setTimeout(() => {\r\n        console.log(\"⏰ Setting isComponentsLoaded to true\");\r\n        setIsComponentsLoaded(true);\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isClient]);\r\n\r\n  useEffect(() => {\r\n    if (!project || !timeline) return;\r\n    const timer = setTimeout(() => {\r\n      handleUpdateTimeline();\r\n    }, 1500);\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [trackItemsMap, trackItemDetailsMap, tracks, trackItemIds]);\r\n\r\n  const handleUpdateTimeline = () => {\r\n    if (!timeline || !project) return;\r\n\r\n    if (\r\n      !isEqual(timeline.value, {\r\n        ...timeline.value,\r\n        trackItemDetailsMap,\r\n        tracks,\r\n        trackItemIds,\r\n        trackItemsMap,\r\n      })\r\n    ) {\r\n      onUpdateTimeline?.({\r\n        id: timeline.id,\r\n        value: {\r\n          ...timeline.value,\r\n          trackItemDetailsMap,\r\n          tracks,\r\n          trackItemIds,\r\n          trackItemsMap,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // Показываем загрузку пока компоненты не загружены\r\n  if (!isComponentsLoaded || !isClient) {\r\n    return (\r\n      <div className=\"flex min-h-screen size-full items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-2\"></div>\r\n          <p className=\"text-sm text-gray-600\">\r\n            Loading timeline components...\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TimelineWrapper>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"320px 1fr 320px\",\r\n        }}\r\n        className=\"pointer-events-none absolute inset-x-0 top-0 z-[205] flex h-[72px] items-center px-2\"\r\n      >\r\n        <div className=\"pointer-events-auto flex h-14 items-center gap-2\">\r\n          <div className=\"flex h-12 items-center bg-background px-1.5\">\r\n            <Button\r\n              className=\"flex gap-2 text-muted-foreground\"\r\n              variant=\"ghost\"\r\n              onClick={onBack}\r\n            >\r\n              <ArrowLeft /> Back\r\n            </Button>\r\n          </div>\r\n\r\n          <div></div>\r\n          <HistoryButtons />\r\n        </div>\r\n        <div></div>\r\n        <div className=\"pointer-events-auto flex h-14 items-center justify-end gap-2\">\r\n          <div className=\"flex h-12 items-center gap-2 rounded-md bg-background px-2.5\">\r\n            <Button\r\n              onClick={onRegenerateTimeline}\r\n              className=\"min-w-[166px] bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\"\r\n            >\r\n              {isGenerating ? (\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mx-auto mb-2\"></div>\r\n              ) : (\r\n                \"Regenerate Timeline\"\r\n              )}\r\n            </Button>\r\n            <Button\r\n              className=\"flex size-9 gap-1 border border-border\"\r\n              size=\"icon\"\r\n              variant=\"secondary\"\r\n              onClick={onExport}\r\n            >\r\n              <Download width={18} />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          position: \"relative\",\r\n          flex: 1,\r\n          overflow: \"hidden\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <MenuList />\r\n        <MenuItem />\r\n        <ControlList />\r\n        <ControlItem />\r\n        {stableData && stableData.id ? (\r\n          <Scene />\r\n        ) : (\r\n          <>\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"text-center\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900 mx-auto mb-2\"></div>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {!stableData || !stableData.id\r\n                    ? \"Loading timeline data...\"\r\n                    : \"Initializing player...\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\" w-full\">\r\n        {playerRef && <TimelineComponent stateManager={stateManager} />}\r\n      </div>\r\n    </TimelineWrapper>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport type { FC } from \"react\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport { Canvas } from \"fabric\";\r\n\r\nexport const Layer: FC<{\r\n  active?: boolean;\r\n  setCanvas: (canvas: Canvas | null) => void;\r\n  imageUrl?: string;\r\n}> = ({ active, setCanvas, imageUrl }) => {\r\n  const canvasRef = useRef<null | HTMLCanvasElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!canvasRef.current || !containerRef.current) return;\r\n\r\n    // Get real container dimensions\r\n    const container = containerRef.current;\r\n    const rect = container.getBoundingClientRect();\r\n    const width = rect.width;\r\n    const height = rect.height;\r\n\r\n    console.log(\"Creating canvas with dimensions:\", { width, height });\r\n\r\n    const fabricCanvas = new Canvas(canvasRef.current, {\r\n      width,\r\n      height,\r\n      isDrawingMode: false,\r\n    });\r\n\r\n    setCanvas(fabricCanvas);\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n      if (!container) return;\r\n\r\n      const newRect = container.getBoundingClientRect();\r\n      const newWidth = newRect.width;\r\n      const newHeight = newRect.height;\r\n\r\n      console.log(\"Canvas resized to:\", { newWidth, newHeight });\r\n\r\n      if (newWidth !== 0 && newHeight !== 0) {\r\n        fabricCanvas.setDimensions({ width: newWidth, height: newHeight });\r\n        fabricCanvas.renderAll();\r\n      }\r\n    });\r\n\r\n    resizeObserver.observe(container);\r\n\r\n    return () => {\r\n      resizeObserver.unobserve(container);\r\n      resizeObserver.disconnect();\r\n\r\n      void fabricCanvas.dispose();\r\n      setCanvas(null);\r\n    };\r\n  }, [canvasRef]);\r\n\r\n  return (\r\n    <div\r\n      className=\"absolute inset-0 w-full h-full\"\r\n      style={{\r\n        zIndex: active ? 10 : -1,\r\n        pointerEvents: active ? \"auto\" : \"none\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"w-full h-full\"\r\n        ref={containerRef}\r\n      >\r\n        <canvas\r\n          ref={canvasRef}\r\n          className=\"w-full h-full block\"\r\n          style={{\r\n            opacity: 0.5,\r\n            display: \"block\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","\"use client\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { Circle as FabricCircle } from \"fabric\";\r\nimport { PencilBrush, type Canvas, type TPointerEventInfo } from \"fabric\";\r\nimport { Circle, Palette, Trash2, X } from \"lucide-react\";\r\nimport { useEffect, useState, type FC } from \"react\";\r\n\r\ntype Props = {\r\n  canvas?: Canvas | null;\r\n  active?: boolean;\r\n  onActiveChange: (value: string | null) => void;\r\n  isCombined?: boolean;\r\n  onClose: () => void;\r\n};\r\n\r\nexport const cursorName = \"cursor\";\r\n\r\nexport const InpaintingTools: FC<Props> = ({\r\n  canvas,\r\n  onActiveChange,\r\n  active,\r\n  isCombined,\r\n  onClose,\r\n}) => {\r\n  const [width, setWidth] = useState(100);\r\n  const [cursor, setCursor] = useState<FabricCircle | null>(null);\r\n\r\n  const maxBrushWidth = 200;\r\n\r\n  const handleWidthChange = (value: number) => {\r\n    const newWidth = value === 0 ? 1 : value;\r\n    if (cursor) {\r\n      cursor.set({\r\n        radius: newWidth / 2,\r\n      });\r\n      canvas?.renderAll();\r\n    }\r\n    setWidth(newWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const circle = new FabricCircle({\r\n      radius: width / 2,\r\n      fill: \"rgba(0, 0, 0, 0.3)\",\r\n      selectable: false,\r\n      evented: false,\r\n      visible: false,\r\n    });\r\n\r\n    circle.set(\"name\", cursorName);\r\n    canvas.add(circle);\r\n    setCursor(circle);\r\n\r\n    const updateCursorPosition = (options: TPointerEventInfo) => {\r\n      const pointer = canvas.getScenePoint(options.e);\r\n      circle.set({\r\n        left: pointer.x - width / 2,\r\n        top: pointer.y - width / 2,\r\n        visible: active,\r\n      });\r\n      canvas.renderAll();\r\n    };\r\n\r\n    canvas.on(\"mouse:move\", updateCursorPosition);\r\n\r\n    return () => {\r\n      canvas.off(\"mouse:move\", updateCursorPosition);\r\n      canvas.remove(circle);\r\n    };\r\n  }, [canvas, width, active]);\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n    if (!canvas.freeDrawingBrush) return;\r\n    canvas.freeDrawingBrush.width = width;\r\n  }, [width, canvas]);\r\n\r\n  const handleDrawingModeChange = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    e.stopPropagation();\r\n    if (!canvas) return;\r\n\r\n    if (active) {\r\n      onActiveChange(null);\r\n      if (isCombined) {\r\n        onClose();\r\n      }\r\n    } else {\r\n      onActiveChange(\"inpainting\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteObjects = () => {\r\n    if (!canvas) return;\r\n    canvas.clear();\r\n\r\n    if (cursor) {\r\n      canvas.add(cursor);\r\n      canvas.renderAll();\r\n    }\r\n  };\r\n\r\n  const switchToPencil = () => {\r\n    if (!canvas) return;\r\n    canvas.freeDrawingBrush ??= new PencilBrush(canvas);\r\n\r\n    canvas.renderAll();\r\n    canvas.freeDrawingBrush.width = width;\r\n    canvas.freeDrawingBrush.color = \"#a3e635\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    if (active) {\r\n      canvas.isDrawingMode = true;\r\n      switchToPencil();\r\n    } else {\r\n      canvas.isDrawingMode = false;\r\n    }\r\n  }, [active, canvas]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-4 w-full\">\r\n      <div\r\n        role=\"button\"\r\n        className={clsx(\r\n          \"flex gap-3 items-center cursor-pointer p-3 rounded-lg border-2 transition-all\",\r\n          {\r\n            \"border-red-400 bg-red-50 dark:bg-red-950/50 text-red-700 dark:text-red-300 hover:bg-red-100 dark:hover:bg-red-900/70\":\r\n              active,\r\n            \"border-gray-300 dark:border-gray-600 bg-gray-50 dark:bg-gray-800/50 text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700/70\":\r\n              !active,\r\n          }\r\n        )}\r\n        onClick={handleDrawingModeChange}\r\n      >\r\n        {active ? (\r\n          <>\r\n            <X className=\"w-5 h-5\" />\r\n            <span className=\"font-semibold\">CLOSE</span>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Palette className=\"w-5 h-5\" />\r\n            <span className=\"font-semibold\">INPAINTING</span>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        className={clsx(\r\n          \"w-full p-3 rounded-lg border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800/50 transition-all duration-300\",\r\n          active ? \"opacity-100\" : \"opacity-0\"\r\n        )}\r\n      >\r\n        <div className=\"flex items-center gap-3 mb-2\">\r\n          <Circle\r\n            size={15}\r\n            className=\"text-gray-500 dark:text-gray-400\"\r\n          />\r\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n            Brush Size\r\n          </span>\r\n          <Circle\r\n            size={30}\r\n            className=\"text-gray-500 dark:text-gray-400\"\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max={maxBrushWidth}\r\n          value={width}\r\n          onChange={(e) => handleWidthChange(Number(e.target.value))}\r\n          className=\"w-full h-2 bg-gray-200 dark:bg-gray-600 rounded-lg appearance-none cursor-pointer slider\"\r\n        />\r\n        <div className=\"text-center text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n          {width}px\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        role=\"button\"\r\n        className={clsx(\r\n          \"flex gap-3 items-center cursor-pointer p-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800/50 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700/70 transition-all\",\r\n          {\r\n            \"opacity-100\": active,\r\n            \"opacity-0 pointer-events-none\": !active,\r\n          }\r\n        )}\r\n        onClick={handleDeleteObjects}\r\n      >\r\n        <Trash2 className=\"w-5 h-5 text-red-500\" />\r\n        <span className=\"font-medium\">Clear selection</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport type { Canvas } from \"fabric\";\r\nimport type { FC } from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { cursorName } from \"./inpainting-tools\";\r\nimport { Textarea } from \"@turbo-super/ui\";\r\n\r\ntype Props = {\r\n  canvas?: Canvas | null;\r\n  onComplete?: (prompt: string, mask: File, generationConfig: string) => void;\r\n  loading?: boolean;\r\n  initialPrompt?: string;\r\n};\r\n\r\nexport const InpaintingForm: FC<Props> = ({\r\n  canvas,\r\n  onComplete,\r\n  loading = false,\r\n  initialPrompt = \"\",\r\n}) => {\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [prompt, setPrompt] = useState(initialPrompt);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!canvas) return;\r\n\r\n    const updateDisable = () => {\r\n      const filteredCanvas = canvas\r\n        .getObjects()\r\n        .filter((obj) => obj.get(\"name\") !== cursorName);\r\n      setDisabled(!filteredCanvas.length);\r\n    };\r\n\r\n    canvas.on(\"object:added\", updateDisable);\r\n    canvas.on(\"object:removed\", updateDisable);\r\n\r\n    return () => {\r\n      canvas.off(\"object:added\", updateDisable);\r\n      canvas.off(\"object:removed\", updateDisable);\r\n      setDisabled(true);\r\n    };\r\n  }, [canvas]);\r\n\r\n  const handleClick = () => {\r\n    if (!canvas || !onComplete) return;\r\n\r\n    try {\r\n      canvas.getElement().toBlob((blob) => {\r\n        if (!blob) {\r\n          setError(\"Error creating mask\");\r\n          return;\r\n        }\r\n\r\n        onComplete(\r\n          prompt.trim(),\r\n          new File([blob], \"mask.png\", { type: \"image/png\" }),\r\n          \"comfyui/flux/inpainting\"\r\n        );\r\n      }, \"image/png\");\r\n    } catch (error) {\r\n      setError(\"Processing error\");\r\n      console.error(\"Inpainting error:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePromptChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setPrompt(e.target.value);\r\n    if (error) {\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-col gap-4 justify-end p-4 bg-white dark:bg-gray-800/50 rounded-lg border border-gray-200 dark:border-gray-700\">\r\n      <div className=\"space-y-3\">\r\n        <label className=\"block text-sm font-semibold text-gray-700 dark:text-gray-300\">\r\n          Prompt\r\n        </label>\r\n        <Textarea\r\n          className=\"w-full resize-none border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400\"\r\n          value={prompt}\r\n          onChange={handlePromptChange}\r\n          placeholder=\"Describe what should appear in the painted area...\"\r\n          autoFocus\r\n          rows={4}\r\n        />\r\n        {error && (\r\n          <div className=\"text-sm text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/20 p-2 rounded border border-red-200 dark:border-red-800\">\r\n            {error}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <button\r\n        disabled={disabled || loading}\r\n        onClick={handleClick}\r\n        className=\"w-full px-4 py-3 bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 dark:bg-blue-500 dark:hover:bg-blue-600 dark:disabled:bg-gray-600 text-white font-semibold rounded-lg transition-colors disabled:cursor-not-allowed shadow-sm\"\r\n      >\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center gap-2\">\r\n            <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\r\n            Generating...\r\n          </div>\r\n        ) : (\r\n          \"Generate\"\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport { InpaintingTools } from \"./inpainting-tools\";\r\nimport { InpaintingForm } from \"./inpainting-form\";\r\nimport { Canvas } from \"fabric\";\r\n\r\ntype Props = {\r\n  onGenerating?: () => void;\r\n  isActive?: boolean;\r\n  canvas: Canvas | null;\r\n  setCanvas: (canvas: Canvas | null) => void;\r\n  onComplete?: (result: { prompt: string; mask: File; config: string }) => void;\r\n  loading?: boolean;\r\n  initialPrompt?: string;\r\n  onActiveChange?: (tool: string | null) => void;\r\n};\r\n\r\nexport const Control = ({\r\n  onGenerating,\r\n  isActive,\r\n  canvas,\r\n  setCanvas,\r\n  onComplete,\r\n  loading = false,\r\n  initialPrompt = \"\",\r\n  onActiveChange,\r\n}: Props) => {\r\n  const handleInpainting = async (\r\n    prompt: string,\r\n    mask: File,\r\n    generationConfig: string\r\n  ) => {\r\n    onComplete?.({ prompt, mask, config: generationConfig });\r\n  };\r\n\r\n  const handleActiveChange = (tool: string | null) => {\r\n    onActiveChange?.(tool);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"h-full overflow-hidden\"\r\n      style={{\r\n        height: isActive ? \"100%\" : \"85px\",\r\n        transition: \"height 0.25s ease-in-out\",\r\n      }}\r\n    >\r\n      <div className=\"size-full bg-white dark:bg-gray-800/80 border border-gray-200 dark:border-gray-700 rounded-lg shadow-sm\">\r\n        <div className=\"flex flex-col justify-between gap-5 items-start h-full w-full p-4\">\r\n          <InpaintingTools\r\n            active={isActive}\r\n            onActiveChange={handleActiveChange}\r\n            canvas={canvas}\r\n            isCombined={isActive}\r\n            onClose={() => {}}\r\n          />\r\n\r\n          {isActive && (\r\n            <InpaintingForm\r\n              canvas={canvas}\r\n              onComplete={handleInpainting}\r\n              loading={loading}\r\n              initialPrompt={initialPrompt}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Layer } from \"./layer\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Canvas } from \"fabric\";\r\nimport { Control } from \"./control\";\r\n\r\nexport const Inpainting = ({\r\n  imageUrl,\r\n  onGenerating,\r\n  onComplete,\r\n  initialPrompt = \"\",\r\n  isGenerating = false,\r\n}: {\r\n  imageUrl: string;\r\n  onGenerating?: () => void;\r\n  onComplete?: (result: { prompt: string; mask: File; config: string }) => void;\r\n  initialPrompt?: string;\r\n  isGenerating?: boolean;\r\n}) => {\r\n  const [activeTool, setActiveTool] = useState<string | null>(null);\r\n  const [canvas, setCanvas] = useState<Canvas | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (canvas) {\r\n      console.log(\"Canvas is ready\");\r\n    }\r\n  }, [canvas]);\r\n\r\n  const handleGenerating = () => {\r\n    setIsLoading(true);\r\n    onGenerating?.();\r\n  };\r\n\r\n  const handleComplete = (result: {\r\n    prompt: string;\r\n    mask: File;\r\n    config: string;\r\n  }) => {\r\n    setIsLoading(false);\r\n    onComplete?.(result);\r\n    canvas?.clear();\r\n  };\r\n\r\n  // Use external isGenerating or internal isLoading\r\n  const currentLoading = isGenerating || isLoading;\r\n\r\n  const handleActiveToolChange = (tool: string | null) => {\r\n    setActiveTool(tool);\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-full flex flex-row bg-gray-50 dark:bg-gray-900\">\r\n      {/* Central area with background image and canvas overlay */}\r\n      <div\r\n        className=\"flex-1 relative min-h-[550px] bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg m-4 shadow-sm\"\r\n        style={{\r\n          backgroundImage: `url(${imageUrl})`,\r\n          backgroundSize: \"contain\",\r\n          backgroundPosition: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n        }}\r\n      >\r\n        {/* Canvas overlays the image */}\r\n        <Layer\r\n          active={activeTool === \"inpainting\"}\r\n          setCanvas={setCanvas}\r\n          imageUrl={imageUrl}\r\n        />\r\n      </div>\r\n\r\n      {/* Right panel with tools */}\r\n      <div className=\" w-80 lg:min-w-80 p-4 border-l border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900\">\r\n        <Control\r\n          onGenerating={handleGenerating}\r\n          isActive={activeTool === \"inpainting\"}\r\n          canvas={canvas}\r\n          setCanvas={setCanvas}\r\n          onComplete={handleComplete}\r\n          loading={currentLoading}\r\n          initialPrompt={initialPrompt}\r\n          onActiveChange={handleActiveToolChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]}